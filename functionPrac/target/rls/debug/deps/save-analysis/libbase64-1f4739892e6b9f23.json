{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0","program":"/Users/rosehsu/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--edition=2018","--crate-name","base64","/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=1f4739892e6b9f23","-C","extra-filename=-1f4739892e6b9f23","--out-dir","/Users/rosehsu/rust_learning/functionPrac/target/rls/debug/deps","-L","dependency=/Users/rosehsu/rust_learning/functionPrac/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/rosehsu/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/rosehsu/rust_learning/functionPrac/target/rls/debug/deps/libbase64-1f4739892e6b9f23.rmeta"},"prelude":{"crate_id":{"name":"base64","disambiguator":[3456009699506294065,11000980788649284876]},"crate_root":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src","external_crates":[{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15786589783347927115,14932276094748675792]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/chunked_encoder.rs","num":2,"id":{"name":"core","disambiguator":[10298575208133357036,8040858178392247411]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12346914022686079705,4940267238012603511]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[18114786932049689441,12972308710781110595]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3450676385096259377,17670937522874515785]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17577124700929205618,18199936732272738370]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12559880231068804868,15252340553816167694]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[1187771448540952860,5203397268813630476]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[18283159763238190815,6626693072124271590]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[13458662043719537980,9570942752289014475]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[11980204761434995587,1127255387257643439]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[8467147480215253010,13194617755467267743]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8463084087322079994,16053869174229632260]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[16926090732921528503,7551031884587596916]}}],"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","byte_start":0,"byte_end":7018,"line_start":1,"line_end":203,"column_start":1,"column_end":3}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":83},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/write/mod.rs","byte_start":57135,"byte_end":57148,"line_start":3,"line_end":3,"column_start":24,"column_end":37},"alias_span":null,"name":"EncoderWriter","value":"","parent":{"krate":0,"index":67}},{"kind":"Use","ref_id":{"krate":0,"index":138},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","byte_start":3488,"byte_end":3507,"line_start":85,"line_end":85,"column_start":24,"column_end":43},"alias_span":null,"name":"encode_config_slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":132},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","byte_start":3587,"byte_end":3593,"line_start":87,"line_end":87,"column_start":25,"column_end":31},"alias_span":null,"name":"encode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":134},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","byte_start":3595,"byte_end":3608,"line_start":87,"line_end":87,"column_start":33,"column_end":46},"alias_span":null,"name":"encode_config","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":136},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","byte_start":3610,"byte_end":3627,"line_start":87,"line_end":87,"column_start":48,"column_end":65},"alias_span":null,"name":"encode_config_buf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":175},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","byte_start":3721,"byte_end":3727,"line_start":91,"line_end":91,"column_start":25,"column_end":31},"alias_span":null,"name":"decode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":177},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","byte_start":3729,"byte_end":3742,"line_start":91,"line_end":91,"column_start":33,"column_end":46},"alias_span":null,"name":"decode_config","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":180},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","byte_start":3744,"byte_end":3761,"line_start":91,"line_end":91,"column_start":48,"column_end":65},"alias_span":null,"name":"decode_config_buf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":183},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","byte_start":3788,"byte_end":3807,"line_start":92,"line_end":92,"column_start":25,"column_end":44},"alias_span":null,"name":"decode_config_slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":226},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","byte_start":3809,"byte_end":3820,"line_start":92,"line_end":92,"column_start":46,"column_end":57},"alias_span":null,"name":"DecodeError","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","byte_start":0,"byte_end":7018,"line_start":1,"line_end":203,"column_start":1,"column_end":3},"name":"","qualname":"::","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":37},{"krate":0,"index":65},{"krate":0,"index":67},{"krate":0,"index":123},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":156},{"krate":0,"index":193},{"krate":0,"index":197},{"krate":0,"index":248},{"krate":0,"index":258},{"krate":0,"index":257},{"krate":0,"index":255},{"krate":0,"index":200},{"krate":0,"index":260},{"krate":0,"index":267},{"krate":0,"index":266},{"krate":0,"index":264},{"krate":0,"index":205},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213}],"decl_id":null,"docs":" # Configs","sig":null,"attributes":[{"value":"deny(missing_docs, trivial_casts, trivial_numeric_casts,\n       unused_extern_crates, unused_import_braces, unused_results,\n       variant_size_differences, warnings)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","byte_start":2842,"byte_end":3032,"line_start":53,"line_end":62,"column_start":1,"column_end":3}},{"value":"forbid(unsafe_code)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","byte_start":3033,"byte_end":3056,"line_start":63,"line_end":63,"column_start":1,"column_end":24}}]},{"kind":"Type","id":{"krate":0,"index":14},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/chunked_encoder.rs","byte_start":7345,"byte_end":7350,"line_start":13,"line_end":13,"column_start":10,"column_end":15},"name":"Error","qualname":"::chunked_encoder::Sink::Error","value":"type Error;","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":37},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/display.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"display","qualname":"::display","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/display.rs","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":50},{"krate":0,"index":53},{"krate":0,"index":56},{"krate":0,"index":60}],"decl_id":null,"docs":" Enables base64'd output anywhere you might use a `Display` implementation, like a format string.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":46},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/display.rs","byte_start":15142,"byte_end":15155,"line_start":18,"line_end":18,"column_start":12,"column_end":25},"name":"Base64Display","qualname":"::display::Base64Display","value":"Base64Display {  }","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":49}],"decl_id":null,"docs":" A convenience wrapper for base64'ing bytes into a format string without heap allocation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/display.rs","byte_start":15322,"byte_end":15333,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"with_config","qualname":"<Base64Display>::with_config","value":"fn (bytes: &[u8], config: Config) -> Base64Display","parent":null,"children":[],"decl_id":null,"docs":" Create a `Base64Display` with the provided config.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":67},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/write/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"write","qualname":"::write","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/write/mod.rs","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":122}],"decl_id":null,"docs":" Implementations of `io::Write` to transparently handle base64.\n","sig":null,"attributes":[{"value":"cfg(any (feature = \"std\", test))","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","byte_start":3402,"byte_end":3436,"line_start":81,"line_end":81,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":83},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/write/encoder.rs","byte_start":59200,"byte_end":59213,"line_start":59,"line_end":59,"column_start":12,"column_end":25},"name":"EncoderWriter","qualname":"::write::encoder::EncoderWriter","value":"EncoderWriter {  }","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95}],"decl_id":null,"docs":" A `Write` implementation that base64 encodes data before delegating to the wrapped writer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/write/encoder.rs","byte_start":60727,"byte_end":60730,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"new","qualname":"<EncoderWriter>::new","value":"fn (w: &'a mut W, config: Config) -> EncoderWriter<'a, W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that will write to the provided delegate writer `w`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/write/encoder.rs","byte_start":61640,"byte_end":61646,"line_start":119,"line_end":119,"column_start":12,"column_end":18},"name":"finish","qualname":"<EncoderWriter>::finish","value":"fn (&mut self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode all remaining buffered data and write it, including any trailing incomplete input\n triples and associated padding.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":132},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/encode.rs","byte_start":72369,"byte_end":72375,"line_start":23,"line_end":23,"column_start":8,"column_end":14},"name":"encode","qualname":"::encode::encode","value":"fn <T> (input: &T) -> String","parent":null,"children":[],"decl_id":null,"docs":"Encode arbitrary octets as base64.\nReturns a String.\nConvenience for `encode_config(input, base64::STANDARD);`.","sig":null,"attributes":[{"value":"cfg(any (feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/encode.rs","byte_start":72308,"byte_end":72361,"line_start":22,"line_end":22,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":134},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/encode.rs","byte_start":72890,"byte_end":72903,"line_start":44,"line_end":44,"column_start":8,"column_end":21},"name":"encode_config","qualname":"::encode::encode_config","value":"fn <T> (input: &T, config: Config) -> String","parent":null,"children":[],"decl_id":null,"docs":"Encode arbitrary octets as base64.\nReturns a String.","sig":null,"attributes":[{"value":"cfg(any (feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/encode.rs","byte_start":72829,"byte_end":72882,"line_start":43,"line_end":43,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":136},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/encode.rs","byte_start":73874,"byte_end":73891,"line_start":75,"line_end":75,"column_start":8,"column_end":25},"name":"encode_config_buf","qualname":"::encode::encode_config_buf","value":"fn <T> (input: &T, config: Config, buf: &mut String) -> ()","parent":null,"children":[],"decl_id":null,"docs":"Encode arbitrary octets as base64.\nWrites into the supplied output buffer, which will grow the buffer if needed.","sig":null,"attributes":[{"value":"cfg(any (feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/encode.rs","byte_start":73813,"byte_end":73866,"line_start":74,"line_end":74,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":138},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/encode.rs","byte_start":75177,"byte_end":75196,"line_start":118,"line_end":118,"column_start":8,"column_end":27},"name":"encode_config_slice","qualname":"::encode::encode_config_slice","value":"fn <T> (input: &T, config: Config, output: &mut [u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Encode arbitrary octets as base64.\n Writes into the supplied output buffer.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":227},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/decode.rs","byte_start":96344,"byte_end":96355,"line_start":30,"line_end":30,"column_start":5,"column_end":16},"name":"InvalidByte","qualname":"::decode::DecodeError::InvalidByte","value":"DecodeError::InvalidByte(usize, u8)","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" An invalid byte was found in the input. The offset and offending byte are provided.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":231},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/decode.rs","byte_start":96416,"byte_end":96429,"line_start":32,"line_end":32,"column_start":5,"column_end":18},"name":"InvalidLength","qualname":"::decode::DecodeError::InvalidLength","value":"DecodeError::InvalidLength","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" The length of the input is invalid.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":233},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/decode.rs","byte_start":96772,"byte_end":96789,"line_start":37,"line_end":37,"column_start":5,"column_end":22},"name":"InvalidLastSymbol","qualname":"::decode::DecodeError::InvalidLastSymbol","value":"DecodeError::InvalidLastSymbol(usize, u8)","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" The last non-padding input symbol's encoded 6 bits have nonzero bits that will be discarded.\n This is indicative of corrupted or truncated Base64.\n Unlike InvalidByte, which reports symbols that aren't in the alphabet, this error is for\n symbols that are in the alphabet but represent nonsensical encodings.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":226},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/decode.rs","byte_start":96234,"byte_end":96245,"line_start":28,"line_end":28,"column_start":10,"column_end":21},"name":"DecodeError","qualname":"::decode::DecodeError","value":"DecodeError::{InvalidByte, InvalidLength, InvalidLastSymbol}","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":231},{"krate":0,"index":233}],"decl_id":null,"docs":" Errors that can occur while decoding.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":175},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/decode.rs","byte_start":98135,"byte_end":98141,"line_start":84,"line_end":84,"column_start":8,"column_end":14},"name":"decode","qualname":"::decode::decode","value":"fn <T> (input: &T) -> Result<Vec<u8>, DecodeError>","parent":null,"children":[],"decl_id":null,"docs":"Decode from string reference as octets.\nReturns a Result containing a Vec<u8>.\nConvenience `decode_config(input, base64::STANDARD);`.","sig":null,"attributes":[{"value":"cfg(any (feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/decode.rs","byte_start":98074,"byte_end":98127,"line_start":83,"line_end":83,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":177},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/decode.rs","byte_start":98749,"byte_end":98762,"line_start":105,"line_end":105,"column_start":8,"column_end":21},"name":"decode_config","qualname":"::decode::decode_config","value":"fn <T> (input: &T, config: Config) -> Result<Vec<u8>, DecodeError>","parent":null,"children":[],"decl_id":null,"docs":"Decode from string reference as octets.\nReturns a Result containing a Vec<u8>.","sig":null,"attributes":[{"value":"cfg(any (feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/decode.rs","byte_start":98688,"byte_end":98741,"line_start":104,"line_end":104,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":180},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/decode.rs","byte_start":99660,"byte_end":99677,"line_start":136,"line_end":136,"column_start":8,"column_end":25},"name":"decode_config_buf","qualname":"::decode::decode_config_buf","value":"fn <T> (input: &T, config: Config, buffer: &mut Vec<u8>) -> Result<(), DecodeError>","parent":null,"children":[],"decl_id":null,"docs":"Decode from string reference as octets.\nWrites into the supplied buffer to avoid allocation.\nReturns a Result containing an empty tuple, aka ().","sig":null,"attributes":[{"value":"cfg(any (feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/decode.rs","byte_start":99599,"byte_end":99652,"line_start":135,"line_end":135,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":183},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/decode.rs","byte_start":100943,"byte_end":100962,"line_start":172,"line_end":172,"column_start":8,"column_end":27},"name":"decode_config_slice","qualname":"::decode::decode_config_slice","value":"fn <T> (input: &T, config: Config, output: &mut [u8]) -> Result<usize, DecodeError>","parent":null,"children":[],"decl_id":null,"docs":" Decode the input into the provided output slice.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":249},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","byte_start":4079,"byte_end":4087,"line_start":103,"line_end":103,"column_start":5,"column_end":13},"name":"Standard","qualname":"::CharacterSet::Standard","value":"CharacterSet::Standard","parent":{"krate":0,"index":248},"children":[],"decl_id":null,"docs":" The standard character set (uses `+` and `/`).","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":251},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","byte_start":4227,"byte_end":4234,"line_start":107,"line_end":107,"column_start":5,"column_end":12},"name":"UrlSafe","qualname":"::CharacterSet::UrlSafe","value":"CharacterSet::UrlSafe","parent":{"krate":0,"index":248},"children":[],"decl_id":null,"docs":" The URL safe character set (uses `-` and `_`).","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":253},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","byte_start":4460,"byte_end":4465,"line_start":111,"line_end":111,"column_start":5,"column_end":10},"name":"Crypt","qualname":"::CharacterSet::Crypt","value":"CharacterSet::Crypt","parent":{"krate":0,"index":248},"children":[],"decl_id":null,"docs":" The `crypt(3)` character set (uses `./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz`).","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":248},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","byte_start":3926,"byte_end":3938,"line_start":99,"line_end":99,"column_start":10,"column_end":22},"name":"CharacterSet","qualname":"::CharacterSet","value":"CharacterSet::{Standard, UrlSafe, Crypt}","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":251},{"krate":0,"index":253}],"decl_id":null,"docs":" Available encoding character sets\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":260},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","byte_start":5130,"byte_end":5136,"line_start":134,"line_end":134,"column_start":12,"column_end":18},"name":"Config","qualname":"::Config","value":"Config {  }","parent":null,"children":[{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263}],"decl_id":null,"docs":" Contains configuration parameters for base64 encoding\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","byte_start":5455,"byte_end":5458,"line_start":145,"line_end":145,"column_start":12,"column_end":15},"name":"new","qualname":"<Config>::new","value":"fn (char_set: CharacterSet, pad: bool) -> Config","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Config`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","byte_start":5693,"byte_end":5696,"line_start":154,"line_end":154,"column_start":12,"column_end":15},"name":"pad","qualname":"<Config>::pad","value":"fn (self, pad: bool) -> Config","parent":null,"children":[],"decl_id":null,"docs":" Sets whether to pad output with `=` characters.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","byte_start":5978,"byte_end":6004,"line_start":162,"line_end":162,"column_start":12,"column_end":38},"name":"decode_allow_trailing_bits","qualname":"<Config>::decode_allow_trailing_bits","value":"fn (self, allow: bool) -> Config","parent":null,"children":[],"decl_id":null,"docs":" Sets whether to emit errors for nonzero trailing bits.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":209},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","byte_start":6189,"byte_end":6197,"line_start":171,"line_end":171,"column_start":11,"column_end":19},"name":"STANDARD","qualname":"::STANDARD","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" Standard character set with padding.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":210},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","byte_start":6367,"byte_end":6382,"line_start":178,"line_end":178,"column_start":11,"column_end":26},"name":"STANDARD_NO_PAD","qualname":"::STANDARD_NO_PAD","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" Standard character set without padding.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":211},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","byte_start":6549,"byte_end":6557,"line_start":185,"line_end":185,"column_start":11,"column_end":19},"name":"URL_SAFE","qualname":"::URL_SAFE","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" URL-safe character set with padding\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":212},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","byte_start":6725,"byte_end":6740,"line_start":192,"line_end":192,"column_start":11,"column_end":26},"name":"URL_SAFE_NO_PAD","qualname":"::URL_SAFE_NO_PAD","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" URL-safe character set without padding\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":213},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","byte_start":6901,"byte_end":6906,"line_start":199,"line_end":199,"column_start":11,"column_end":16},"name":"CRYPT","qualname":"::CRYPT","value":"Config","parent":null,"children":[],"decl_id":null,"docs":" As per `crypt(3)` requirements\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/chunked_encoder.rs","byte_start":7701,"byte_end":7715,"line_start":27,"line_end":27,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":21},{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/chunked_encoder.rs","byte_start":10035,"byte_end":10045,"line_start":93,"line_end":93,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/chunked_encoder.rs","byte_start":10220,"byte_end":10230,"line_start":100,"line_end":100,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":35},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/display.rs","byte_start":15232,"byte_end":15245,"line_start":23,"line_end":23,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/display.rs","byte_start":15524,"byte_end":15537,"line_start":33,"line_end":33,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/display.rs","byte_start":15858,"byte_end":15871,"line_start":44,"line_end":44,"column_start":51,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/write/encoder.rs","byte_start":60211,"byte_end":60224,"line_start":79,"line_end":79,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/write/encoder.rs","byte_start":60611,"byte_end":60624,"line_start":92,"line_end":92,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/write/encoder.rs","byte_start":64748,"byte_end":64761,"line_start":200,"line_end":200,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":113},{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/write/encoder.rs","byte_start":71604,"byte_end":71617,"line_start":348,"line_end":348,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/decode.rs","byte_start":96827,"byte_end":96838,"line_start":40,"line_end":40,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/decode.rs","byte_start":97389,"byte_end":97400,"line_start":55,"line_end":55,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","byte_start":4475,"byte_end":4487,"line_start":114,"line_end":114,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","byte_start":5404,"byte_end":5410,"line_start":143,"line_end":143,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","byte_start":3381,"byte_end":3388,"line_start":79,"line_end":79,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":37}},{"kind":"Mod","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","byte_start":3445,"byte_end":3450,"line_start":82,"line_end":82,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":67}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/chunked_encoder.rs","byte_start":7701,"byte_end":7715,"line_start":27,"line_end":27,"column_start":6,"column_end":20},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":17},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/chunked_encoder.rs","byte_start":10035,"byte_end":10045,"line_start":93,"line_end":93,"column_start":10,"column_end":20},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":27},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/chunked_encoder.rs","byte_start":10220,"byte_end":10230,"line_start":100,"line_end":100,"column_start":19,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":27},"to":{"krate":0,"index":13}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/display.rs","byte_start":15232,"byte_end":15245,"line_start":23,"line_end":23,"column_start":10,"column_end":23},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":46},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/display.rs","byte_start":15524,"byte_end":15537,"line_start":33,"line_end":33,"column_start":22,"column_end":35},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":46},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/display.rs","byte_start":15858,"byte_end":15871,"line_start":44,"line_end":44,"column_start":51,"column_end":64},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":56},"to":{"krate":0,"index":13}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/write/encoder.rs","byte_start":60211,"byte_end":60224,"line_start":79,"line_end":79,"column_start":35,"column_end":48},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":83},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/write/encoder.rs","byte_start":60611,"byte_end":60624,"line_start":92,"line_end":92,"column_start":20,"column_end":33},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":83},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/write/encoder.rs","byte_start":64748,"byte_end":64761,"line_start":200,"line_end":200,"column_start":30,"column_end":43},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":83},"to":{"krate":1,"index":2903}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/write/encoder.rs","byte_start":71604,"byte_end":71617,"line_start":348,"line_end":348,"column_start":29,"column_end":42},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":83},"to":{"krate":2,"index":1726}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/decode.rs","byte_start":96827,"byte_end":96838,"line_start":40,"line_end":40,"column_start":23,"column_end":34},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/decode.rs","byte_start":97389,"byte_end":97400,"line_start":55,"line_end":55,"column_start":23,"column_end":34},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":226},"to":{"krate":1,"index":1616}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","byte_start":4475,"byte_end":4487,"line_start":114,"line_end":114,"column_start":6,"column_end":18},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":248},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/base64-0.11.0/src/lib.rs","byte_start":5404,"byte_end":5410,"line_start":143,"line_end":143,"column_start":6,"column_end":12},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":260},"to":{"krate":4294967295,"index":4294967295}}]}