{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0","program":"/Users/rosehsu/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--edition=2018","--crate-name","fallible_iterator","/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=8c7efbf941b457aa","-C","extra-filename=-8c7efbf941b457aa","--out-dir","/Users/rosehsu/rust_learning/functionPrac/target/rls/debug/deps","-L","dependency=/Users/rosehsu/rust_learning/functionPrac/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/rosehsu/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/rosehsu/rust_learning/functionPrac/target/rls/debug/deps/libfallible_iterator-8c7efbf941b457aa.rmeta"},"prelude":{"crate_id":{"name":"fallible_iterator","disambiguator":[17264328005242987910,14586804182957382323]},"crate_root":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src","external_crates":[{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[10298575208133357036,8040858178392247411]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[12346914022686079705,4940267238012603511]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[18114786932049689441,12972308710781110595]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","num":4,"id":{"name":"std","disambiguator":[15786589783347927115,14932276094748675792]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3450676385096259377,17670937522874515785]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17577124700929205618,18199936732272738370]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12559880231068804868,15252340553816167694]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[1187771448540952860,5203397268813630476]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[18283159763238190815,6626693072124271590]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[13458662043719537980,9570942752289014475]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[11980204761434995587,1127255387257643439]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[8467147480215253010,13194617755467267743]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8463084087322079994,16053869174229632260]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[16926090732921528503,7551031884587596916]}}],"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":0,"byte_end":67869,"line_start":1,"line_end":2606,"column_start":1,"column_end":82}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":0,"byte_end":67869,"line_start":1,"line_end":2606,"column_start":1,"column_end":82},"name":"","qualname":"::","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":29},{"krate":0,"index":33},{"krate":0,"index":37},{"krate":0,"index":41},{"krate":0,"index":170},{"krate":0,"index":177},{"krate":0,"index":180},{"krate":0,"index":187},{"krate":0,"index":190},{"krate":0,"index":199},{"krate":0,"index":203},{"krate":0,"index":208},{"krate":0,"index":214},{"krate":0,"index":221},{"krate":0,"index":226},{"krate":0,"index":232},{"krate":0,"index":237},{"krate":0,"index":612},{"krate":0,"index":621},{"krate":0,"index":617},{"krate":0,"index":243},{"krate":0,"index":256},{"krate":0,"index":625},{"krate":0,"index":634},{"krate":0,"index":632},{"krate":0,"index":636},{"krate":0,"index":646},{"krate":0,"index":642},{"krate":0,"index":266},{"krate":0,"index":281},{"krate":0,"index":650},{"krate":0,"index":657},{"krate":0,"index":654},{"krate":0,"index":289},{"krate":0,"index":303},{"krate":0,"index":314},{"krate":0,"index":660},{"krate":0,"index":667},{"krate":0,"index":664},{"krate":0,"index":318},{"krate":0,"index":331},{"krate":0,"index":670},{"krate":0,"index":677},{"krate":0,"index":674},{"krate":0,"index":341},{"krate":0,"index":680},{"krate":0,"index":689},{"krate":0,"index":685},{"krate":0,"index":356},{"krate":0,"index":370},{"krate":0,"index":693},{"krate":0,"index":702},{"krate":0,"index":698},{"krate":0,"index":381},{"krate":0,"index":396},{"krate":0,"index":706},{"krate":0,"index":717},{"krate":0,"index":712},{"krate":0,"index":408},{"krate":0,"index":420},{"krate":0,"index":424},{"krate":0,"index":427},{"krate":0,"index":722},{"krate":0,"index":729},{"krate":0,"index":726},{"krate":0,"index":437},{"krate":0,"index":732},{"krate":0,"index":741},{"krate":0,"index":737},{"krate":0,"index":450},{"krate":0,"index":462},{"krate":0,"index":745},{"krate":0,"index":752},{"krate":0,"index":749},{"krate":0,"index":471},{"krate":0,"index":476},{"krate":0,"index":755},{"krate":0,"index":764},{"krate":0,"index":760},{"krate":0,"index":479},{"krate":0,"index":496},{"krate":0,"index":507},{"krate":0,"index":516},{"krate":0,"index":768},{"krate":0,"index":775},{"krate":0,"index":772},{"krate":0,"index":520},{"krate":0,"index":523},{"krate":0,"index":778},{"krate":0,"index":785},{"krate":0,"index":782},{"krate":0,"index":534},{"krate":0,"index":545},{"krate":0,"index":788},{"krate":0,"index":800},{"krate":0,"index":795},{"krate":0,"index":552},{"krate":0,"index":805},{"krate":0,"index":812},{"krate":0,"index":809},{"krate":0,"index":561},{"krate":0,"index":815},{"krate":0,"index":825},{"krate":0,"index":821},{"krate":0,"index":568},{"krate":0,"index":829},{"krate":0,"index":837},{"krate":0,"index":834},{"krate":0,"index":576},{"krate":0,"index":840},{"krate":0,"index":847},{"krate":0,"index":844},{"krate":0,"index":584},{"krate":0,"index":850},{"krate":0,"index":860},{"krate":0,"index":856},{"krate":0,"index":591},{"krate":0,"index":864},{"krate":0,"index":871},{"krate":0,"index":868},{"krate":0,"index":598},{"krate":0,"index":874},{"krate":0,"index":884},{"krate":0,"index":880},{"krate":0,"index":604},{"krate":0,"index":611}],"decl_id":null,"docs":" \"Fallible\" iterators.","sig":null,"attributes":[{"value":"warn(missing_docs)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":2800,"byte_end":2822,"line_start":67,"line_end":67,"column_start":1,"column_end":23}},{"value":"no_std","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":2871,"byte_end":2881,"line_start":69,"line_end":69,"column_start":1,"column_end":11}}]},{"kind":"Trait","id":{"krate":0,"index":41},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":4282,"byte_end":4298,"line_start":132,"line_end":132,"column_start":11,"column_end":27},"name":"FallibleIterator","qualname":"::FallibleIterator","value":"FallibleIterator","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":71},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":89},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":100},{"krate":0,"index":104},{"krate":0,"index":108},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":119},{"krate":0,"index":121},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":146},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":154},{"krate":0,"index":156},{"krate":0,"index":158},{"krate":0,"index":160},{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":167}],"decl_id":null,"docs":" An `Iterator`-like trait that allows for calculation of items to fail.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":42},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":4348,"byte_end":4352,"line_start":134,"line_end":134,"column_start":10,"column_end":14},"name":"Item","qualname":"::FallibleIterator::Item","value":"type Item;","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" The type being iterated over.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":43},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":4388,"byte_end":4393,"line_start":137,"line_end":137,"column_start":10,"column_end":15},"name":"Error","qualname":"::FallibleIterator::Error","value":"type Error;","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" The error type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":4667,"byte_end":4671,"line_start":145,"line_end":145,"column_start":8,"column_end":12},"name":"next","qualname":"::FallibleIterator::next","value":"fn (&mut self) -> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Advances the iterator and returns the next value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":5383,"byte_end":5392,"line_start":162,"line_end":162,"column_start":8,"column_end":17},"name":"size_hint","qualname":"::FallibleIterator::size_hint","value":"fn (&self) -> (usize, Option<usize>)","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Returns bounds on the remaining length of the iterator.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":5366,"byte_end":5375,"line_start":161,"line_end":161,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":5546,"byte_end":5551,"line_start":168,"line_end":168,"column_start":8,"column_end":13},"name":"count","qualname":"::FallibleIterator::count","value":"fn (self) -> Result<usize, Self::Error>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Consumes the iterator, returning the number of remaining items.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":5529,"byte_end":5538,"line_start":167,"line_end":167,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":5742,"byte_end":5746,"line_start":177,"line_end":177,"column_start":8,"column_end":12},"name":"last","qualname":"::FallibleIterator::last","value":"fn (self) -> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Returns the last element of the iterator.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":5725,"byte_end":5734,"line_start":176,"line_end":176,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":5956,"byte_end":5959,"line_start":186,"line_end":186,"column_start":8,"column_end":11},"name":"nth","qualname":"::FallibleIterator::nth","value":"fn (&mut self, mut n: usize) -> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Returns the `n`th element of the iterator.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":5939,"byte_end":5948,"line_start":185,"line_end":185,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":6394,"byte_end":6401,"line_start":202,"line_end":202,"column_start":8,"column_end":15},"name":"step_by","qualname":"::FallibleIterator::step_by","value":"fn (self, step: usize) -> StepBy<Self>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Returns an iterator starting at the same point, but stepping by the given amount at each iteration.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":6377,"byte_end":6386,"line_start":201,"line_end":201,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":6737,"byte_end":6742,"line_start":217,"line_end":217,"column_start":8,"column_end":13},"name":"chain","qualname":"::FallibleIterator::chain","value":"fn <I> (self, it: I) -> Chain<Self, I>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Returns an iterator which yields the elements of this iterator followed\n by another.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":6720,"byte_end":6729,"line_start":216,"line_end":216,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":7129,"byte_end":7132,"line_start":232,"line_end":232,"column_start":8,"column_end":11},"name":"zip","qualname":"::FallibleIterator::zip","value":"fn <I> (self, o: I) -> Zip<Self, I::IntoFallibleIter>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Returns an iterator that yields pairs of this iterator's and another\n iterator's values.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":7112,"byte_end":7121,"line_start":231,"line_end":231,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":7458,"byte_end":7461,"line_start":243,"line_end":243,"column_start":8,"column_end":11},"name":"map","qualname":"::FallibleIterator::map","value":"fn <F, B> (self, f: F) -> Map<Self, F>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Returns an iterator which applies a fallible transform to the elements\n of the underlying iterator.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":7441,"byte_end":7450,"line_start":242,"line_end":242,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":7713,"byte_end":7721,"line_start":253,"line_end":253,"column_start":8,"column_end":16},"name":"for_each","qualname":"::FallibleIterator::for_each","value":"fn <F> (self, mut f: F) -> Result<(), Self::Error>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Calls a fallible closure on each element of an iterator.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":7696,"byte_end":7705,"line_start":252,"line_end":252,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":8113,"byte_end":8119,"line_start":265,"line_end":265,"column_start":8,"column_end":14},"name":"filter","qualname":"::FallibleIterator::filter","value":"fn <F> (self, f: F) -> Filter<Self, F>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Returns an iterator which uses a predicate to determine which values\n should be yielded. The predicate may fail; such failures are passed to\n the caller.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":8096,"byte_end":8105,"line_start":264,"line_end":264,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":8448,"byte_end":8458,"line_start":276,"line_end":276,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::FallibleIterator::filter_map","value":"fn <B, F> (self, f: F) -> FilterMap<Self, F>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Returns an iterator which both filters and maps. The closure may fail;\n such failures are passed along to the consumer.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":8431,"byte_end":8440,"line_start":275,"line_end":275,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":8764,"byte_end":8773,"line_start":287,"line_end":287,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::FallibleIterator::enumerate","value":"fn (self) -> Enumerate<Self>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Returns an iterator which yields the current iteration count as well\n as the value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":8747,"byte_end":8756,"line_start":286,"line_end":286,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":8993,"byte_end":9001,"line_start":297,"line_end":297,"column_start":8,"column_end":16},"name":"peekable","qualname":"::FallibleIterator::peekable","value":"fn (self) -> Peekable<Self>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Returns an iterator that can peek at the next element without consuming\n it.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":8976,"byte_end":8985,"line_start":296,"line_end":296,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":9236,"byte_end":9246,"line_start":309,"line_end":309,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::FallibleIterator::skip_while","value":"fn <P> (self, predicate: P) -> SkipWhile<Self, P>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Returns an iterator that skips elements based on a predicate.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":9219,"byte_end":9228,"line_start":308,"line_end":308,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":9588,"byte_end":9598,"line_start":323,"line_end":323,"column_start":8,"column_end":18},"name":"take_while","qualname":"::FallibleIterator::take_while","value":"fn <P> (self, predicate: P) -> TakeWhile<Self, P>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Returns an iterator that yields elements based on a predicate.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":9571,"byte_end":9580,"line_start":322,"line_end":322,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":9948,"byte_end":9952,"line_start":337,"line_end":337,"column_start":8,"column_end":12},"name":"skip","qualname":"::FallibleIterator::skip","value":"fn (self, n: usize) -> Skip<Self>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Returns an iterator which skips the first `n` values of this iterator.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":9931,"byte_end":9940,"line_start":336,"line_end":336,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":10169,"byte_end":10173,"line_start":347,"line_end":347,"column_start":8,"column_end":12},"name":"take","qualname":"::FallibleIterator::take","value":"fn (self, n: usize) -> Take<Self>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Returns an iterator that yields only the first `n` values of this\n iterator.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":10152,"byte_end":10161,"line_start":346,"line_end":346,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":10435,"byte_end":10439,"line_start":360,"line_end":360,"column_start":8,"column_end":12},"name":"scan","qualname":"::FallibleIterator::scan","value":"fn <St, B, F> (self, initial_state: St, f: F) -> Scan<Self, St, F>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Returns an iterator which applies a stateful map to values of this\n iterator.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":10418,"byte_end":10427,"line_start":359,"line_end":359,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":10848,"byte_end":10856,"line_start":374,"line_end":374,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::FallibleIterator::flat_map","value":"fn <U, F> (self, f: F) -> FlatMap<Self, U, F>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Returns an iterator which maps this iterator's elements to iterators, yielding those iterators' values.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":10831,"byte_end":10840,"line_start":373,"line_end":373,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":11256,"byte_end":11263,"line_start":388,"line_end":388,"column_start":8,"column_end":15},"name":"flatten","qualname":"::FallibleIterator::flatten","value":"fn (self) -> Flatten<Self>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Returns an iterator which flattens an iterator of iterators, yielding those iterators' values.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":11239,"byte_end":11248,"line_start":387,"line_end":387,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":11820,"byte_end":11824,"line_start":406,"line_end":406,"column_start":8,"column_end":12},"name":"fuse","qualname":"::FallibleIterator::fuse","value":"fn (self) -> Fuse<Self>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Returns an iterator which yields this iterator's elements and ends after\n the first `Ok(None)`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":11803,"byte_end":11812,"line_start":405,"line_end":405,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":12070,"byte_end":12077,"line_start":418,"line_end":418,"column_start":8,"column_end":15},"name":"inspect","qualname":"::FallibleIterator::inspect","value":"fn <F> (self, f: F) -> Inspect<Self, F>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Returns an iterator which passes each element to a closure before returning it.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":12053,"byte_end":12062,"line_start":417,"line_end":417,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":12438,"byte_end":12444,"line_start":431,"line_end":431,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::FallibleIterator::by_ref","value":"fn (&mut self) -> &mut Self","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Borrow an iterator rather than consuming it.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":12421,"byte_end":12430,"line_start":430,"line_end":430,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":12683,"byte_end":12690,"line_start":442,"line_end":442,"column_start":8,"column_end":15},"name":"collect","qualname":"::FallibleIterator::collect","value":"fn <T> (self) -> Result<T, Self::Error>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Transforms the iterator into a collection.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":12666,"byte_end":12675,"line_start":441,"line_end":441,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":12962,"byte_end":12971,"line_start":452,"line_end":452,"column_start":8,"column_end":17},"name":"partition","qualname":"::FallibleIterator::partition","value":"fn <B, F> (self, mut f: F) -> Result<(B, B), Self::Error>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Transforms the iterator into two collections, partitioning elements by a closure.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":12945,"byte_end":12954,"line_start":451,"line_end":451,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":13571,"byte_end":13575,"line_start":476,"line_end":476,"column_start":8,"column_end":12},"name":"fold","qualname":"::FallibleIterator::fold","value":"fn <B, F> (mut self, init: B, f: F) -> Result<B, Self::Error>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Applies a function over the elements of the iterator, producing a single\n final value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":13554,"byte_end":13563,"line_start":475,"line_end":475,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":13964,"byte_end":13972,"line_start":488,"line_end":488,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::FallibleIterator::try_fold","value":"fn <B, E, F> (&mut self, mut init: B, mut f: F) -> Result<B, E>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Applies a function over the elements of the iterator, producing a single final value.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":13947,"byte_end":13956,"line_start":487,"line_end":487,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":14349,"byte_end":14352,"line_start":502,"line_end":502,"column_start":8,"column_end":11},"name":"all","qualname":"::FallibleIterator::all","value":"fn <F> (&mut self, mut f: F) -> Result<bool, Self::Error>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Determines if all elements of this iterator match a predicate.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":14332,"byte_end":14341,"line_start":501,"line_end":501,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":14805,"byte_end":14808,"line_start":519,"line_end":519,"column_start":8,"column_end":11},"name":"any","qualname":"::FallibleIterator::any","value":"fn <F> (&mut self, mut f: F) -> Result<bool, Self::Error>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Determines if any element of this iterator matches a predicate.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":14788,"byte_end":14797,"line_start":518,"line_end":518,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":15264,"byte_end":15268,"line_start":536,"line_end":536,"column_start":8,"column_end":12},"name":"find","qualname":"::FallibleIterator::find","value":"fn <F> (&mut self, mut f: F) -> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Returns the first element of the iterator that matches a predicate.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":15247,"byte_end":15256,"line_start":535,"line_end":535,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":15765,"byte_end":15773,"line_start":553,"line_end":553,"column_start":8,"column_end":16},"name":"find_map","qualname":"::FallibleIterator::find_map","value":"fn <B, F> (&mut self, f: F) -> Result<Option<B>, Self::Error>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Applies a function to the elements of the iterator, returning the first non-`None` result.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":15748,"byte_end":15757,"line_start":552,"line_end":552,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":16169,"byte_end":16177,"line_start":565,"line_end":565,"column_start":8,"column_end":16},"name":"position","qualname":"::FallibleIterator::position","value":"fn <F> (&mut self, mut f: F) -> Result<Option<usize>, Self::Error>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Returns the position of the first element of this iterator that matches\n a predicate. The predicate may fail; such failures are returned to the\n caller.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":16152,"byte_end":16161,"line_start":564,"line_end":564,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":16621,"byte_end":16624,"line_start":582,"line_end":582,"column_start":8,"column_end":11},"name":"max","qualname":"::FallibleIterator::max","value":"fn (self) -> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Returns the maximal element of the iterator.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":16604,"byte_end":16613,"line_start":581,"line_end":581,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":16906,"byte_end":16916,"line_start":593,"line_end":593,"column_start":8,"column_end":18},"name":"max_by_key","qualname":"::FallibleIterator::max_by_key","value":"fn <B, F> (mut self, mut f: F) -> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Returns the element of the iterator which gives the maximum value from\n the function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":16889,"byte_end":16898,"line_start":592,"line_end":592,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":17579,"byte_end":17585,"line_start":617,"line_end":617,"column_start":8,"column_end":14},"name":"max_by","qualname":"::FallibleIterator::max_by","value":"fn <F> (mut self, mut f: F) -> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Returns the element that gives the maximum value with respect to the function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":17562,"byte_end":17571,"line_start":616,"line_end":616,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":18157,"byte_end":18160,"line_start":639,"line_end":639,"column_start":8,"column_end":11},"name":"min","qualname":"::FallibleIterator::min","value":"fn (self) -> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Returns the minimal element of the iterator.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":18140,"byte_end":18149,"line_start":638,"line_end":638,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":18442,"byte_end":18452,"line_start":650,"line_end":650,"column_start":8,"column_end":18},"name":"min_by_key","qualname":"::FallibleIterator::min_by_key","value":"fn <B, F> (mut self, mut f: F) -> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Returns the element of the iterator which gives the minimum value from\n the function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":18425,"byte_end":18434,"line_start":649,"line_end":649,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":19115,"byte_end":19121,"line_start":674,"line_end":674,"column_start":8,"column_end":14},"name":"min_by","qualname":"::FallibleIterator::min_by","value":"fn <F> (mut self, mut f: F) -> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Returns the element that gives the minimum value with respect to the function.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":19098,"byte_end":19107,"line_start":673,"line_end":673,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":19730,"byte_end":19733,"line_start":697,"line_end":697,"column_start":8,"column_end":11},"name":"rev","qualname":"::FallibleIterator::rev","value":"fn (self) -> Rev<Self>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Returns an iterator that yields this iterator's items in the opposite\n order.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":19713,"byte_end":19722,"line_start":696,"line_end":696,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":19931,"byte_end":19936,"line_start":706,"line_end":706,"column_start":8,"column_end":13},"name":"unzip","qualname":"::FallibleIterator::unzip","value":"fn <A, B, FromA, FromB> (self) -> Result<(FromA, FromB), Self::Error>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Converts an iterator of pairs into a pair of containers.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":19914,"byte_end":19923,"line_start":705,"line_end":705,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":20489,"byte_end":20495,"line_start":726,"line_end":726,"column_start":8,"column_end":14},"name":"cloned","qualname":"::FallibleIterator::cloned","value":"fn <'a, T> (self) -> Cloned<Self>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Returns an iterator which clones all of its elements.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":20472,"byte_end":20481,"line_start":725,"line_end":725,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":20733,"byte_end":20738,"line_start":736,"line_end":736,"column_start":8,"column_end":13},"name":"cycle","qualname":"::FallibleIterator::cycle","value":"fn (self) -> Cycle<Self>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Returns an iterator which repeas this iterator endlessly.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":20716,"byte_end":20725,"line_start":735,"line_end":735,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":21005,"byte_end":21008,"line_start":749,"line_end":749,"column_start":8,"column_end":11},"name":"cmp","qualname":"::FallibleIterator::cmp","value":"fn <I> (mut self, other: I) -> Result<Ordering, Self::Error>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Lexicographically compares the elements of this iterator to that of\n another.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":20988,"byte_end":20997,"line_start":748,"line_end":748,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":21794,"byte_end":21805,"line_start":773,"line_end":773,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"::FallibleIterator::partial_cmp","value":"fn <I> (mut self, other: I) -> Result<Option<Ordering>, Self::Error>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Lexicographically compares the elements of this iterator to that of\n another.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":21777,"byte_end":21786,"line_start":772,"line_end":772,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":22626,"byte_end":22628,"line_start":797,"line_end":797,"column_start":8,"column_end":10},"name":"eq","qualname":"::FallibleIterator::eq","value":"fn <I> (mut self, other: I) -> Result<bool, Self::Error>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Determines if the elements of this iterator are equal to those of\n another.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":22609,"byte_end":22618,"line_start":796,"line_end":796,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":23339,"byte_end":23341,"line_start":821,"line_end":821,"column_start":8,"column_end":10},"name":"ne","qualname":"::FallibleIterator::ne","value":"fn <I> (mut self, other: I) -> Result<bool, Self::Error>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Determines if the elements of this iterator are not equal to those of\n another.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":23322,"byte_end":23331,"line_start":820,"line_end":820,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":24066,"byte_end":24068,"line_start":845,"line_end":845,"column_start":8,"column_end":10},"name":"lt","qualname":"::FallibleIterator::lt","value":"fn <I> (mut self, other: I) -> Result<bool, Self::Error>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Determines if the elements of this iterator are lexicographically less\n than those of another.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":24049,"byte_end":24058,"line_start":844,"line_end":844,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":24991,"byte_end":24993,"line_start":871,"line_end":871,"column_start":8,"column_end":10},"name":"le","qualname":"::FallibleIterator::le","value":"fn <I> (mut self, other: I) -> Result<bool, Self::Error>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Determines if the elements of this iterator are lexicographically less\n than or equal to those of another.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":24974,"byte_end":24983,"line_start":870,"line_end":870,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":25906,"byte_end":25908,"line_start":897,"line_end":897,"column_start":8,"column_end":10},"name":"gt","qualname":"::FallibleIterator::gt","value":"fn <I> (mut self, other: I) -> Result<bool, Self::Error>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Determines if the elements of this iterator are lexicographically\n greater than those of another.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":25889,"byte_end":25898,"line_start":896,"line_end":896,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":26834,"byte_end":26836,"line_start":923,"line_end":923,"column_start":8,"column_end":10},"name":"ge","qualname":"::FallibleIterator::ge","value":"fn <I> (mut self, other: I) -> Result<bool, Self::Error>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Determines if the elements of this iterator are lexicographically\n greater than or equal to those of another.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":26817,"byte_end":26826,"line_start":922,"line_end":922,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":27713,"byte_end":27721,"line_start":948,"line_end":948,"column_start":8,"column_end":16},"name":"iterator","qualname":"::FallibleIterator::iterator","value":"fn (self) -> Iterator<Self>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Returns a normal (non-fallible) iterator over `Result<Item, Error>`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":27696,"byte_end":27705,"line_start":947,"line_end":947,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":27938,"byte_end":27945,"line_start":958,"line_end":958,"column_start":8,"column_end":15},"name":"map_err","qualname":"::FallibleIterator::map_err","value":"fn <B, F> (self, f: F) -> MapErr<Self, F>","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" Returns an iterator which applies a transform to the errors of the\n underlying iterator.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":27921,"byte_end":27930,"line_start":957,"line_end":957,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":190},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":29570,"byte_end":29597,"line_start":1024,"line_end":1024,"column_start":11,"column_end":38},"name":"DoubleEndedFallibleIterator","qualname":"::DoubleEndedFallibleIterator","value":"DoubleEndedFallibleIterator: FallibleIterator","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":195}],"decl_id":null,"docs":" A fallible iterator able to yield elements from both ends.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":29693,"byte_end":29702,"line_start":1026,"line_end":1026,"column_start":8,"column_end":17},"name":"next_back","qualname":"::DoubleEndedFallibleIterator::next_back","value":"fn (&mut self) -> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":" Advances the end of the iterator, returning the last value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":29891,"byte_end":29896,"line_start":1030,"line_end":1030,"column_start":8,"column_end":13},"name":"rfold","qualname":"::DoubleEndedFallibleIterator::rfold","value":"fn <B, F> (mut self, init: B, f: F) -> Result<B, Self::Error>","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":" Applies a function over the elements of the iterator in reverse order, producing a single final value.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":29874,"byte_end":29883,"line_start":1029,"line_end":1029,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":30308,"byte_end":30317,"line_start":1042,"line_end":1042,"column_start":8,"column_end":17},"name":"try_rfold","qualname":"::DoubleEndedFallibleIterator::try_rfold","value":"fn <B, E, F> (&mut self, mut init: B, mut f: F) -> Result<B, E>","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":" Applies a function over the elements of the iterator in reverse, producing a single final value.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":30291,"byte_end":30300,"line_start":1041,"line_end":1041,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":199},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":30660,"byte_end":30680,"line_start":1056,"line_end":1056,"column_start":11,"column_end":31},"name":"FromFallibleIterator","qualname":"::FromFallibleIterator","value":"FromFallibleIterator<T>: Sized","parent":null,"children":[{"krate":0,"index":201}],"decl_id":null,"docs":" Conversion from a fallible iterator.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":30750,"byte_end":30768,"line_start":1058,"line_end":1058,"column_start":8,"column_end":26},"name":"from_fallible_iter","qualname":"::FromFallibleIterator::from_fallible_iter","value":"fn <I> (it: I) -> Result<Self, I::Error>","parent":{"krate":0,"index":199},"children":[],"decl_id":null,"docs":" Creates a value from a fallible iterator.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":232},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":33285,"byte_end":33305,"line_start":1162,"line_end":1162,"column_start":11,"column_end":31},"name":"IntoFallibleIterator","qualname":"::IntoFallibleIterator","value":"IntoFallibleIterator","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236}],"decl_id":null,"docs":" Conversion into a `FallibleIterator`.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":233},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":33355,"byte_end":33359,"line_start":1164,"line_end":1164,"column_start":10,"column_end":14},"name":"Item","qualname":"::IntoFallibleIterator::Item","value":"type Item;","parent":{"krate":0,"index":232},"children":[],"decl_id":null,"docs":" The elements of the iterator.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":234},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":33412,"byte_end":33417,"line_start":1167,"line_end":1167,"column_start":10,"column_end":15},"name":"Error","qualname":"::IntoFallibleIterator::Error","value":"type Error;","parent":{"krate":0,"index":232},"children":[],"decl_id":null,"docs":" The error value of the iterator.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":235},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":33451,"byte_end":33467,"line_start":1170,"line_end":1170,"column_start":10,"column_end":26},"name":"IntoFallibleIter","qualname":"::IntoFallibleIterator::IntoFallibleIter","value":"type IntoFallibleIter: FallibleIterator<Item = Self::Item, Error = Self::Error>;","parent":{"krate":0,"index":232},"children":[],"decl_id":null,"docs":" The iterator.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":33585,"byte_end":33603,"line_start":1173,"line_end":1173,"column_start":8,"column_end":26},"name":"into_fallible_iter","qualname":"::IntoFallibleIterator::into_fallible_iter","value":"fn (self) -> Self::IntoFallibleIter","parent":{"krate":0,"index":232},"children":[],"decl_id":null,"docs":" Creates a fallible iterator from a value.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":612},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":34001,"byte_end":34004,"line_start":1193,"line_end":1193,"column_start":12,"column_end":15},"name":"Map","qualname":"::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":615},{"krate":0,"index":616}],"decl_id":null,"docs":" An iterator which applies a fallible transform to the elements of the\n underlying iterator.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":636},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":35649,"byte_end":35654,"line_start":1265,"line_end":1265,"column_start":12,"column_end":17},"name":"Chain","qualname":"::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":641}],"decl_id":null,"docs":" An iterator which yields the elements of one iterator followed by another.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":650},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":39811,"byte_end":39817,"line_start":1405,"line_end":1405,"column_start":12,"column_end":18},"name":"Cloned","qualname":"::Cloned","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator which clones the elements of the underlying iterator.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":314},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":41052,"byte_end":41059,"line_start":1457,"line_end":1457,"column_start":8,"column_end":15},"name":"convert","qualname":"::convert","value":"fn <T, E, I> (it: I) -> Convert<I>","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator<Item = Result<T, E>>` into a `FallibleIterator<Item = T, Error = E>`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":41035,"byte_end":41044,"line_start":1456,"line_end":1456,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":660},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":41265,"byte_end":41272,"line_start":1466,"line_end":1466,"column_start":12,"column_end":19},"name":"Convert","qualname":"::Convert","value":"","parent":null,"children":[],"decl_id":null,"docs":" A fallible iterator that wraps a normal iterator over `Result`s.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":670},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":42664,"byte_end":42673,"line_start":1525,"line_end":1525,"column_start":12,"column_end":21},"name":"Enumerate","qualname":"::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":672},{"krate":0,"index":673}],"decl_id":null,"docs":" An iterator that yields the iteration count as well as the values of the\n underlying iterator.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":680},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":44115,"byte_end":44121,"line_start":1588,"line_end":1588,"column_start":12,"column_end":18},"name":"Filter","qualname":"::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":683},{"krate":0,"index":684}],"decl_id":null,"docs":" An iterator which uses a fallible predicate to determine which values of the\n underlying iterator should be yielded.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":693},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":46363,"byte_end":46372,"line_start":1682,"line_end":1682,"column_start":12,"column_end":21},"name":"FilterMap","qualname":"::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":696},{"krate":0,"index":697}],"decl_id":null,"docs":" An iterator which both filters and maps the values of the underlying\n iterator.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":706},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":48342,"byte_end":48349,"line_start":1759,"line_end":1759,"column_start":12,"column_end":19},"name":"FlatMap","qualname":"::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":710},{"krate":0,"index":711}],"decl_id":null,"docs":" An iterator which maps each element to another iterator, yielding those iterator's elements.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":420},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":49903,"byte_end":49910,"line_start":1818,"line_end":1818,"column_start":12,"column_end":19},"name":"Flatten","qualname":"::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":422},{"krate":0,"index":423}],"decl_id":null,"docs":" An iterator which flattens an iterator of iterators, yielding those iterators' elements.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":722},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":51897,"byte_end":51901,"line_start":1894,"line_end":1894,"column_start":12,"column_end":16},"name":"Fuse","qualname":"::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":724},{"krate":0,"index":725}],"decl_id":null,"docs":" An iterator that yields `Ok(None)` forever after the underlying iterator\n yields `Ok(None)` once.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":732},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":53594,"byte_end":53601,"line_start":1977,"line_end":1977,"column_start":12,"column_end":19},"name":"Inspect","qualname":"::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":735},{"krate":0,"index":736}],"decl_id":null,"docs":" An iterator which passes each element to a closure before returning it.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":745},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":55325,"byte_end":55333,"line_start":2052,"line_end":2052,"column_start":12,"column_end":20},"name":"Iterator","qualname":"::Iterator","value":"","parent":null,"children":[],"decl_id":null,"docs":" A normal (non-fallible) iterator which wraps a fallible iterator.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":755},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":56241,"byte_end":56247,"line_start":2092,"line_end":2092,"column_start":12,"column_end":18},"name":"MapErr","qualname":"::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":758},{"krate":0,"index":759}],"decl_id":null,"docs":" An iterator which applies a transform to the errors of the underlying\n iterator.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":768},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":58390,"byte_end":58398,"line_start":2184,"line_end":2184,"column_start":12,"column_end":20},"name":"Peekable","qualname":"::Peekable","value":"Peekable {  }","parent":null,"children":[{"krate":0,"index":770},{"krate":0,"index":771}],"decl_id":null,"docs":" An iterator which can look at the next element without consuming it.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":58619,"byte_end":58623,"line_start":2195,"line_end":2195,"column_start":12,"column_end":16},"name":"peek","qualname":"<Peekable<I>>::peek","value":"fn (&mut self) -> Result<Option<&I::Item>, I::Error>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the next value without advancing the iterator.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":58598,"byte_end":58607,"line_start":2194,"line_end":2194,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":778},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":59856,"byte_end":59859,"line_start":2247,"line_end":2247,"column_start":12,"column_end":15},"name":"Rev","qualname":"::Rev","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator which yields elements of the underlying iterator in reverse\n order.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":788},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":61015,"byte_end":61019,"line_start":2302,"line_end":2302,"column_start":12,"column_end":16},"name":"Scan","qualname":"::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":792},{"krate":0,"index":793},{"krate":0,"index":794}],"decl_id":null,"docs":" An iterator which applies a stateful closure.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":805},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":61686,"byte_end":61690,"line_start":2333,"line_end":2333,"column_start":12,"column_end":16},"name":"Skip","qualname":"::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":807},{"krate":0,"index":808}],"decl_id":null,"docs":" An iterator which skips initial elements.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":815},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":62423,"byte_end":62432,"line_start":2369,"line_end":2369,"column_start":12,"column_end":21},"name":"SkipWhile","qualname":"::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":820}],"decl_id":null,"docs":" An iterator which skips initial elements based on a predicate.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":829},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":63364,"byte_end":63370,"line_start":2410,"line_end":2410,"column_start":12,"column_end":18},"name":"StepBy","qualname":"::StepBy","value":"StepBy {  }","parent":null,"children":[{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833}],"decl_id":null,"docs":" An iterator which steps through the elements of the underlying iterator by a certain amount.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":840},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":64414,"byte_end":64418,"line_start":2455,"line_end":2455,"column_start":12,"column_end":16},"name":"Take","qualname":"::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":842},{"krate":0,"index":843}],"decl_id":null,"docs":" An iterator which yields a limited number of elements from the underlying\n iterator.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":850},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":65199,"byte_end":65208,"line_start":2492,"line_end":2492,"column_start":12,"column_end":21},"name":"TakeWhile","qualname":"::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855}],"decl_id":null,"docs":" An iterator which yields elements based on a predicate.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":864},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":66253,"byte_end":66258,"line_start":2538,"line_end":2538,"column_start":12,"column_end":17},"name":"Cycle","qualname":"::Cycle","value":"Cycle {  }","parent":null,"children":[{"krate":0,"index":866},{"krate":0,"index":867}],"decl_id":null,"docs":" An iterator which cycles another endlessly.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":874},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":66929,"byte_end":66932,"line_start":2570,"line_end":2570,"column_start":12,"column_end":15},"name":"Zip","qualname":"::Zip","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator that yields pairs of this iterator's and another iterator's\n values.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":3750,"byte_end":3758,"line_start":109,"line_end":109,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":3953,"byte_end":3959,"line_start":120,"line_end":120,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":28854,"byte_end":28857,"line_start":995,"line_end":995,"column_start":57,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":29369,"byte_end":29372,"line_start":1016,"line_end":1016,"column_start":79,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":30945,"byte_end":30948,"line_start":1064,"line_end":1064,"column_start":37,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":31324,"byte_end":31331,"line_start":1078,"line_end":1078,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":31842,"byte_end":31849,"line_start":1100,"line_end":1100,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":32392,"byte_end":32400,"line_start":1122,"line_end":1122,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":32849,"byte_end":32857,"line_start":1142,"line_end":1142,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":33673,"byte_end":33674,"line_start":1176,"line_end":1176,"column_start":34,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":34072,"byte_end":34075,"line_start":1198,"line_end":1198,"column_start":36,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":34849,"byte_end":34852,"line_start":1231,"line_end":1231,"column_start":47,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":35748,"byte_end":35753,"line_start":1271,"line_end":1271,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":278},{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":38534,"byte_end":38539,"line_start":1365,"line_end":1365,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":39862,"byte_end":39868,"line_start":1407,"line_end":1407,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":297},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":40486,"byte_end":40492,"line_start":1435,"line_end":1435,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":41316,"byte_end":41323,"line_start":1468,"line_end":1468,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":42006,"byte_end":42013,"line_start":1499,"line_end":1499,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":335},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":42736,"byte_end":42745,"line_start":1530,"line_end":1530,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":44186,"byte_end":44192,"line_start":1593,"line_end":1593,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":364},{"krate":0,"index":365}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":45306,"byte_end":45312,"line_start":1640,"line_end":1640,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":373},{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":46440,"byte_end":46449,"line_start":1687,"line_end":1687,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":390},{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":47416,"byte_end":47425,"line_start":1726,"line_end":1726,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":48491,"byte_end":48498,"line_start":1767,"line_end":1767,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":50084,"byte_end":50091,"line_start":1827,"line_end":1827,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":50419,"byte_end":50426,"line_start":1842,"line_end":1842,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":51966,"byte_end":51970,"line_start":1899,"line_end":1899,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":53666,"byte_end":53673,"line_start":1982,"line_end":1982,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":54530,"byte_end":54537,"line_start":2020,"line_end":2020,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":465},{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":55369,"byte_end":55377,"line_start":2054,"line_end":2054,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":55821,"byte_end":55829,"line_start":2075,"line_end":2075,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":56315,"byte_end":56321,"line_start":2097,"line_end":2097,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":57474,"byte_end":57480,"line_start":2145,"line_end":2145,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":500},{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":58177,"byte_end":58186,"line_start":2175,"line_end":2175,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":519}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":58471,"byte_end":58479,"line_start":2189,"line_end":2189,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":58829,"byte_end":58837,"line_start":2204,"line_end":2204,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":59897,"byte_end":59900,"line_start":2249,"line_end":2249,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":60556,"byte_end":60559,"line_start":2281,"line_end":2281,"column_start":41,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":547},{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":61110,"byte_end":61114,"line_start":2308,"line_end":2308,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":61753,"byte_end":61757,"line_start":2338,"line_end":2338,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":62521,"byte_end":62530,"line_start":2375,"line_end":2375,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":63458,"byte_end":63464,"line_start":2416,"line_end":2416,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":64489,"byte_end":64493,"line_start":2460,"line_end":2460,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":65297,"byte_end":65306,"line_start":2498,"line_end":2498,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":66319,"byte_end":66324,"line_start":2543,"line_end":2543,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":66979,"byte_end":66982,"line_start":2572,"line_end":2572,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":3750,"byte_end":3758,"line_start":109,"line_end":109,"column_start":24,"column_end":32},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":20},"to":{"krate":1,"index":2258}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":3953,"byte_end":3959,"line_start":120,"line_end":120,"column_start":32,"column_end":38},"kind":{"Impl":{"id":1}},"from":{"krate":1,"index":29578},"to":{"krate":0,"index":33}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":28854,"byte_end":28857,"line_start":995,"line_end":995,"column_start":57,"column_end":60},"kind":{"Impl":{"id":2}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":41}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":29369,"byte_end":29372,"line_start":1016,"line_end":1016,"column_start":79,"column_end":82},"kind":{"Impl":{"id":3}},"from":{"krate":5,"index":81},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":29599,"byte_end":29615,"line_start":1024,"line_end":1024,"column_start":40,"column_end":56},"kind":"SuperTrait","from":{"krate":0,"index":41},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":30685,"byte_end":30690,"line_start":1056,"line_end":1056,"column_start":36,"column_end":41},"kind":"SuperTrait","from":{"krate":1,"index":1538},"to":{"krate":0,"index":199}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":30945,"byte_end":30948,"line_start":1064,"line_end":1064,"column_start":37,"column_end":40},"kind":{"Impl":{"id":4}},"from":{"krate":5,"index":3846},"to":{"krate":0,"index":199}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":31324,"byte_end":31331,"line_start":1078,"line_end":1078,"column_start":40,"column_end":47},"kind":{"Impl":{"id":5}},"from":{"krate":4,"index":6273},"to":{"krate":0,"index":199}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":31842,"byte_end":31849,"line_start":1100,"line_end":1100,"column_start":48,"column_end":55},"kind":{"Impl":{"id":6}},"from":{"krate":4,"index":6247},"to":{"krate":0,"index":199}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":32392,"byte_end":32400,"line_start":1122,"line_end":1122,"column_start":37,"column_end":45},"kind":{"Impl":{"id":7}},"from":{"krate":5,"index":4321},"to":{"krate":0,"index":199}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":32849,"byte_end":32857,"line_start":1142,"line_end":1142,"column_start":45,"column_end":53},"kind":{"Impl":{"id":8}},"from":{"krate":5,"index":568},"to":{"krate":0,"index":199}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":33673,"byte_end":33674,"line_start":1176,"line_end":1176,"column_start":34,"column_end":35},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":238},"to":{"krate":0,"index":232}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":34072,"byte_end":34075,"line_start":1198,"line_end":1198,"column_start":36,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":612},"to":{"krate":0,"index":41}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":34849,"byte_end":34852,"line_start":1231,"line_end":1231,"column_start":47,"column_end":50},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":612},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":35748,"byte_end":35753,"line_start":1271,"line_end":1271,"column_start":33,"column_end":38},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":636},"to":{"krate":0,"index":41}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":38534,"byte_end":38539,"line_start":1365,"line_end":1365,"column_start":44,"column_end":49},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":636},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":39862,"byte_end":39868,"line_start":1407,"line_end":1407,"column_start":37,"column_end":43},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":650},"to":{"krate":0,"index":41}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":40486,"byte_end":40492,"line_start":1435,"line_end":1435,"column_start":48,"column_end":54},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":650},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":41316,"byte_end":41323,"line_start":1468,"line_end":1468,"column_start":36,"column_end":43},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":660},"to":{"krate":0,"index":41}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":42006,"byte_end":42013,"line_start":1499,"line_end":1499,"column_start":47,"column_end":54},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":660},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":42736,"byte_end":42745,"line_start":1530,"line_end":1530,"column_start":30,"column_end":39},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":670},"to":{"krate":0,"index":41}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":44186,"byte_end":44192,"line_start":1593,"line_end":1593,"column_start":33,"column_end":39},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":680},"to":{"krate":0,"index":41}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":45306,"byte_end":45312,"line_start":1640,"line_end":1640,"column_start":44,"column_end":50},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":680},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":46440,"byte_end":46449,"line_start":1687,"line_end":1687,"column_start":36,"column_end":45},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":693},"to":{"krate":0,"index":41}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":47416,"byte_end":47425,"line_start":1726,"line_end":1726,"column_start":47,"column_end":56},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":693},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":48491,"byte_end":48498,"line_start":1767,"line_end":1767,"column_start":36,"column_end":43},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":706},"to":{"krate":0,"index":41}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":50084,"byte_end":50091,"line_start":1827,"line_end":1827,"column_start":19,"column_end":26},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":420},"to":{"krate":1,"index":2181}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":50419,"byte_end":50426,"line_start":1842,"line_end":1842,"column_start":30,"column_end":37},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":420},"to":{"krate":0,"index":41}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":51966,"byte_end":51970,"line_start":1899,"line_end":1899,"column_start":30,"column_end":34},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":722},"to":{"krate":0,"index":41}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":53666,"byte_end":53673,"line_start":1982,"line_end":1982,"column_start":33,"column_end":40},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":732},"to":{"krate":0,"index":41}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":54530,"byte_end":54537,"line_start":2020,"line_end":2020,"column_start":44,"column_end":51},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":732},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":55369,"byte_end":55377,"line_start":2054,"line_end":2054,"column_start":28,"column_end":36},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":745},"to":{"krate":1,"index":3653}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":55821,"byte_end":55829,"line_start":2075,"line_end":2075,"column_start":33,"column_end":41},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":745},"to":{"krate":1,"index":3910}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":56315,"byte_end":56321,"line_start":2097,"line_end":2097,"column_start":36,"column_end":42},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":755},"to":{"krate":0,"index":41}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":57474,"byte_end":57480,"line_start":2145,"line_end":2145,"column_start":47,"column_end":53},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":755},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":58177,"byte_end":58186,"line_start":2175,"line_end":2175,"column_start":24,"column_end":33},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":507},"to":{"krate":1,"index":2258}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":58471,"byte_end":58479,"line_start":2189,"line_end":2189,"column_start":9,"column_end":17},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":768},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":58829,"byte_end":58837,"line_start":2204,"line_end":2204,"column_start":30,"column_end":38},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":768},"to":{"krate":0,"index":41}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":59897,"byte_end":59900,"line_start":2249,"line_end":2249,"column_start":30,"column_end":33},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":778},"to":{"krate":0,"index":41}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":60556,"byte_end":60559,"line_start":2281,"line_end":2281,"column_start":41,"column_end":44},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":778},"to":{"krate":0,"index":190}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":61110,"byte_end":61114,"line_start":2308,"line_end":2308,"column_start":40,"column_end":44},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":788},"to":{"krate":0,"index":41}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":61753,"byte_end":61757,"line_start":2338,"line_end":2338,"column_start":30,"column_end":34},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":805},"to":{"krate":0,"index":41}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":62521,"byte_end":62530,"line_start":2375,"line_end":2375,"column_start":33,"column_end":42},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":815},"to":{"krate":0,"index":41}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":63458,"byte_end":63464,"line_start":2416,"line_end":2416,"column_start":30,"column_end":36},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":829},"to":{"krate":0,"index":41}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":64489,"byte_end":64493,"line_start":2460,"line_end":2460,"column_start":30,"column_end":34},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":840},"to":{"krate":0,"index":41}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":65297,"byte_end":65306,"line_start":2498,"line_end":2498,"column_start":33,"column_end":42},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":850},"to":{"krate":0,"index":41}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":66319,"byte_end":66324,"line_start":2543,"line_end":2543,"column_start":30,"column_end":35},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":864},"to":{"krate":0,"index":41}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/fallible-iterator-0.2.0/src/lib.rs","byte_start":66979,"byte_end":66982,"line_start":2572,"line_end":2572,"column_start":33,"column_end":36},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":874},"to":{"krate":0,"index":41}}]}