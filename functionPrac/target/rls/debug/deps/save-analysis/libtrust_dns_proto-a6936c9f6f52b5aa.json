{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2","program":"/Users/rosehsu/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--edition=2018","--crate-name","trust_dns_proto","/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"tokio\"","--cfg","feature=\"tokio-compat\"","-C","metadata=a6936c9f6f52b5aa","-C","extra-filename=-a6936c9f6f52b5aa","--out-dir","/Users/rosehsu/rust_learning/functionPrac/target/rls/debug/deps","-L","dependency=/Users/rosehsu/rust_learning/functionPrac/target/rls/debug/deps","--extern","async_trait=/Users/rosehsu/rust_learning/functionPrac/target/rls/debug/deps/libasync_trait-c988ead0b6348271.dylib","--extern","enum_as_inner=/Users/rosehsu/rust_learning/functionPrac/target/rls/debug/deps/libenum_as_inner-43b13740de98e767.dylib","--extern","failure=/Users/rosehsu/rust_learning/functionPrac/target/rls/debug/deps/libfailure-b8bce18ad0c40050.rmeta","--extern","futures=/Users/rosehsu/rust_learning/functionPrac/target/rls/debug/deps/libfutures-d6a5b2e5ea1172bc.rmeta","--extern","idna=/Users/rosehsu/rust_learning/functionPrac/target/rls/debug/deps/libidna-e3db7ca62118342d.rmeta","--extern","lazy_static=/Users/rosehsu/rust_learning/functionPrac/target/rls/debug/deps/liblazy_static-deaf128e05fa56cc.rmeta","--extern","log=/Users/rosehsu/rust_learning/functionPrac/target/rls/debug/deps/liblog-1f204086ef632dbb.rmeta","--extern","rand=/Users/rosehsu/rust_learning/functionPrac/target/rls/debug/deps/librand-d039abd1e5493115.rmeta","--extern","smallvec=/Users/rosehsu/rust_learning/functionPrac/target/rls/debug/deps/libsmallvec-7e2015054457d313.rmeta","--extern","socket2=/Users/rosehsu/rust_learning/functionPrac/target/rls/debug/deps/libsocket2-337145b1be0225da.rmeta","--extern","tokio=/Users/rosehsu/rust_learning/functionPrac/target/rls/debug/deps/libtokio-b35ed0e69341b737.rmeta","--extern","url=/Users/rosehsu/rust_learning/functionPrac/target/rls/debug/deps/liburl-4fac139fe4572729.rmeta","--cap-lints","allow","-L","native=/Users/rosehsu/rust_learning/functionPrac/target/rls/debug/build/backtrace-sys-52981ccb4d9e10f9/out","--error-format=json","--sysroot","/Users/rosehsu/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/rosehsu/rust_learning/functionPrac/target/rls/debug/deps/libtrust_dns_proto-a6936c9f6f52b5aa.rmeta"},"prelude":{"crate_id":{"name":"trust_dns_proto","disambiguator":[16777597533409861965,5746055004079638283]},"crate_root":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src","external_crates":[{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15786589783347927115,14932276094748675792]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_data.rs","num":2,"id":{"name":"core","disambiguator":[10298575208133357036,8040858178392247411]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12346914022686079705,4940267238012603511]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[18114786932049689441,12972308710781110595]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3450676385096259377,17670937522874515785]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17577124700929205618,18199936732272738370]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12559880231068804868,15252340553816167694]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[1187771448540952860,5203397268813630476]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[18283159763238190815,6626693072124271590]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[13458662043719537980,9570942752289014475]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[11980204761434995587,1127255387257643439]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[8467147480215253010,13194617755467267743]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8463084087322079994,16053869174229632260]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[16926090732921528503,7551031884587596916]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","num":15,"id":{"name":"failure","disambiguator":[16751579913080435242,17488693593657048398]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","num":16,"id":{"name":"failure_derive","disambiguator":[10842778179246361098,9579095977601844825]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","num":17,"id":{"name":"backtrace","disambiguator":[7466226157862661471,1184440034472573276]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","num":18,"id":{"name":"rustc_demangle","disambiguator":[13249014621673493224,14973943139413478329]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","num":19,"id":{"name":"cfg_if","disambiguator":[3830940254276883228,8453204912267407483]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","num":20,"id":{"name":"backtrace_sys","disambiguator":[10310402215854299957,12474057259526200978]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","num":21,"id":{"name":"libc","disambiguator":[8897355438711723394,421651759886503742]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","num":22,"id":{"name":"tokio","disambiguator":[15451935479042879442,5423863099361558502]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","num":23,"id":{"name":"pin_project_lite","disambiguator":[14577619651109676213,12949369127079839608]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","num":24,"id":{"name":"bytes","disambiguator":[3594836515153456067,13323594641765384680]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","num":25,"id":{"name":"futures_core","disambiguator":[12515884552873177197,9616682988426788226]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","num":26,"id":{"name":"mio","disambiguator":[15596073564569256100,11017082252271623468]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","num":27,"id":{"name":"net2","disambiguator":[3549735368817222109,13037241735892150921]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","num":28,"id":{"name":"iovec","disambiguator":[7681829180142388237,4052245476870473592]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","num":29,"id":{"name":"slab","disambiguator":[17106711536526281595,3347384609478401842]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","num":30,"id":{"name":"log","disambiguator":[17423332158298562554,18307404737228330174]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","num":31,"id":{"name":"mio_uds","disambiguator":[6832533293267724460,13665309021158897790]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","num":32,"id":{"name":"lazy_static","disambiguator":[6216246046354924533,15913799639573233127]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","num":33,"id":{"name":"fnv","disambiguator":[18442832100113256359,7128339919202805831]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","num":34,"id":{"name":"memchr","disambiguator":[2778318941797934219,3760727527117086112]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","num":35,"id":{"name":"signal_hook_registry","disambiguator":[947292121434268307,4331947076205569978]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","num":36,"id":{"name":"arc_swap","disambiguator":[10204253128766926092,7368110198149340090]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","num":37,"id":{"name":"idna","disambiguator":[4874789979581367348,418725301938514822]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","num":38,"id":{"name":"matches","disambiguator":[7462047180275543378,11259245489236566233]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","num":39,"id":{"name":"unicode_bidi","disambiguator":[5965928509754951194,5971352037698650622]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","num":40,"id":{"name":"unicode_normalization","disambiguator":[14776694392996366751,17116449691379500351]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_multiplexer.rs","num":41,"id":{"name":"smallvec","disambiguator":[14315592592760114647,16073938324262727035]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","num":42,"id":{"name":"url","disambiguator":[15401079564996706251,8635246536603732001]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","num":43,"id":{"name":"percent_encoding","disambiguator":[15980311240522694495,5846133832935938534]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_data.rs","num":44,"id":{"name":"enum_as_inner","disambiguator":[6690661348053785214,4259692405350443917]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_client_stream.rs","num":45,"id":{"name":"async_trait","disambiguator":[937044360925077273,8463773153671106481]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_client_stream.rs","num":46,"id":{"name":"futures","disambiguator":[15362775071522897089,5189196403733016096]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_client_stream.rs","num":47,"id":{"name":"futures_util","disambiguator":[1079843407542910348,14925926140228118849]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_client_stream.rs","num":48,"id":{"name":"pin_utils","disambiguator":[167127972925202290,5687305839049880124]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_client_stream.rs","num":49,"id":{"name":"proc_macro_hack","disambiguator":[12182670351709049799,13847443588168703283]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_client_stream.rs","num":50,"id":{"name":"futures_task","disambiguator":[14097102592754039270,13972896988592505217]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_client_stream.rs","num":51,"id":{"name":"futures_channel","disambiguator":[14412216669998302765,14340806287757748518]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_client_stream.rs","num":52,"id":{"name":"futures_sink","disambiguator":[1110704898769028611,17121670139132838728]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_client_stream.rs","num":53,"id":{"name":"futures_io","disambiguator":[8413213980977928237,16005933961628640430]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_client_stream.rs","num":54,"id":{"name":"futures_macro","disambiguator":[13322606967822339624,2420910114720555512]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_client_stream.rs","num":55,"id":{"name":"proc_macro_nested","disambiguator":[341047613979784435,3830380745475690475]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_client_stream.rs","num":56,"id":{"name":"futures_executor","disambiguator":[10050350156882583329,14074976628841050957]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_client_stream.rs","num":57,"id":{"name":"rand","disambiguator":[18390621163284856394,4605431028558876820]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_client_stream.rs","num":58,"id":{"name":"rand_core","disambiguator":[9080650436945191897,8329289728706226282]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_client_stream.rs","num":59,"id":{"name":"getrandom","disambiguator":[12921373689522566389,2368004380842546150]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_client_stream.rs","num":60,"id":{"name":"rand_chacha","disambiguator":[16259945494886665352,5984227501082862417]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_client_stream.rs","num":61,"id":{"name":"c2_chacha","disambiguator":[17159662310012455967,4956459177962689291]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_client_stream.rs","num":62,"id":{"name":"ppv_lite86","disambiguator":[4343815898530149795,15521757675557477630]}}],"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/lib.rs","byte_start":385,"byte_end":1468,"line_start":9,"line_end":50,"column_start":1,"column_end":81}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":2332},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/mod.rs","byte_start":14477,"byte_end":14481,"line_start":27,"line_end":27,"column_start":21,"column_end":25},"alias_span":null,"name":"Edns","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":2346},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/mod.rs","byte_start":14505,"byte_end":14511,"line_start":28,"line_end":28,"column_start":23,"column_end":29},"alias_span":null,"name":"Header","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":2427},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/mod.rs","byte_start":14535,"byte_end":14546,"line_start":29,"line_end":29,"column_start":23,"column_end":34},"alias_span":null,"name":"MessageType","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":2442},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/mod.rs","byte_start":14572,"byte_end":14579,"line_start":30,"line_end":30,"column_start":25,"column_end":32},"alias_span":null,"name":"Message","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":254},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/mod.rs","byte_start":14581,"byte_end":14597,"line_start":30,"line_end":30,"column_start":34,"column_end":50},"alias_span":null,"name":"MessageFinalizer","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":256},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/mod.rs","byte_start":14599,"byte_end":14619,"line_start":30,"line_end":30,"column_start":52,"column_end":72},"alias_span":null,"name":"NoopMessageFinalizer","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":2460},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/mod.rs","byte_start":14645,"byte_end":14651,"line_start":31,"line_end":31,"column_start":24,"column_end":30},"alias_span":null,"name":"OpCode","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":2479},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/mod.rs","byte_start":14674,"byte_end":14679,"line_start":32,"line_end":32,"column_start":22,"column_end":27},"alias_span":null,"name":"Query","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":2497},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/mod.rs","byte_start":14710,"byte_end":14722,"line_start":33,"line_end":33,"column_start":30,"column_end":42},"alias_span":null,"name":"ResponseCode","value":"","parent":{"krate":0,"index":78}},{"kind":"Use","ref_id":{"krate":0,"index":449},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/mod.rs","byte_start":102177,"byte_end":102186,"line_start":15,"line_end":15,"column_start":23,"column_end":32},"alias_span":null,"name":"IntoLabel","value":"","parent":{"krate":0,"index":375}},{"kind":"Use","ref_id":{"krate":0,"index":2580},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/mod.rs","byte_start":102188,"byte_end":102193,"line_start":15,"line_end":15,"column_start":34,"column_end":39},"alias_span":null,"name":"Label","value":"","parent":{"krate":0,"index":375}},{"kind":"Use","ref_id":{"krate":0,"index":638},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/mod.rs","byte_start":102217,"byte_end":102225,"line_start":16,"line_end":16,"column_start":22,"column_end":30},"alias_span":null,"name":"IntoName","value":"","parent":{"krate":0,"index":375}},{"kind":"Use","ref_id":{"krate":0,"index":2588},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/mod.rs","byte_start":102227,"byte_end":102231,"line_start":16,"line_end":16,"column_start":32,"column_end":36},"alias_span":null,"name":"Name","value":"","parent":{"krate":0,"index":375}},{"kind":"Use","ref_id":{"krate":0,"index":654},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/mod.rs","byte_start":102262,"byte_end":102272,"line_start":17,"line_end":17,"column_start":29,"column_end":39},"alias_span":null,"name":"TryParseIp","value":"","parent":{"krate":0,"index":375}},{"kind":"Use","ref_id":{"krate":0,"index":2863},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/mod.rs","byte_start":197507,"byte_end":197510,"line_start":37,"line_end":37,"column_start":20,"column_end":23},"alias_span":null,"name":"CAA","value":"","parent":{"krate":0,"index":704}},{"kind":"Use","ref_id":{"krate":0,"index":2947},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/mod.rs","byte_start":197530,"byte_end":197532,"line_start":38,"line_end":38,"column_start":19,"column_end":21},"alias_span":null,"name":"MX","value":"","parent":{"krate":0,"index":704}},{"kind":"Use","ref_id":{"krate":0,"index":2964},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/mod.rs","byte_start":197555,"byte_end":197560,"line_start":39,"line_end":39,"column_start":22,"column_end":27},"alias_span":null,"name":"NAPTR","value":"","parent":{"krate":0,"index":704}},{"kind":"Use","ref_id":{"krate":0,"index":2985},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/mod.rs","byte_start":197582,"byte_end":197586,"line_start":40,"line_end":40,"column_start":21,"column_end":25},"alias_span":null,"name":"NULL","value":"","parent":{"krate":0,"index":704}},{"kind":"Use","ref_id":{"krate":0,"index":3003},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/mod.rs","byte_start":197614,"byte_end":197624,"line_start":41,"line_end":41,"column_start":27,"column_end":37},"alias_span":null,"name":"OPENPGPKEY","value":"","parent":{"krate":0,"index":704}},{"kind":"Use","ref_id":{"krate":0,"index":3019},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/mod.rs","byte_start":197645,"byte_end":197648,"line_start":42,"line_end":42,"column_start":20,"column_end":23},"alias_span":null,"name":"OPT","value":"","parent":{"krate":0,"index":704}},{"kind":"Use","ref_id":{"krate":0,"index":3126},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/mod.rs","byte_start":197669,"byte_end":197672,"line_start":43,"line_end":43,"column_start":20,"column_end":23},"alias_span":null,"name":"SOA","value":"","parent":{"krate":0,"index":704}},{"kind":"Use","ref_id":{"krate":0,"index":3148},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/mod.rs","byte_start":197693,"byte_end":197696,"line_start":44,"line_end":44,"column_start":20,"column_end":23},"alias_span":null,"name":"SRV","value":"","parent":{"krate":0,"index":704}},{"kind":"Use","ref_id":{"krate":0,"index":3167},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/mod.rs","byte_start":197719,"byte_end":197724,"line_start":45,"line_end":45,"column_start":22,"column_end":27},"alias_span":null,"name":"SSHFP","value":"","parent":{"krate":0,"index":704}},{"kind":"Use","ref_id":{"krate":0,"index":3239},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/mod.rs","byte_start":197746,"byte_end":197750,"line_start":46,"line_end":46,"column_start":21,"column_end":25},"alias_span":null,"name":"TLSA","value":"","parent":{"krate":0,"index":704}},{"kind":"Use","ref_id":{"krate":0,"index":3339},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/mod.rs","byte_start":197771,"byte_end":197774,"line_start":47,"line_end":47,"column_start":20,"column_end":23},"alias_span":null,"name":"TXT","value":"","parent":{"krate":0,"index":704}},{"kind":"Use","ref_id":{"krate":0,"index":2551},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/mod.rs","byte_start":96503,"byte_end":96511,"line_start":30,"line_end":30,"column_start":26,"column_end":34},"alias_span":null,"name":"DNSClass","value":"","parent":{"krate":0,"index":343}},{"kind":"Use","ref_id":{"krate":0,"index":638},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/mod.rs","byte_start":96536,"byte_end":96544,"line_start":31,"line_end":31,"column_start":24,"column_end":32},"alias_span":null,"name":"IntoName","value":"","parent":{"krate":0,"index":343}},{"kind":"Use","ref_id":{"krate":0,"index":2588},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/mod.rs","byte_start":96546,"byte_end":96550,"line_start":31,"line_end":31,"column_start":34,"column_end":38},"alias_span":null,"name":"Name","value":"","parent":{"krate":0,"index":343}},{"kind":"Use","ref_id":{"krate":0,"index":654},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/mod.rs","byte_start":96552,"byte_end":96562,"line_start":31,"line_end":31,"column_start":40,"column_end":50},"alias_span":null,"name":"TryParseIp","value":"","parent":{"krate":0,"index":343}},{"kind":"Use","ref_id":{"krate":0,"index":3355},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/mod.rs","byte_start":96592,"byte_end":96597,"line_start":32,"line_end":32,"column_start":28,"column_end":33},"alias_span":null,"name":"RData","value":"","parent":{"krate":0,"index":343}},{"kind":"Use","ref_id":{"krate":0,"index":3480},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/mod.rs","byte_start":96626,"byte_end":96636,"line_start":33,"line_end":33,"column_start":28,"column_end":38},"alias_span":null,"name":"RecordType","value":"","parent":{"krate":0,"index":343}},{"kind":"Use","ref_id":{"krate":0,"index":3541},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/mod.rs","byte_start":96662,"byte_end":96668,"line_start":34,"line_end":34,"column_start":25,"column_end":31},"alias_span":null,"name":"Record","value":"","parent":{"krate":0,"index":343}},{"kind":"Use","ref_id":{"krate":0,"index":1130},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/mod.rs","byte_start":96713,"byte_end":96726,"line_start":36,"line_end":36,"column_start":23,"column_end":36},"alias_span":null,"name":"IntoRecordSet","value":"","parent":{"krate":0,"index":343}},{"kind":"Use","ref_id":{"krate":0,"index":3556},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/mod.rs","byte_start":96750,"byte_end":96759,"line_start":37,"line_end":37,"column_start":23,"column_end":32},"alias_span":null,"name":"RecordSet","value":"","parent":{"krate":0,"index":343}},{"kind":"Use","ref_id":{"krate":0,"index":3572},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/mod.rs","byte_start":96783,"byte_end":96795,"line_start":38,"line_end":38,"column_start":23,"column_end":35},"alias_span":null,"name":"RrsetRecords","value":"","parent":{"krate":0,"index":343}},{"kind":"Use","ref_id":{"krate":0,"index":1164},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/mod.rs","byte_start":450073,"byte_end":450083,"line_start":23,"line_end":23,"column_start":24,"column_end":34},"alias_span":null,"name":"BinDecoder","value":"","parent":{"krate":0,"index":1157}},{"kind":"Use","ref_id":{"krate":0,"index":1219},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/mod.rs","byte_start":450108,"byte_end":450118,"line_start":24,"line_end":24,"column_start":24,"column_end":34},"alias_span":null,"name":"BinEncoder","value":"","parent":{"krate":0,"index":1157}},{"kind":"Use","ref_id":{"krate":0,"index":3589},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/mod.rs","byte_start":450143,"byte_end":450153,"line_start":25,"line_end":25,"column_start":24,"column_end":34},"alias_span":null,"name":"EncodeMode","value":"","parent":{"krate":0,"index":1157}},{"kind":"Use","ref_id":{"krate":0,"index":3603},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/mod.rs","byte_start":450180,"byte_end":450188,"line_start":26,"line_end":26,"column_start":26,"column_end":34},"alias_span":null,"name":"Restrict","value":"","parent":{"krate":0,"index":1157}},{"kind":"Use","ref_id":{"krate":0,"index":1331},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/mod.rs","byte_start":450190,"byte_end":450204,"line_start":26,"line_end":26,"column_start":36,"column_end":50},"alias_span":null,"name":"RestrictedMath","value":"","parent":{"krate":0,"index":1157}},{"kind":"Use","ref_id":{"krate":0,"index":1310},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/mod.rs","byte_start":450206,"byte_end":450214,"line_start":26,"line_end":26,"column_start":52,"column_end":60},"alias_span":null,"name":"Verified","value":"","parent":{"krate":0,"index":1157}},{"kind":"Use","ref_id":{"krate":0,"index":1457},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/mod.rs","byte_start":488611,"byte_end":488627,"line_start":21,"line_end":21,"column_start":35,"column_end":51},"alias_span":null,"name":"TcpClientConnect","value":"","parent":{"krate":0,"index":1404}},{"kind":"Use","ref_id":{"krate":0,"index":1436},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/mod.rs","byte_start":488629,"byte_end":488644,"line_start":21,"line_end":21,"column_start":53,"column_end":68},"alias_span":null,"name":"TcpClientStream","value":"","parent":{"krate":0,"index":1404}},{"kind":"Use","ref_id":{"krate":0,"index":3620},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/mod.rs","byte_start":488674,"byte_end":488681,"line_start":22,"line_end":22,"column_start":28,"column_end":35},"alias_span":null,"name":"Connect","value":"","parent":{"krate":0,"index":1404}},{"kind":"Use","ref_id":{"krate":0,"index":1513},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/mod.rs","byte_start":488683,"byte_end":488692,"line_start":22,"line_end":22,"column_start":37,"column_end":46},"alias_span":null,"name":"TcpStream","value":"","parent":{"krate":0,"index":1404}},{"kind":"Use","ref_id":{"krate":0,"index":1644},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/mod.rs","byte_start":520337,"byte_end":520353,"line_start":22,"line_end":22,"column_start":35,"column_end":51},"alias_span":null,"name":"UdpClientConnect","value":"","parent":{"krate":0,"index":1556}},{"kind":"Use","ref_id":{"krate":0,"index":1593},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/mod.rs","byte_start":520355,"byte_end":520370,"line_start":22,"line_end":22,"column_start":53,"column_end":68},"alias_span":null,"name":"UdpClientStream","value":"","parent":{"krate":0,"index":1556}},{"kind":"Use","ref_id":{"krate":0,"index":1631},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/mod.rs","byte_start":520372,"byte_end":520383,"line_start":22,"line_end":22,"column_start":70,"column_end":81},"alias_span":null,"name":"UdpResponse","value":"","parent":{"krate":0,"index":1556}},{"kind":"Use","ref_id":{"krate":0,"index":1701},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/mod.rs","byte_start":520412,"byte_end":520421,"line_start":23,"line_end":23,"column_start":27,"column_end":36},"alias_span":null,"name":"UdpStream","value":"","parent":{"krate":0,"index":1556}},{"kind":"Use","ref_id":{"krate":0,"index":1789},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":552059,"byte_end":552070,"line_start":30,"line_end":30,"column_start":30,"column_end":41},"alias_span":null,"name":"DnsExchange","value":"","parent":{"krate":0,"index":1739}},{"kind":"Use","ref_id":{"krate":0,"index":1807},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":552072,"byte_end":552090,"line_start":30,"line_end":30,"column_start":43,"column_end":61},"alias_span":null,"name":"DnsExchangeConnect","value":"","parent":{"krate":0,"index":1739}},{"kind":"Use","ref_id":{"krate":0,"index":3660},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":552120,"byte_end":552134,"line_start":31,"line_end":31,"column_start":28,"column_end":42},"alias_span":null,"name":"BasicDnsHandle","value":"","parent":{"krate":0,"index":1739}},{"kind":"Use","ref_id":{"krate":0,"index":1881},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":552136,"byte_end":552145,"line_start":31,"line_end":31,"column_start":44,"column_end":53},"alias_span":null,"name":"DnsHandle","value":"","parent":{"krate":0,"index":1739}},{"kind":"Use","ref_id":{"krate":0,"index":1867},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":552147,"byte_end":552162,"line_start":31,"line_end":31,"column_start":55,"column_end":70},"alias_span":null,"name":"DnsStreamHandle","value":"","parent":{"krate":0,"index":1739}},{"kind":"Use","ref_id":{"krate":0,"index":1863},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":552164,"byte_end":552176,"line_start":31,"line_end":31,"column_start":72,"column_end":84},"alias_span":null,"name":"StreamHandle","value":"","parent":{"krate":0,"index":1739}},{"kind":"Use","ref_id":{"krate":0,"index":1953},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":552216,"byte_end":552230,"line_start":33,"line_end":33,"column_start":5,"column_end":19},"alias_span":null,"name":"DnsMultiplexer","value":"","parent":{"krate":0,"index":1739}},{"kind":"Use","ref_id":{"krate":0,"index":1973},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":552232,"byte_end":552253,"line_start":33,"line_end":33,"column_start":21,"column_end":42},"alias_span":null,"name":"DnsMultiplexerConnect","value":"","parent":{"krate":0,"index":1739}},{"kind":"Use","ref_id":{"krate":0,"index":2005},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":552255,"byte_end":552283,"line_start":33,"line_end":33,"column_start":44,"column_end":72},"alias_span":null,"name":"DnsMultiplexerSerialResponse","value":"","parent":{"krate":0,"index":1739}},{"kind":"Use","ref_id":{"krate":0,"index":3670},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":552316,"byte_end":552326,"line_start":35,"line_end":35,"column_start":29,"column_end":39},"alias_span":null,"name":"DnsRequest","value":"","parent":{"krate":0,"index":1739}},{"kind":"Use","ref_id":{"krate":0,"index":3664},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":552328,"byte_end":552345,"line_start":35,"line_end":35,"column_start":41,"column_end":58},"alias_span":null,"name":"DnsRequestOptions","value":"","parent":{"krate":0,"index":1739}},{"kind":"Use","ref_id":{"krate":0,"index":3675},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":552376,"byte_end":552387,"line_start":36,"line_end":36,"column_start":29,"column_end":40},"alias_span":null,"name":"DnsResponse","value":"","parent":{"krate":0,"index":1739}},{"kind":"Use","ref_id":{"krate":0,"index":3683},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":552421,"byte_end":552435,"line_start":37,"line_end":37,"column_start":33,"column_end":47},"alias_span":null,"name":"RetryDnsHandle","value":"","parent":{"krate":0,"index":1739}},{"kind":"Use","ref_id":{"krate":0,"index":2106},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":552544,"byte_end":552557,"line_start":40,"line_end":40,"column_start":31,"column_end":44},"alias_span":null,"name":"SerialMessage","value":"","parent":{"krate":0,"index":1739}},{"kind":"Use","ref_id":{"krate":0,"index":3660},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/lib.rs","byte_start":1076,"byte_end":1090,"line_start":41,"line_end":41,"column_start":35,"column_end":49},"alias_span":null,"name":"BasicDnsHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1881},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/lib.rs","byte_start":1092,"byte_end":1101,"line_start":41,"line_end":41,"column_start":51,"column_end":60},"alias_span":null,"name":"DnsHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1867},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/lib.rs","byte_start":1103,"byte_end":1118,"line_start":41,"line_end":41,"column_start":62,"column_end":77},"alias_span":null,"name":"DnsStreamHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1863},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/lib.rs","byte_start":1120,"byte_end":1132,"line_start":41,"line_end":41,"column_start":79,"column_end":91},"alias_span":null,"name":"StreamHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1953},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/lib.rs","byte_start":1188,"byte_end":1202,"line_start":43,"line_end":43,"column_start":39,"column_end":53},"alias_span":null,"name":"DnsMultiplexer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3683},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/lib.rs","byte_start":1258,"byte_end":1272,"line_start":45,"line_end":45,"column_start":40,"column_end":54},"alias_span":null,"name":"RetryDnsHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2142},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/lib.rs","byte_start":1410,"byte_end":1428,"line_start":50,"line_end":50,"column_start":23,"column_end":41},"alias_span":null,"name":"BufDnsStreamHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3690},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/lib.rs","byte_start":1430,"byte_end":1445,"line_start":50,"line_end":50,"column_start":43,"column_end":58},"alias_span":null,"name":"BufStreamHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2141},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/lib.rs","byte_start":1447,"byte_end":1466,"line_start":50,"line_end":50,"column_start":60,"column_end":79},"alias_span":null,"name":"MessageStreamHandle","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/lib.rs","byte_start":385,"byte_end":1468,"line_start":9,"line_end":50,"column_start":1,"column_end":81},"name":"","qualname":"::","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":78},{"krate":0,"index":343},{"krate":0,"index":1156},{"krate":0,"index":1404},{"krate":0,"index":1556},{"krate":0,"index":1739},{"krate":0,"index":2211},{"krate":0,"index":2216},{"krate":0,"index":2217},{"krate":0,"index":2218}],"decl_id":null,"docs":" Trust-DNS Protocol library\n","sig":null,"attributes":[{"value":"warn(missing_docs, clippy :: dbg_macro, clippy :: print_stdout, clippy ::\n       unimplemented)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/lib.rs","byte_start":385,"byte_end":489,"line_start":9,"line_end":14,"column_start":1,"column_end":3}},{"value":"recursion_limit = \"2048\"","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/lib.rs","byte_start":490,"byte_end":518,"line_start":15,"line_end":15,"column_start":1,"column_end":29}}]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":2222},{"krate":0,"index":2317},{"krate":0,"index":2318},{"krate":0,"index":2313},{"krate":0,"index":2314},{"krate":0,"index":2311},{"krate":0,"index":2303},{"krate":0,"index":2308},{"krate":0,"index":2320},{"krate":0,"index":2322},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":31},{"krate":0,"index":33},{"krate":0,"index":35},{"krate":0,"index":37},{"krate":0,"index":39},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":62},{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":72},{"krate":0,"index":75},{"krate":0,"index":76}],"decl_id":null,"docs":" Error types for the crate\n","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":1856,"byte_end":1878,"line_start":10,"line_end":10,"column_start":1,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":20},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":2386,"byte_end":2397,"line_start":30,"line_end":30,"column_start":10,"column_end":21},"name":"ProtoResult","qualname":"::error::ProtoResult","value":"::std::result::Result<T, ProtoError>","parent":null,"children":[],"decl_id":null,"docs":" An alias for results returned by functions of this crate\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2223},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":2671,"byte_end":2679,"line_start":37,"line_end":37,"column_start":5,"column_end":13},"name":"Canceled","qualname":"::error::ProtoErrorKind::Canceled","value":"ProtoErrorKind::Canceled(futures::channel::oneshot::Canceled)","parent":{"krate":0,"index":2222},"children":[],"decl_id":null,"docs":" An error caused by a canceled future\n","sig":null,"attributes":[{"value":"fail(display = \"future was canceled: {:?}\", _0)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":2616,"byte_end":2666,"line_start":36,"line_end":36,"column_start":5,"column_end":55}}]},{"kind":"StructVariant","id":{"krate":0,"index":2226},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":2837,"byte_end":2857,"line_start":41,"line_end":41,"column_start":5,"column_end":25},"name":"CharacterDataTooLong","qualname":"::error::ProtoErrorKind::CharacterDataTooLong","value":"ProtoErrorKind::CharacterDataTooLong { max, len }","parent":{"krate":0,"index":2222},"children":[],"decl_id":null,"docs":" Character data length exceeded the limit\n","sig":null,"attributes":[{"value":"fail(display = \"char data length exceeds {}: {}\", _0, _1)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":2772,"byte_end":2832,"line_start":40,"line_end":40,"column_start":5,"column_end":65}}]},{"kind":"StructVariant","id":{"krate":0,"index":2229},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":3064,"byte_end":3086,"line_start":50,"line_end":50,"column_start":5,"column_end":27},"name":"LabelOverlapsWithOther","qualname":"::error::ProtoErrorKind::LabelOverlapsWithOther","value":"ProtoErrorKind::LabelOverlapsWithOther { label, other }","parent":{"krate":0,"index":2222},"children":[],"decl_id":null,"docs":" Overlapping labels\n","sig":null,"attributes":[{"value":"fail(display = \"overlapping labels name {} other {}\", _0, _1)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":2995,"byte_end":3059,"line_start":49,"line_end":49,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2232},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":3361,"byte_end":3379,"line_start":59,"line_end":59,"column_start":5,"column_end":23},"name":"DnsKeyProtocolNot3","qualname":"::error::ProtoErrorKind::DnsKeyProtocolNot3","value":"ProtoErrorKind::DnsKeyProtocolNot3(u8)","parent":{"krate":0,"index":2222},"children":[],"decl_id":null,"docs":" DNS protocol version doesn't have the expected version 3\n","sig":null,"attributes":[{"value":"fail(display = \"dns key value unknown, must be 3: {}\", _0)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":3295,"byte_end":3356,"line_start":58,"line_end":58,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2235},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":3485,"byte_end":3502,"line_start":63,"line_end":63,"column_start":5,"column_end":22},"name":"DomainNameTooLong","qualname":"::error::ProtoErrorKind::DomainNameTooLong","value":"ProtoErrorKind::DomainNameTooLong(usize)","parent":{"krate":0,"index":2222},"children":[],"decl_id":null,"docs":" A domain name was too long\n","sig":null,"attributes":[{"value":"fail(display = \"name label data exceed 255: {}\", _0)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":3425,"byte_end":3480,"line_start":62,"line_end":62,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2238},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":3701,"byte_end":3716,"line_start":70,"line_end":70,"column_start":5,"column_end":20},"name":"EdnsNameNotRoot","qualname":"::error::ProtoErrorKind::EdnsNameNotRoot","value":"ProtoErrorKind::EdnsNameNotRoot(crate::rr::Name)","parent":{"krate":0,"index":2222},"children":[],"decl_id":null,"docs":" EDNS resource record label is not the root label, although required\n","sig":null,"attributes":[{"value":"fail(display = \"edns resource record label must be the root label (.): {}\",\n       _0)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":3592,"byte_end":3696,"line_start":66,"line_end":69,"column_start":5,"column_end":7}}]},{"kind":"StructVariant","id":{"krate":0,"index":2241},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":3874,"byte_end":3898,"line_start":74,"line_end":74,"column_start":5,"column_end":29},"name":"IncorrectRDataLengthRead","qualname":"::error::ProtoErrorKind::IncorrectRDataLengthRead","value":"ProtoErrorKind::IncorrectRDataLengthRead { read, len }","parent":{"krate":0,"index":2222},"children":[],"decl_id":null,"docs":" The length of rdata read was not as expected\n","sig":null,"attributes":[{"value":"fail(display = \"incorrect rdata length read: {} expected: {}\", read, len)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":3793,"byte_end":3869,"line_start":73,"line_end":73,"column_start":5,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2244},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":4134,"byte_end":4151,"line_start":83,"line_end":83,"column_start":5,"column_end":22},"name":"LabelBytesTooLong","qualname":"::error::ProtoErrorKind::LabelBytesTooLong","value":"ProtoErrorKind::LabelBytesTooLong(usize)","parent":{"krate":0,"index":2222},"children":[],"decl_id":null,"docs":" Label bytes exceeded the limit of 63\n","sig":null,"attributes":[{"value":"fail(display = \"label bytes exceed 63: {}\", _0)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":4079,"byte_end":4129,"line_start":82,"line_end":82,"column_start":5,"column_end":55}}]},{"kind":"StructVariant","id":{"krate":0,"index":2247},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":4293,"byte_end":4315,"line_start":87,"line_end":87,"column_start":5,"column_end":27},"name":"PointerNotPriorToLabel","qualname":"::error::ProtoErrorKind::PointerNotPriorToLabel","value":"ProtoErrorKind::PointerNotPriorToLabel { idx, ptr }","parent":{"krate":0,"index":2222},"children":[],"decl_id":null,"docs":" Label bytes exceeded the limit of 63\n","sig":null,"attributes":[{"value":"fail(display = \"label points to data not prior to idx: {} ptr: {}\", _0, _1)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":4210,"byte_end":4288,"line_start":86,"line_end":86,"column_start":5,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2250},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":4585,"byte_end":4606,"line_start":96,"line_end":96,"column_start":5,"column_end":26},"name":"MaxBufferSizeExceeded","qualname":"::error::ProtoErrorKind::MaxBufferSizeExceeded","value":"ProtoErrorKind::MaxBufferSizeExceeded(usize)","parent":{"krate":0,"index":2222},"children":[],"decl_id":null,"docs":" The maximum buffer size was exceeded\n","sig":null,"attributes":[{"value":"fail(display = \"maximum buffer size exceeded: {}\", _0)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":4523,"byte_end":4580,"line_start":95,"line_end":95,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2253},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":4723,"byte_end":4730,"line_start":100,"line_end":100,"column_start":5,"column_end":12},"name":"Message","qualname":"::error::ProtoErrorKind::Message","value":"ProtoErrorKind::Message(&'static str)","parent":{"krate":0,"index":2222},"children":[],"decl_id":null,"docs":" An error with an arbitrary message, referenced as &'static str\n","sig":null,"attributes":[{"value":"fail(display = \"{}\", _0)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":4691,"byte_end":4718,"line_start":99,"line_end":99,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2256},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":4844,"byte_end":4847,"line_start":104,"line_end":104,"column_start":5,"column_end":8},"name":"Msg","qualname":"::error::ProtoErrorKind::Msg","value":"ProtoErrorKind::Msg(String)","parent":{"krate":0,"index":2222},"children":[],"decl_id":null,"docs":" An error with an arbitrary message, stored as String\n","sig":null,"attributes":[{"value":"fail(display = \"{}\", _0)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":4812,"byte_end":4839,"line_start":103,"line_end":103,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2259},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":4937,"byte_end":4944,"line_start":108,"line_end":108,"column_start":5,"column_end":12},"name":"NoError","qualname":"::error::ProtoErrorKind::NoError","value":"ProtoErrorKind::NoError","parent":{"krate":0,"index":2222},"children":[],"decl_id":null,"docs":" No error was specified\n","sig":null,"attributes":[{"value":"fail(display = \"no error specified\")","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":4893,"byte_end":4932,"line_start":107,"line_end":107,"column_start":5,"column_end":44}}]},{"kind":"StructVariant","id":{"krate":0,"index":2261},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":5075,"byte_end":5095,"line_start":112,"line_end":112,"column_start":5,"column_end":25},"name":"NotAllRecordsWritten","qualname":"::error::ProtoErrorKind::NotAllRecordsWritten","value":"ProtoErrorKind::NotAllRecordsWritten { count }","parent":{"krate":0,"index":2222},"children":[],"decl_id":null,"docs":" Not all records were able to be written\n","sig":null,"attributes":[{"value":"fail(display = \"not all records could be written, wrote: {}\", count)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":4999,"byte_end":5070,"line_start":111,"line_end":111,"column_start":5,"column_end":76}}]},{"kind":"StructVariant","id":{"krate":0,"index":2263},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":5349,"byte_end":5365,"line_start":122,"line_end":122,"column_start":5,"column_end":21},"name":"RrsigsNotPresent","qualname":"::error::ProtoErrorKind::RrsigsNotPresent","value":"ProtoErrorKind::RrsigsNotPresent { name, record_type }","parent":{"krate":0,"index":2222},"children":[],"decl_id":null,"docs":" Missing rrsigs\n","sig":null,"attributes":[{"value":"fail(display =\n       \"rrsigs are not present for record set name: {} record_type: {}\", name,\n       record_type)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":5220,"byte_end":5344,"line_start":118,"line_end":121,"column_start":5,"column_end":7}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2266},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":5599,"byte_end":5624,"line_start":131,"line_end":131,"column_start":5,"column_end":30},"name":"UnknownAlgorithmTypeValue","qualname":"::error::ProtoErrorKind::UnknownAlgorithmTypeValue","value":"ProtoErrorKind::UnknownAlgorithmTypeValue(u8)","parent":{"krate":0,"index":2222},"children":[],"decl_id":null,"docs":" An unknown algorithm type was found\n","sig":null,"attributes":[{"value":"fail(display = \"algorithm type value unknown: {}\", _0)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":5537,"byte_end":5594,"line_start":130,"line_end":130,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2269},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":5732,"byte_end":5750,"line_start":135,"line_end":135,"column_start":5,"column_end":23},"name":"UnknownDnsClassStr","qualname":"::error::ProtoErrorKind::UnknownDnsClassStr","value":"ProtoErrorKind::UnknownDnsClassStr(String)","parent":{"krate":0,"index":2222},"children":[],"decl_id":null,"docs":" An unknown dns class was found\n","sig":null,"attributes":[{"value":"fail(display = \"dns class string unknown: {}\", _0)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":5674,"byte_end":5727,"line_start":134,"line_end":134,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2272},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":5867,"byte_end":5887,"line_start":139,"line_end":139,"column_start":5,"column_end":25},"name":"UnknownDnsClassValue","qualname":"::error::ProtoErrorKind::UnknownDnsClassValue","value":"ProtoErrorKind::UnknownDnsClassValue(u16)","parent":{"krate":0,"index":2222},"children":[],"decl_id":null,"docs":" An unknown dns class value was found\n","sig":null,"attributes":[{"value":"fail(display = \"dns class value unknown: {}\", _0)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":5810,"byte_end":5862,"line_start":138,"line_end":138,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2275},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":6007,"byte_end":6027,"line_start":143,"line_end":143,"column_start":5,"column_end":25},"name":"UnknownRecordTypeStr","qualname":"::error::ProtoErrorKind::UnknownRecordTypeStr","value":"ProtoErrorKind::UnknownRecordTypeStr(String)","parent":{"krate":0,"index":2222},"children":[],"decl_id":null,"docs":" An unknown record type string was found\n","sig":null,"attributes":[{"value":"fail(display = \"record type string unknown: {}\", _0)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":5947,"byte_end":6002,"line_start":142,"line_end":142,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2278},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":6148,"byte_end":6170,"line_start":147,"line_end":147,"column_start":5,"column_end":27},"name":"UnknownRecordTypeValue","qualname":"::error::ProtoErrorKind::UnknownRecordTypeValue","value":"ProtoErrorKind::UnknownRecordTypeValue(u16)","parent":{"krate":0,"index":2222},"children":[],"decl_id":null,"docs":" An unknown record type value was found\n","sig":null,"attributes":[{"value":"fail(display = \"record type value unknown: {}\", _0)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":6089,"byte_end":6143,"line_start":146,"line_end":146,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2281},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":6286,"byte_end":6307,"line_start":151,"line_end":151,"column_start":5,"column_end":26},"name":"UnrecognizedLabelCode","qualname":"::error::ProtoErrorKind::UnrecognizedLabelCode","value":"ProtoErrorKind::UnrecognizedLabelCode(u8)","parent":{"krate":0,"index":2222},"children":[],"decl_id":null,"docs":" An unrecognized label code was found\n","sig":null,"attributes":[{"value":"fail(display = \"unrecognized label code: {:b}\", _0)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":6227,"byte_end":6281,"line_start":150,"line_end":150,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2284},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":6430,"byte_end":6452,"line_start":155,"line_end":155,"column_start":5,"column_end":27},"name":"UnrecognizedNsec3Flags","qualname":"::error::ProtoErrorKind::UnrecognizedNsec3Flags","value":"ProtoErrorKind::UnrecognizedNsec3Flags(u8)","parent":{"krate":0,"index":2222},"children":[],"decl_id":null,"docs":" Unrecognized nsec3 flags were found\n","sig":null,"attributes":[{"value":"fail(display = \"nsec3 flags should be 0b0000000*: {:b}\", _0)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":6362,"byte_end":6425,"line_start":154,"line_end":154,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2287},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":6550,"byte_end":6552,"line_start":160,"line_end":160,"column_start":5,"column_end":7},"name":"Io","qualname":"::error::ProtoErrorKind::Io","value":"ProtoErrorKind::Io","parent":{"krate":0,"index":2222},"children":[],"decl_id":null,"docs":" An error got returned from IO\n","sig":null,"attributes":[{"value":"fail(display = \"io error\")","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":6516,"byte_end":6545,"line_start":159,"line_end":159,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2289},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":6634,"byte_end":6642,"line_start":164,"line_end":164,"column_start":5,"column_end":13},"name":"Poisoned","qualname":"::error::ProtoErrorKind::Poisoned","value":"ProtoErrorKind::Poisoned","parent":{"krate":0,"index":2222},"children":[],"decl_id":null,"docs":" Any sync poised error\n","sig":null,"attributes":[{"value":"fail(display = \"lock poisoned error\")","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":6589,"byte_end":6629,"line_start":163,"line_end":163,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2291},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":6706,"byte_end":6710,"line_start":168,"line_end":168,"column_start":5,"column_end":9},"name":"Ring","qualname":"::error::ProtoErrorKind::Ring","value":"ProtoErrorKind::Ring","parent":{"krate":0,"index":2222},"children":[],"decl_id":null,"docs":" A ring error\n","sig":null,"attributes":[{"value":"fail(display = \"ring error\")","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":6670,"byte_end":6701,"line_start":167,"line_end":167,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2293},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":6773,"byte_end":6776,"line_start":172,"line_end":172,"column_start":5,"column_end":8},"name":"SSL","qualname":"::error::ProtoErrorKind::SSL","value":"ProtoErrorKind::SSL","parent":{"krate":0,"index":2222},"children":[],"decl_id":null,"docs":" An ssl error\n","sig":null,"attributes":[{"value":"fail(display = \"ssl error\")","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":6738,"byte_end":6768,"line_start":171,"line_end":171,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2295},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":6848,"byte_end":6853,"line_start":176,"line_end":176,"column_start":5,"column_end":10},"name":"Timer","qualname":"::error::ProtoErrorKind::Timer","value":"ProtoErrorKind::Timer","parent":{"krate":0,"index":2222},"children":[],"decl_id":null,"docs":" A tokio timer error\n","sig":null,"attributes":[{"value":"fail(display = \"timer error\")","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":6811,"byte_end":6843,"line_start":175,"line_end":175,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2297},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":6931,"byte_end":6938,"line_start":180,"line_end":180,"column_start":5,"column_end":12},"name":"Timeout","qualname":"::error::ProtoErrorKind::Timeout","value":"ProtoErrorKind::Timeout","parent":{"krate":0,"index":2222},"children":[],"decl_id":null,"docs":" A request timed out\n","sig":null,"attributes":[{"value":"fail(display = \"request timed out\")","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":6888,"byte_end":6926,"line_start":179,"line_end":179,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2299},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":7017,"byte_end":7027,"line_start":184,"line_end":184,"column_start":5,"column_end":15},"name":"UrlParsing","qualname":"::error::ProtoErrorKind::UrlParsing","value":"ProtoErrorKind::UrlParsing","parent":{"krate":0,"index":2222},"children":[],"decl_id":null,"docs":" An url parsing error\n","sig":null,"attributes":[{"value":"fail(display = \"url parsing error\")","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":6974,"byte_end":7012,"line_start":183,"line_end":183,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2301},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":7114,"byte_end":7118,"line_start":188,"line_end":188,"column_start":5,"column_end":9},"name":"Utf8","qualname":"::error::ProtoErrorKind::Utf8","value":"ProtoErrorKind::Utf8","parent":{"krate":0,"index":2222},"children":[],"decl_id":null,"docs":" A utf8 parsing error\n","sig":null,"attributes":[{"value":"fail(display = \"error parsing utf8 string\")","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":7063,"byte_end":7109,"line_start":187,"line_end":187,"column_start":5,"column_end":51}}]},{"kind":"Enum","id":{"krate":0,"index":2222},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":2550,"byte_end":2564,"line_start":34,"line_end":34,"column_start":10,"column_end":24},"name":"ProtoErrorKind","qualname":"::error::ProtoErrorKind","value":"ProtoErrorKind::{Canceled, CharacterDataTooLong, LabelOverlapsWithOther, DnsKeyProtocolNot3, DomainNameTooLong, EdnsNameNotRoot, IncorrectRDataLengthRead, LabelBytesTooLong, PointerNotPriorToLabel, MaxBufferSizeExceeded, Message, Msg, NoError, NotAllRecordsWritten, RrsigsNotPresent, UnknownAlgorithmTypeValue, UnknownDnsClassStr, UnknownDnsClassValue, UnknownRecordTypeStr, UnknownRecordTypeValue, UnrecognizedLabelCode, UnrecognizedNsec3Flags, Io, Poisoned, Ring, SSL, Timer, Timeout, UrlParsing, Utf8}","parent":null,"children":[{"krate":0,"index":2223},{"krate":0,"index":2226},{"krate":0,"index":2229},{"krate":0,"index":2232},{"krate":0,"index":2235},{"krate":0,"index":2238},{"krate":0,"index":2241},{"krate":0,"index":2244},{"krate":0,"index":2247},{"krate":0,"index":2250},{"krate":0,"index":2253},{"krate":0,"index":2256},{"krate":0,"index":2259},{"krate":0,"index":2261},{"krate":0,"index":2263},{"krate":0,"index":2266},{"krate":0,"index":2269},{"krate":0,"index":2272},{"krate":0,"index":2275},{"krate":0,"index":2278},{"krate":0,"index":2281},{"krate":0,"index":2284},{"krate":0,"index":2287},{"krate":0,"index":2289},{"krate":0,"index":2291},{"krate":0,"index":2293},{"krate":0,"index":2295},{"krate":0,"index":2297},{"krate":0,"index":2299},{"krate":0,"index":2301}],"decl_id":null,"docs":" The error kind for errors that get returned in the crate\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2320},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":7212,"byte_end":7222,"line_start":193,"line_end":193,"column_start":12,"column_end":22},"name":"ProtoError","qualname":"::error::ProtoError","value":"ProtoError {  }","parent":null,"children":[{"krate":0,"index":2321}],"decl_id":null,"docs":" The error type for errors that get returned in the crate\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":7327,"byte_end":7331,"line_start":199,"line_end":199,"column_start":12,"column_end":16},"name":"kind","qualname":"<ProtoError>::kind","value":"fn (&self) -> &ProtoErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Get the kind of the error\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":56},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":9876,"byte_end":9887,"line_start":307,"line_end":307,"column_start":9,"column_end":20},"name":"not_openssl","qualname":"::error::not_openssl","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":2324},{"krate":0,"index":2326},{"krate":0,"index":58},{"krate":0,"index":60}],"decl_id":null,"docs":" Stubs for running without OpenSSL\n","sig":null,"attributes":[{"value":"cfg(not (feature = \"openssl\"))","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":9835,"byte_end":9867,"line_start":306,"line_end":306,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":2324},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":9966,"byte_end":9979,"line_start":312,"line_end":312,"column_start":16,"column_end":29},"name":"SslErrorStack","qualname":"::error::not_openssl::SslErrorStack","value":"","parent":null,"children":[],"decl_id":null,"docs":" SslErrorStac stub\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":62},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":10363,"byte_end":10371,"line_start":329,"line_end":329,"column_start":9,"column_end":17},"name":"not_ring","qualname":"::error::not_ring","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":2328},{"krate":0,"index":2330},{"krate":0,"index":64},{"krate":0,"index":66}],"decl_id":null,"docs":" Types used without ring\n","sig":null,"attributes":[{"value":"cfg(not (feature = \"ring\"))","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":10325,"byte_end":10354,"line_start":328,"line_end":328,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":2328},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":10466,"byte_end":10477,"line_start":334,"line_end":334,"column_start":16,"column_end":27},"name":"Unspecified","qualname":"::error::not_ring::Unspecified","value":"","parent":null,"children":[],"decl_id":null,"docs":" The Unspecified error replacement\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":75},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":13441,"byte_end":13455,"line_start":413,"line_end":413,"column_start":11,"column_end":25},"name":"FromProtoError","qualname":"::error::FromProtoError","value":"FromProtoError: From<ProtoError> + Fail + Clone","parent":null,"children":[],"decl_id":null,"docs":" A trait marking a type which implements From<ProtoError> and\n failure::Fail (which includes all std::error::Error types)\n as well as Clone + Send\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":78},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"op","qualname":"::op","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/mod.rs","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":118},{"krate":0,"index":162},{"krate":0,"index":282},{"krate":0,"index":289},{"krate":0,"index":317},{"krate":0,"index":333},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342}],"decl_id":null,"docs":" Operations to send with a `Client` or server, e.g. `Query`, `Message`, or `UpdateMessage` can\n be used together to either query or update resource records sets.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2332},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/edns.rs","byte_start":15784,"byte_end":15788,"line_start":29,"line_end":29,"column_start":12,"column_end":16},"name":"Edns","qualname":"::op::edns::Edns","value":"Edns {  }","parent":null,"children":[{"krate":0,"index":2333},{"krate":0,"index":2334},{"krate":0,"index":2335},{"krate":0,"index":2336},{"krate":0,"index":2337}],"decl_id":null,"docs":" Edns implements the higher level concepts for working with extended dns as it is used to create or be\n created from OPT record data.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/edns.rs","byte_start":16479,"byte_end":16482,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"new","qualname":"<Edns>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new extended DNS object.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/edns.rs","byte_start":16610,"byte_end":16620,"line_start":62,"line_end":62,"column_start":12,"column_end":22},"name":"rcode_high","qualname":"<Edns>::rcode_high","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" The high order bytes for the response code in the DNS Message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/edns.rs","byte_start":16711,"byte_end":16718,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"version","qualname":"<Edns>::version","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the EDNS version\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/edns.rs","byte_start":16842,"byte_end":16851,"line_start":72,"line_end":72,"column_start":12,"column_end":21},"name":"dnssec_ok","qualname":"<Edns>::dnssec_ok","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Specifies that DNSSec is supported for this Client or Server\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/edns.rs","byte_start":16960,"byte_end":16971,"line_start":77,"line_end":77,"column_start":12,"column_end":23},"name":"max_payload","qualname":"<Edns>::max_payload","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Maximum supported size of the DNS payload\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/edns.rs","byte_start":17083,"byte_end":17089,"line_start":82,"line_end":82,"column_start":12,"column_end":18},"name":"option","qualname":"<Edns>::option","value":"fn (&self, code: EdnsCode) -> Option<&EdnsOption>","parent":null,"children":[],"decl_id":null,"docs":" Returns the Option associated with the code\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/edns.rs","byte_start":17231,"byte_end":17238,"line_start":87,"line_end":87,"column_start":12,"column_end":19},"name":"options","qualname":"<Edns>::options","value":"fn (&self) -> &OPT","parent":null,"children":[],"decl_id":null,"docs":" Returns the options portion of EDNS\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/edns.rs","byte_start":17349,"byte_end":17363,"line_start":92,"line_end":92,"column_start":12,"column_end":26},"name":"set_rcode_high","qualname":"<Edns>::set_rcode_high","value":"fn (&mut self, rcode_high: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the high order bits for the result code.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/edns.rs","byte_start":17477,"byte_end":17488,"line_start":97,"line_end":97,"column_start":12,"column_end":23},"name":"set_version","qualname":"<Edns>::set_version","value":"fn (&mut self, version: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the EDNS version\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/edns.rs","byte_start":17607,"byte_end":17620,"line_start":102,"line_end":102,"column_start":12,"column_end":25},"name":"set_dnssec_ok","qualname":"<Edns>::set_dnssec_ok","value":"fn (&mut self, dnssec_ok: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set to true if DNSSec is supported\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/edns.rs","byte_start":17838,"byte_end":17853,"line_start":108,"line_end":108,"column_start":12,"column_end":27},"name":"set_max_payload","qualname":"<Edns>::set_max_payload","value":"fn (&mut self, max_payload: u16) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum payload which can be supported\n From RFC 6891: `Values lower than 512 MUST be treated as equal to 512`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/edns.rs","byte_start":17990,"byte_end":18000,"line_start":113,"line_end":113,"column_start":12,"column_end":22},"name":"set_option","qualname":"<Edns>::set_option","value":"fn (&mut self, option: EdnsOption) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the specified EDNS option\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":118},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/header.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"header","qualname":"::op::header","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/header.rs","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":2346},{"krate":0,"index":2425},{"krate":0,"index":2423},{"krate":0,"index":2419},{"krate":0,"index":2420},{"krate":0,"index":2361},{"krate":0,"index":2427},{"krate":0,"index":2440},{"krate":0,"index":2437},{"krate":0,"index":2438},{"krate":0,"index":2435},{"krate":0,"index":2434},{"krate":0,"index":2432},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":157},{"krate":0,"index":159}],"decl_id":null,"docs":" Message metadata\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2346},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/header.rs","byte_start":24010,"byte_end":24016,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"name":"Header","qualname":"::op::header::Header","value":"Header {  }","parent":null,"children":[{"krate":0,"index":2347},{"krate":0,"index":2348},{"krate":0,"index":2349},{"krate":0,"index":2350},{"krate":0,"index":2351},{"krate":0,"index":2352},{"krate":0,"index":2353},{"krate":0,"index":2354},{"krate":0,"index":2355},{"krate":0,"index":2356},{"krate":0,"index":2357},{"krate":0,"index":2358},{"krate":0,"index":2359},{"krate":0,"index":2360}],"decl_id":null,"docs":" Metadata for the `Message` struct.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2428},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/header.rs","byte_start":24603,"byte_end":24608,"line_start":80,"line_end":80,"column_start":5,"column_end":10},"name":"Query","qualname":"::op::header::MessageType::Query","value":"MessageType::Query","parent":{"krate":0,"index":2427},"children":[],"decl_id":null,"docs":" Queries are Client requests, these are either Queries or Updates\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2430},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/header.rs","byte_start":24676,"byte_end":24684,"line_start":82,"line_end":82,"column_start":5,"column_end":13},"name":"Response","qualname":"::op::header::MessageType::Response","value":"MessageType::Response","parent":{"krate":0,"index":2427},"children":[],"decl_id":null,"docs":" Response message from the Server or upstream Resolver\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2427},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/header.rs","byte_start":24512,"byte_end":24523,"line_start":78,"line_end":78,"column_start":10,"column_end":21},"name":"MessageType","qualname":"::op::header::MessageType","value":"MessageType::{Query, Response}","parent":null,"children":[{"krate":0,"index":2428},{"krate":0,"index":2430}],"decl_id":null,"docs":" Message types are either Query (also Update) or Response\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/header.rs","byte_start":25404,"byte_end":25407,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"new","qualname":"<Header>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" A default Header, not very useful.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/header.rs","byte_start":25533,"byte_end":25536,"line_start":115,"line_end":115,"column_start":12,"column_end":15},"name":"len","qualname":"<Header>::len","value":"fn () -> usize","parent":null,"children":[],"decl_id":null,"docs":" Length of the header, always 12 bytes\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/header.rs","byte_start":25504,"byte_end":25521,"line_start":114,"line_end":114,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/header.rs","byte_start":25680,"byte_end":25686,"line_start":120,"line_end":120,"column_start":12,"column_end":18},"name":"set_id","qualname":"<Header>::set_id","value":"fn (&mut self, id: u16) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the id of the message, for queries this should be random.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/header.rs","byte_start":25842,"byte_end":25858,"line_start":126,"line_end":126,"column_start":12,"column_end":28},"name":"set_message_type","qualname":"<Header>::set_message_type","value":"fn (&mut self, message_type: MessageType) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the message type, Queries and Updates both use Query.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/header.rs","byte_start":26032,"byte_end":26043,"line_start":132,"line_end":132,"column_start":12,"column_end":23},"name":"set_op_code","qualname":"<Header>::set_op_code","value":"fn (&mut self, op_code: OpCode) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the operation code for the message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/header.rs","byte_start":26225,"byte_end":26242,"line_start":138,"line_end":138,"column_start":12,"column_end":29},"name":"set_authoritative","qualname":"<Header>::set_authoritative","value":"fn (&mut self, authoritative: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" From the server is specifies that it is an authoritative response.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/header.rs","byte_start":26495,"byte_end":26508,"line_start":146,"line_end":146,"column_start":12,"column_end":25},"name":"set_truncated","qualname":"<Header>::set_truncated","value":"fn (&mut self, truncated: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies that the records were too large for the payload.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/header.rs","byte_start":26710,"byte_end":26731,"line_start":152,"line_end":152,"column_start":12,"column_end":33},"name":"set_recursion_desired","qualname":"<Header>::set_recursion_desired","value":"fn (&mut self, recursion_desired: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specify that the resolver should recursively request data from upstream DNS nodes\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/header.rs","byte_start":26945,"byte_end":26968,"line_start":158,"line_end":158,"column_start":12,"column_end":35},"name":"set_recursion_available","qualname":"<Header>::set_recursion_available","value":"fn (&mut self, recursion_available: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies that recursion is available from this or the remote resolver\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/header.rs","byte_start":27218,"byte_end":27236,"line_start":164,"line_end":164,"column_start":12,"column_end":30},"name":"set_authentic_data","qualname":"<Header>::set_authentic_data","value":"fn (&mut self, authentic_data: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specifies that the data is authentic, i.e. the resolver believes all data to be valid through DNSSec\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/header.rs","byte_start":27478,"byte_end":27499,"line_start":170,"line_end":170,"column_start":12,"column_end":33},"name":"set_checking_disabled","qualname":"<Header>::set_checking_disabled","value":"fn (&mut self, checking_disabled: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Used during recursive resolution to specified if a resolver should or should not validate DNSSec signatures\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/header.rs","byte_start":27713,"byte_end":27730,"line_start":176,"line_end":176,"column_start":12,"column_end":29},"name":"set_response_code","qualname":"<Header>::set_response_code","value":"fn (&mut self, response_code: ResponseCode) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" The low response code (original response codes before EDNS extensions)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/header.rs","byte_start":27914,"byte_end":27929,"line_start":182,"line_end":182,"column_start":12,"column_end":27},"name":"set_query_count","qualname":"<Header>::set_query_count","value":"fn (&mut self, query_count: u16) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Number or query records in the message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/header.rs","byte_start":28093,"byte_end":28109,"line_start":188,"line_end":188,"column_start":12,"column_end":28},"name":"set_answer_count","qualname":"<Header>::set_answer_count","value":"fn (&mut self, answer_count: u16) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Number of answer records in the message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/header.rs","byte_start":28281,"byte_end":28302,"line_start":194,"line_end":194,"column_start":12,"column_end":33},"name":"set_name_server_count","qualname":"<Header>::set_name_server_count","value":"fn (&mut self, name_server_count: u16) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Number of name server records in the message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/header.rs","byte_start":28488,"byte_end":28508,"line_start":200,"line_end":200,"column_start":12,"column_end":32},"name":"set_additional_count","qualname":"<Header>::set_additional_count","value":"fn (&mut self, additional_count: u16) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Number of additional records in the message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/header.rs","byte_start":28969,"byte_end":28971,"line_start":211,"line_end":211,"column_start":12,"column_end":14},"name":"id","qualname":"<Header>::id","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" ```text\n ID              A 16 bit identifier assigned by the program that\n                 generates any kind of query.  This identifier is copied\n                 the corresponding reply and can be used by the requester\n                 to match up replies to outstanding queries.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/header.rs","byte_start":29185,"byte_end":29197,"line_start":219,"line_end":219,"column_start":12,"column_end":24},"name":"message_type","qualname":"<Header>::message_type","value":"fn (&self) -> MessageType","parent":null,"children":[],"decl_id":null,"docs":" ```text\n QR              A one bit field that specifies whether this message is a\n                 query (0), or a response (1).\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/header.rs","byte_start":29545,"byte_end":29552,"line_start":228,"line_end":228,"column_start":12,"column_end":19},"name":"op_code","qualname":"<Header>::op_code","value":"fn (&self) -> OpCode","parent":null,"children":[],"decl_id":null,"docs":" ```text\n OPCODE          A four bit field that specifies kind of query in this\n                 message.  This value is set by the originator of a query\n                 and copied into the response.  The values are: <see super::op_code>\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/header.rs","byte_start":30181,"byte_end":30194,"line_start":242,"line_end":242,"column_start":12,"column_end":25},"name":"authoritative","qualname":"<Header>::authoritative","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" ```text\n AA              Authoritative Answer - this bit is valid in responses,\n                 and specifies that the responding name server is an\n                 authority for the domain name in question section.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/header.rs","byte_start":30483,"byte_end":30492,"line_start":251,"line_end":251,"column_start":12,"column_end":21},"name":"truncated","qualname":"<Header>::truncated","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" ```text\n TC              TrunCation - specifies that this message was truncated\n                 due to length greater than that permitted on the\n                 transmission channel.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/header.rs","byte_start":30872,"byte_end":30889,"line_start":261,"line_end":261,"column_start":12,"column_end":29},"name":"recursion_desired","qualname":"<Header>::recursion_desired","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" ```text\n RD              Recursion Desired - this bit may be set in a query and\n                 is copied into the response.  If RD is set, it directs\n                 the name server to pursue the query recursively.\n                 Recursive query support is optional.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/header.rs","byte_start":31196,"byte_end":31215,"line_start":270,"line_end":270,"column_start":12,"column_end":31},"name":"recursion_available","qualname":"<Header>::recursion_available","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" ```text\n RA              Recursion Available - this be is set or cleared in a\n                 response, and denotes whether recursive query support is\n                 available in the name server.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/header.rs","byte_start":32950,"byte_end":32964,"line_start":304,"line_end":304,"column_start":12,"column_end":26},"name":"authentic_data","qualname":"<Header>::authentic_data","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" [RFC 4035, DNSSEC Resource Records, March 2005](https://tools.ietf.org/html/rfc4035#section-3.1.6)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/header.rs","byte_start":33062,"byte_end":33079,"line_start":309,"line_end":309,"column_start":12,"column_end":29},"name":"checking_disabled","qualname":"<Header>::checking_disabled","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" see `is_authentic_data()`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/header.rs","byte_start":33382,"byte_end":33395,"line_start":318,"line_end":318,"column_start":12,"column_end":25},"name":"response_code","qualname":"<Header>::response_code","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" ```text\n RCODE           Response code - this 4 bit field is set as part of\n                 responses.  The values have the following\n                 interpretation: <see super::response_code>\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/header.rs","byte_start":33837,"byte_end":33848,"line_start":331,"line_end":331,"column_start":12,"column_end":23},"name":"query_count","qualname":"<Header>::query_count","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" ```text\n QDCOUNT         an unsigned 16 bit integer specifying the number of\n                 entries in the question section.\n ```","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/header.rs","byte_start":34286,"byte_end":34298,"line_start":344,"line_end":344,"column_start":12,"column_end":24},"name":"answer_count","qualname":"<Header>::answer_count","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" ```text\n ANCOUNT         an unsigned 16 bit integer specifying the number of\n                 resource records in the answer section.\n ```","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/header.rs","byte_start":34934,"byte_end":34951,"line_start":360,"line_end":360,"column_start":12,"column_end":29},"name":"name_server_count","qualname":"<Header>::name_server_count","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" for queries this is the nameservers which are authorities for the SOA of the Record\n for updates this is the update record count\n ```text\n NSCOUNT         an unsigned 16 bit integer specifying the number of name\n                 server resource records in the authority records\n                 section.\n ```","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/header.rs","byte_start":35328,"byte_end":35344,"line_start":372,"line_end":372,"column_start":12,"column_end":28},"name":"additional_count","qualname":"<Header>::additional_count","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" ```text\n ARCOUNT         an unsigned 16 bit integer specifying the number of\n                 resource records in the additional records section.\n ```","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":162},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"message","qualname":"::op::message","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":179},{"krate":0,"index":2442},{"krate":0,"index":2458},{"krate":0,"index":2456},{"krate":0,"index":2452},{"krate":0,"index":2453},{"krate":0,"index":2450},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":191},{"krate":0,"index":251},{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":265},{"krate":0,"index":267},{"krate":0,"index":272},{"krate":0,"index":277},{"krate":0,"index":279}],"decl_id":null,"docs":" Basic protocol message for DNS\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2442},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":44327,"byte_end":44334,"line_start":77,"line_end":77,"column_start":12,"column_end":19},"name":"Message","qualname":"::op::message::Message","value":"Message {  }","parent":null,"children":[{"krate":0,"index":2443},{"krate":0,"index":2444},{"krate":0,"index":2445},{"krate":0,"index":2446},{"krate":0,"index":2447},{"krate":0,"index":2448},{"krate":0,"index":2449}],"decl_id":null,"docs":" The basic request and response datastructure, used for all DNS protocols.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":185},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":44597,"byte_end":44617,"line_start":88,"line_end":88,"column_start":8,"column_end":28},"name":"update_header_counts","qualname":"::op::message::update_header_counts","value":"fn (current_header: &Header, is_truncated: bool, counts: HeaderCounts) -> Header","parent":null,"children":[],"decl_id":null,"docs":" Returns a new Header with accurate counts for each Message section\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":186},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":45438,"byte_end":45450,"line_start":111,"line_end":111,"column_start":12,"column_end":24},"name":"HeaderCounts","qualname":"::op::message::HeaderCounts","value":"HeaderCounts { query_count, answer_count, nameserver_count, additional_count }","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190}],"decl_id":null,"docs":" Tracks the counts of the records in the Message.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":187},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":45506,"byte_end":45517,"line_start":113,"line_end":113,"column_start":9,"column_end":20},"name":"query_count","qualname":"::op::message::HeaderCounts::query_count","value":"usize","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" The number of queries in the Message\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":188},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":45579,"byte_end":45591,"line_start":115,"line_end":115,"column_start":9,"column_end":21},"name":"answer_count","qualname":"::op::message::HeaderCounts::answer_count","value":"usize","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" The number of answers in the Message\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":189},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":45672,"byte_end":45688,"line_start":117,"line_end":117,"column_start":9,"column_end":25},"name":"nameserver_count","qualname":"::op::message::HeaderCounts::nameserver_count","value":"usize","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" The number of nameservers or authorities in the Message\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":190},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":45761,"byte_end":45777,"line_start":119,"line_end":119,"column_start":9,"column_end":25},"name":"additional_count","qualname":"::op::message::HeaderCounts::additional_count","value":"usize","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" The number of additional records in the Message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":45853,"byte_end":45856,"line_start":124,"line_end":124,"column_start":12,"column_end":15},"name":"new","qualname":"<Message>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new \"empty\" Message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":46431,"byte_end":46440,"line_start":143,"line_end":143,"column_start":12,"column_end":21},"name":"error_msg","qualname":"<Message>::error_msg","value":"fn (id: u16, op_code: OpCode, response_code: ResponseCode) -> Message","parent":null,"children":[],"decl_id":null,"docs":" Returns a Message constructed with error details to return to a client","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":46867,"byte_end":46875,"line_start":154,"line_end":154,"column_start":12,"column_end":20},"name":"truncate","qualname":"<Message>::truncate","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Truncates a Message, this blindly removes all response fields and sets truncated to `true`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":47650,"byte_end":47656,"line_start":173,"line_end":173,"column_start":12,"column_end":18},"name":"set_id","qualname":"<Message>::set_id","value":"fn (&mut self, id: u16) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" see `Header::set_id`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":47794,"byte_end":47810,"line_start":179,"line_end":179,"column_start":12,"column_end":28},"name":"set_message_type","qualname":"<Message>::set_message_type","value":"fn (&mut self, message_type: MessageType) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" see `Header::set_message_type`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":47981,"byte_end":47992,"line_start":185,"line_end":185,"column_start":12,"column_end":23},"name":"set_op_code","qualname":"<Message>::set_op_code","value":"fn (&mut self, op_code: OpCode) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" see `Header::set_op_code`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":48149,"byte_end":48166,"line_start":191,"line_end":191,"column_start":12,"column_end":29},"name":"set_authoritative","qualname":"<Message>::set_authoritative","value":"fn (&mut self, authoritative: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" see `Header::set_authoritative`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":48335,"byte_end":48348,"line_start":197,"line_end":197,"column_start":12,"column_end":25},"name":"set_truncated","qualname":"<Message>::set_truncated","value":"fn (&mut self, truncated: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" see `Header::set_truncated`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":48513,"byte_end":48534,"line_start":203,"line_end":203,"column_start":12,"column_end":33},"name":"set_recursion_desired","qualname":"<Message>::set_recursion_desired","value":"fn (&mut self, recursion_desired: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" see `Header::set_recursion_desired`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":48725,"byte_end":48748,"line_start":209,"line_end":209,"column_start":12,"column_end":35},"name":"set_recursion_available","qualname":"<Message>::set_recursion_available","value":"fn (&mut self, recursion_available: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" see `Header::set_recursion_available`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":48940,"byte_end":48958,"line_start":215,"line_end":215,"column_start":12,"column_end":30},"name":"set_authentic_data","qualname":"<Message>::set_authentic_data","value":"fn (&mut self, authentic_data: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" see `Header::set_authentic_data`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":49138,"byte_end":49159,"line_start":221,"line_end":221,"column_start":12,"column_end":33},"name":"set_checking_disabled","qualname":"<Message>::set_checking_disabled","value":"fn (&mut self, checking_disabled: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" see `Header::set_checking_disabled`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":49344,"byte_end":49361,"line_start":227,"line_end":227,"column_start":12,"column_end":29},"name":"set_response_code","qualname":"<Message>::set_response_code","value":"fn (&mut self, response_code: ResponseCode) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" see `Header::set_response_code`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":49603,"byte_end":49612,"line_start":233,"line_end":233,"column_start":12,"column_end":21},"name":"add_query","qualname":"<Message>::add_query","value":"fn (&mut self, query: Query) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add a query to the Message, either the query response from the server, or the request Query.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":49792,"byte_end":49803,"line_start":239,"line_end":239,"column_start":12,"column_end":23},"name":"add_queries","qualname":"<Message>::add_queries","value":"fn <Q, I> (&mut self, queries: Q) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Adds an iterator over a set of Queries to be added to the message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":50095,"byte_end":50105,"line_start":252,"line_end":252,"column_start":12,"column_end":22},"name":"add_answer","qualname":"<Message>::add_answer","value":"fn (&mut self, record: Record) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add an answer to the Message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":50298,"byte_end":50309,"line_start":258,"line_end":258,"column_start":12,"column_end":23},"name":"add_answers","qualname":"<Message>::add_answers","value":"fn <R, I> (&mut self, records: R) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add all the records from the iterator to the answers section of the Message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":50736,"byte_end":50750,"line_start":275,"line_end":275,"column_start":12,"column_end":26},"name":"insert_answers","qualname":"<Message>::insert_answers","value":"fn (&mut self, records: Vec<Record>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the answers to the specified set of Records.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":50926,"byte_end":50941,"line_start":281,"line_end":281,"column_start":12,"column_end":27},"name":"add_name_server","qualname":"<Message>::add_name_server","value":"fn (&mut self, record: Record) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add a name server record to the Message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":51141,"byte_end":51157,"line_start":287,"line_end":287,"column_start":12,"column_end":28},"name":"add_name_servers","qualname":"<Message>::add_name_servers","value":"fn <R, I> (&mut self, records: R) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add all the records in the Iterator to the name server section of the message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":51600,"byte_end":51619,"line_start":304,"line_end":304,"column_start":12,"column_end":31},"name":"insert_name_servers","qualname":"<Message>::insert_name_servers","value":"fn (&mut self, records: Vec<Record>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the name_servers to the specified set of Records.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":51805,"byte_end":51819,"line_start":310,"line_end":310,"column_start":12,"column_end":26},"name":"add_additional","qualname":"<Message>::add_additional","value":"fn (&mut self, record: Record) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add an additional Record to the message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":52106,"byte_end":52124,"line_start":320,"line_end":320,"column_start":12,"column_end":30},"name":"insert_additionals","qualname":"<Message>::insert_additionals","value":"fn (&mut self, records: Vec<Record>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the additional to the specified set of Records.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":52304,"byte_end":52312,"line_start":326,"line_end":326,"column_start":12,"column_end":20},"name":"set_edns","qualname":"<Message>::set_edns","value":"fn (&mut self, edns: Edns) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Add the EDNS section to the Message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":52887,"byte_end":52893,"line_start":342,"line_end":342,"column_start":12,"column_end":18},"name":"header","qualname":"<Message>::header","value":"fn (&self) -> &Header","parent":null,"children":[],"decl_id":null,"docs":" Gets the header of the Message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":52980,"byte_end":52982,"line_start":347,"line_end":347,"column_start":12,"column_end":14},"name":"id","qualname":"<Message>::id","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" see `Header::id()`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":53079,"byte_end":53091,"line_start":352,"line_end":352,"column_start":12,"column_end":24},"name":"message_type","qualname":"<Message>::message_type","value":"fn (&self) -> MessageType","parent":null,"children":[],"decl_id":null,"docs":" see `Header::message_type()`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":53201,"byte_end":53208,"line_start":357,"line_end":357,"column_start":12,"column_end":19},"name":"op_code","qualname":"<Message>::op_code","value":"fn (&self) -> OpCode","parent":null,"children":[],"decl_id":null,"docs":" see `Header::op_code()`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":53314,"byte_end":53327,"line_start":362,"line_end":362,"column_start":12,"column_end":25},"name":"authoritative","qualname":"<Message>::authoritative","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" see `Header::authoritative()`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":53433,"byte_end":53442,"line_start":367,"line_end":367,"column_start":12,"column_end":21},"name":"truncated","qualname":"<Message>::truncated","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" see `Header::truncated()`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":53552,"byte_end":53569,"line_start":372,"line_end":372,"column_start":12,"column_end":29},"name":"recursion_desired","qualname":"<Message>::recursion_desired","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" see `Header::recursion_desired()`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":53689,"byte_end":53708,"line_start":377,"line_end":377,"column_start":12,"column_end":31},"name":"recursion_available","qualname":"<Message>::recursion_available","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" see `Header::recursion_available()`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":53825,"byte_end":53839,"line_start":382,"line_end":382,"column_start":12,"column_end":26},"name":"authentic_data","qualname":"<Message>::authentic_data","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" see `Header::authentic_data()`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":53954,"byte_end":53971,"line_start":387,"line_end":387,"column_start":12,"column_end":29},"name":"checking_disabled","qualname":"<Message>::checking_disabled","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" see `Header::checking_disabled()`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":54228,"byte_end":54241,"line_start":395,"line_end":395,"column_start":12,"column_end":25},"name":"response_code","qualname":"<Message>::response_code","value":"fn (&self) -> ResponseCode","parent":null,"children":[],"decl_id":null,"docs":" # Return value","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":54527,"byte_end":54534,"line_start":405,"line_end":405,"column_start":12,"column_end":19},"name":"queries","qualname":"<Message>::queries","value":"fn (&self) -> &[Query]","parent":null,"children":[],"decl_id":null,"docs":" ```text\n Question        Carries the query name and other query parameters.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":54693,"byte_end":54700,"line_start":412,"line_end":412,"column_start":12,"column_end":19},"name":"answers","qualname":"<Message>::answers","value":"fn (&self) -> &[Record]","parent":null,"children":[],"decl_id":null,"docs":" ```text\n Answer          Carries RRs which directly answer the query.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":54812,"byte_end":54824,"line_start":417,"line_end":417,"column_start":12,"column_end":24},"name":"take_answers","qualname":"<Message>::take_answers","value":"fn (&mut self) -> Vec<Record>","parent":null,"children":[],"decl_id":null,"docs":" Removes all the answers from the Message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":55157,"byte_end":55169,"line_start":426,"line_end":426,"column_start":12,"column_end":24},"name":"name_servers","qualname":"<Message>::name_servers","value":"fn (&self) -> &[Record]","parent":null,"children":[],"decl_id":null,"docs":" ```text\n Authority       Carries RRs which describe other authoritative servers.\n                 May optionally carry the SOA RR for the authoritative\n                 data in the answer section.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":55286,"byte_end":55303,"line_start":431,"line_end":431,"column_start":12,"column_end":29},"name":"take_name_servers","qualname":"<Message>::take_name_servers","value":"fn (&mut self) -> Vec<Record>","parent":null,"children":[],"decl_id":null,"docs":" Remove the name servers from the Message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":55552,"byte_end":55563,"line_start":439,"line_end":439,"column_start":12,"column_end":23},"name":"additionals","qualname":"<Message>::additionals","value":"fn (&self) -> &[Record]","parent":null,"children":[],"decl_id":null,"docs":" ```text\n Additional      Carries RRs which may be helpful in using the RRs in the\n                 other sections.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":55685,"byte_end":55701,"line_start":444,"line_end":444,"column_start":12,"column_end":28},"name":"take_additionals","qualname":"<Message>::take_additionals","value":"fn (&mut self) -> Vec<Record>","parent":null,"children":[],"decl_id":null,"docs":" Remove the additional Records from the Message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":57193,"byte_end":57197,"line_start":477,"line_end":477,"column_start":12,"column_end":16},"name":"edns","qualname":"<Message>::edns","value":"fn (&self) -> Option<&Edns>","parent":null,"children":[],"decl_id":null,"docs":" [RFC 6891, EDNS(0) Extensions, April 2013](https://tools.ietf.org/html/rfc6891#section-6.1.1)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":57331,"byte_end":57339,"line_start":482,"line_end":482,"column_start":12,"column_end":20},"name":"edns_mut","qualname":"<Message>::edns_mut","value":"fn (&mut self) -> &mut Edns","parent":null,"children":[],"decl_id":null,"docs":" If edns is_none, this will create a new default Edns.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":57605,"byte_end":57616,"line_start":493,"line_end":493,"column_start":12,"column_end":23},"name":"max_payload","qualname":"<Message>::max_payload","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" # Return value","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":57898,"byte_end":57905,"line_start":505,"line_end":505,"column_start":12,"column_end":19},"name":"version","qualname":"<Message>::version","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" # Return value","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":58706,"byte_end":58710,"line_start":523,"line_end":523,"column_start":12,"column_end":16},"name":"sig0","qualname":"<Message>::sig0","value":"fn (&self) -> &[Record]","parent":null,"children":[],"decl_id":null,"docs":" [RFC 2535, Domain Name System Security Extensions, March 1999](https://tools.ietf.org/html/rfc2535#section-4)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":59500,"byte_end":59512,"line_start":546,"line_end":546,"column_start":12,"column_end":24},"name":"read_queries","qualname":"<Message>::read_queries","value":"fn (decoder: &mut BinDecoder, count: usize) -> ProtoResult<Vec<Query>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read the specified number of `Query`s\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":60057,"byte_end":60069,"line_start":560,"line_end":560,"column_start":12,"column_end":24},"name":"read_records","qualname":"<Message>::read_records","value":"fn (decoder: &mut BinDecoder, count: usize, is_additional: bool) -> ProtoResult<(Vec<Record>, Option<Edns>, Vec<Record>)>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to read the specified number of records","sig":null,"attributes":[{"value":"allow(unused_mut)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":60026,"byte_end":60043,"line_start":559,"line_end":559,"column_start":41,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":61936,"byte_end":61944,"line_start":609,"line_end":609,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<Message>::from_vec","value":"fn (buffer: &[u8]) -> ProtoResult<Message>","parent":null,"children":[],"decl_id":null,"docs":" Decodes a message from the buffer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":62133,"byte_end":62139,"line_start":615,"line_end":615,"column_start":12,"column_end":18},"name":"to_vec","qualname":"<Message>::to_vec","value":"fn (&self) -> Result<Vec<u8>, ProtoError>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the Message into a buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":62791,"byte_end":62799,"line_start":631,"line_end":631,"column_start":12,"column_end":20},"name":"finalize","qualname":"<Message>::finalize","value":"fn <MF> (&mut self, finalizer: &MF, inception_time: u32) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Finalize the message prior to sending.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":254},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":63829,"byte_end":63845,"line_start":664,"line_end":664,"column_start":11,"column_end":27},"name":"MessageFinalizer","qualname":"::op::message::MessageFinalizer","value":"MessageFinalizer: Send + Sync + 'static","parent":null,"children":[{"krate":0,"index":255}],"decl_id":null,"docs":" A trait for performing final amendments to a Message before it is sent.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":64422,"byte_end":64438,"line_start":676,"line_end":676,"column_start":8,"column_end":24},"name":"finalize_message","qualname":"::op::message::MessageFinalizer::finalize_message","value":"fn (&self, message: &Message, current_time: u32) -> ProtoResult<Vec<Record>>","parent":{"krate":0,"index":254},"children":[],"decl_id":null,"docs":" The message taken in should be processed and then return [`Record`]s which should be\n  appended to the additional section of the message.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":256},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":64682,"byte_end":64702,"line_start":682,"line_end":682,"column_start":12,"column_end":32},"name":"NoopMessageFinalizer","qualname":"::op::message::NoopMessageFinalizer","value":"","parent":null,"children":[],"decl_id":null,"docs":" A MessageFinalizer which does nothing","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":64772,"byte_end":64775,"line_start":686,"line_end":686,"column_start":12,"column_end":15},"name":"new","qualname":"<NoopMessageFinalizer>::new","value":"fn () -> Option<Arc<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Always returns None\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":262},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":65110,"byte_end":65129,"line_start":698,"line_end":698,"column_start":8,"column_end":27},"name":"count_was_truncated","qualname":"::op::message::count_was_truncated","value":"fn (result: ProtoResult<usize>) -> ProtoResult<(usize, bool)>","parent":null,"children":[],"decl_id":null,"docs":" Returns the count written and a boolean if it was truncated\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":265},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":65501,"byte_end":65513,"line_start":709,"line_end":709,"column_start":11,"column_end":23},"name":"EmitAndCount","qualname":"::op::message::EmitAndCount","value":"EmitAndCount","parent":null,"children":[{"krate":0,"index":266}],"decl_id":null,"docs":" A trait that defines types which can be emitted as a set, with the associated count returned.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":65586,"byte_end":65590,"line_start":711,"line_end":711,"column_start":8,"column_end":12},"name":"emit","qualname":"::op::message::EmitAndCount::emit","value":"fn (&mut self, encoder: &mut BinEncoder) -> ProtoResult<usize>","parent":{"krate":0,"index":265},"children":[],"decl_id":null,"docs":" Emit self to the encoder and return the count of items\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":272},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":65945,"byte_end":65963,"line_start":722,"line_end":722,"column_start":8,"column_end":26},"name":"emit_message_parts","qualname":"::op::message::emit_message_parts","value":"fn <Q, A, N, D> (header: &Header, queries: &mut Q, answers: &mut A, name_servers: &mut N, additionals: &mut D, edns: Option<&Edns>, sig0: &[Record], encoder: &mut BinEncoder) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Emits the different sections of a message properly\n","sig":null,"attributes":[{"value":"allow(clippy :: too_many_arguments)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":65901,"byte_end":65937,"line_start":721,"line_end":721,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":282},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/op_code.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"op_code","qualname":"::op::op_code","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/op_code.rs","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":2460},{"krate":0,"index":2477},{"krate":0,"index":2474},{"krate":0,"index":2475},{"krate":0,"index":2472},{"krate":0,"index":2471},{"krate":0,"index":2469},{"krate":0,"index":285},{"krate":0,"index":287}],"decl_id":null,"docs":" Operation code for queries, updates, and responses\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2461},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/op_code.rs","byte_start":74246,"byte_end":74251,"line_start":44,"line_end":44,"column_start":5,"column_end":10},"name":"Query","qualname":"::op::op_code::OpCode::Query","value":"OpCode::Query","parent":{"krate":0,"index":2460},"children":[],"decl_id":null,"docs":" Query request [RFC 1035](https://tools.ietf.org/html/rfc1035)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2463},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/op_code.rs","byte_start":74329,"byte_end":74335,"line_start":47,"line_end":47,"column_start":5,"column_end":11},"name":"Status","qualname":"::op::op_code::OpCode::Status","value":"OpCode::Status","parent":{"krate":0,"index":2460},"children":[],"decl_id":null,"docs":" Status message [RFC 1035](https://tools.ietf.org/html/rfc1035)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2465},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/op_code.rs","byte_start":74415,"byte_end":74421,"line_start":50,"line_end":50,"column_start":5,"column_end":11},"name":"Notify","qualname":"::op::op_code::OpCode::Notify","value":"OpCode::Notify","parent":{"krate":0,"index":2460},"children":[],"decl_id":null,"docs":" Notify of change [RFC 1996](https://tools.ietf.org/html/rfc1996)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2467},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/op_code.rs","byte_start":74499,"byte_end":74505,"line_start":53,"line_end":53,"column_start":5,"column_end":11},"name":"Update","qualname":"::op::op_code::OpCode::Update","value":"OpCode::Update","parent":{"krate":0,"index":2460},"children":[],"decl_id":null,"docs":" Update message [RFC 2136](https://tools.ietf.org/html/rfc2136)\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2460},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/op_code.rs","byte_start":74163,"byte_end":74169,"line_start":42,"line_end":42,"column_start":10,"column_end":16},"name":"OpCode","qualname":"::op::op_code::OpCode","value":"OpCode::{Query, Status, Notify, Update}","parent":null,"children":[{"krate":0,"index":2461},{"krate":0,"index":2463},{"krate":0,"index":2465},{"krate":0,"index":2467}],"decl_id":null,"docs":" Operation code for queries, updates, and responses","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/op_code.rs","byte_start":74134,"byte_end":74153,"line_start":41,"line_end":41,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/op_code.rs","byte_start":75419,"byte_end":75426,"line_start":93,"line_end":93,"column_start":12,"column_end":19},"name":"from_u8","qualname":"<OpCode>::from_u8","value":"fn (value: u8) -> ProtoResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Decodes the binary value of the OpCode\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":289},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/query.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"query","qualname":"::op::query","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/query.rs","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":2479},{"krate":0,"index":2495},{"krate":0,"index":2493},{"krate":0,"index":2490},{"krate":0,"index":2491},{"krate":0,"index":2487},{"krate":0,"index":2483},{"krate":0,"index":2484},{"krate":0,"index":299},{"krate":0,"index":301},{"krate":0,"index":310},{"krate":0,"index":312},{"krate":0,"index":315}],"decl_id":null,"docs":" Query struct for looking up resource records\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2479},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/query.rs","byte_start":77792,"byte_end":77797,"line_start":53,"line_end":53,"column_start":12,"column_end":17},"name":"Query","qualname":"::op::query::Query","value":"Query {  }","parent":null,"children":[{"krate":0,"index":2480},{"krate":0,"index":2481},{"krate":0,"index":2482}],"decl_id":null,"docs":" Query struct for looking up resource records, basically a resource record without RDATA.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/query.rs","byte_start":78284,"byte_end":78287,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"new","qualname":"<Query>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a default query with an empty name and A, IN for the query_type and query_class\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/query.rs","byte_start":78413,"byte_end":78418,"line_start":77,"line_end":77,"column_start":12,"column_end":17},"name":"query","qualname":"<Query>::query","value":"fn (name: Name, query_type: RecordType) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new query from name and type, class defaults to IN\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/query.rs","byte_start":78630,"byte_end":78638,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"set_name","qualname":"<Query>::set_name","value":"fn (&mut self, name: Name) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" replaces name with the new name\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/query.rs","byte_start":78779,"byte_end":78793,"line_start":92,"line_end":92,"column_start":12,"column_end":26},"name":"set_query_type","qualname":"<Query>::set_query_type","value":"fn (&mut self, query_type: RecordType) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the RecordType being queried\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/query.rs","byte_start":78976,"byte_end":78991,"line_start":98,"line_end":98,"column_start":12,"column_end":27},"name":"set_query_class","qualname":"<Query>::set_query_class","value":"fn (&mut self, query_class: DNSClass) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Specify÷ the DNS class of the Query, almost always IN\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/query.rs","byte_start":79575,"byte_end":79579,"line_start":111,"line_end":111,"column_start":12,"column_end":16},"name":"name","qualname":"<Query>::name","value":"fn (&self) -> &Name","parent":null,"children":[],"decl_id":null,"docs":" ```text\n QNAME           a domain name represented as a sequence of labels, where\n                 each label consists of a length octet followed by that\n                 number of octets.  The domain name terminates with the\n                 zero length octet for the null label of the root.  Note\n                 that this field may be an odd number of octets; no\n                 padding is used.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/query.rs","byte_start":79963,"byte_end":79973,"line_start":121,"line_end":121,"column_start":12,"column_end":22},"name":"query_type","qualname":"<Query>::query_type","value":"fn (&self) -> RecordType","parent":null,"children":[],"decl_id":null,"docs":" ```text\n QTYPE           a two octet code which specifies the type of the query.\n                 The values for this field include all codes valid for a\n                 TYPE field, together with some more general codes which\n                 can match more than one type of RR.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/query.rs","byte_start":80225,"byte_end":80236,"line_start":129,"line_end":129,"column_start":12,"column_end":23},"name":"query_class","qualname":"<Query>::query_class","value":"fn (&self) -> DNSClass","parent":null,"children":[],"decl_id":null,"docs":" ```text\n QCLASS          a two octet code that specifies the class of the query.\n                 For example, the QCLASS field is IN for the Internet.\n ```\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":317},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/response_code.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"response_code","qualname":"::op::response_code","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/response_code.rs","parent":null,"children":[{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":2497},{"krate":0,"index":2549},{"krate":0,"index":2546},{"krate":0,"index":2547},{"krate":0,"index":2543},{"krate":0,"index":2544},{"krate":0,"index":2541},{"krate":0,"index":2540},{"krate":0,"index":2538},{"krate":0,"index":322},{"krate":0,"index":327},{"krate":0,"index":329},{"krate":0,"index":331}],"decl_id":null,"docs":" All defined response codes in DNS\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2498},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/response_code.rs","byte_start":84535,"byte_end":84542,"line_start":66,"line_end":66,"column_start":5,"column_end":12},"name":"NoError","qualname":"::op::response_code::ResponseCode::NoError","value":"ResponseCode::NoError","parent":{"krate":0,"index":2497},"children":[],"decl_id":null,"docs":" No Error [RFC 1035](https://tools.ietf.org/html/rfc1035)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2500},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/response_code.rs","byte_start":84618,"byte_end":84625,"line_start":69,"line_end":69,"column_start":5,"column_end":12},"name":"FormErr","qualname":"::op::response_code::ResponseCode::FormErr","value":"ResponseCode::FormErr","parent":{"krate":0,"index":2497},"children":[],"decl_id":null,"docs":" Format Error [RFC 1035](https://tools.ietf.org/html/rfc1035)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2502},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/response_code.rs","byte_start":84703,"byte_end":84711,"line_start":72,"line_end":72,"column_start":5,"column_end":13},"name":"ServFail","qualname":"::op::response_code::ResponseCode::ServFail","value":"ResponseCode::ServFail","parent":{"krate":0,"index":2497},"children":[],"decl_id":null,"docs":" Server Failure [RFC 1035](https://tools.ietf.org/html/rfc1035)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2504},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/response_code.rs","byte_start":84794,"byte_end":84802,"line_start":75,"line_end":75,"column_start":5,"column_end":13},"name":"NXDomain","qualname":"::op::response_code::ResponseCode::NXDomain","value":"ResponseCode::NXDomain","parent":{"krate":0,"index":2497},"children":[],"decl_id":null,"docs":" Non-Existent Domain [RFC 1035](https://tools.ietf.org/html/rfc1035)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2506},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/response_code.rs","byte_start":84881,"byte_end":84887,"line_start":78,"line_end":78,"column_start":5,"column_end":11},"name":"NotImp","qualname":"::op::response_code::ResponseCode::NotImp","value":"ResponseCode::NotImp","parent":{"krate":0,"index":2497},"children":[],"decl_id":null,"docs":" Not Implemented [RFC 1035](https://tools.ietf.org/html/rfc1035)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2508},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/response_code.rs","byte_start":84964,"byte_end":84971,"line_start":81,"line_end":81,"column_start":5,"column_end":12},"name":"Refused","qualname":"::op::response_code::ResponseCode::Refused","value":"ResponseCode::Refused","parent":{"krate":0,"index":2497},"children":[],"decl_id":null,"docs":" Query Refused [RFC 1035](https://tools.ietf.org/html/rfc1035)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2510},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/response_code.rs","byte_start":85065,"byte_end":85073,"line_start":84,"line_end":84,"column_start":5,"column_end":13},"name":"YXDomain","qualname":"::op::response_code::ResponseCode::YXDomain","value":"ResponseCode::YXDomain","parent":{"krate":0,"index":2497},"children":[],"decl_id":null,"docs":" Name Exists when it should not [RFC 2136](https://tools.ietf.org/html/rfc2136)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2512},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/response_code.rs","byte_start":85169,"byte_end":85176,"line_start":87,"line_end":87,"column_start":5,"column_end":12},"name":"YXRRSet","qualname":"::op::response_code::ResponseCode::YXRRSet","value":"ResponseCode::YXRRSet","parent":{"krate":0,"index":2497},"children":[],"decl_id":null,"docs":" RR Set Exists when it should not [RFC 2136](https://tools.ietf.org/html/rfc2136)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2514},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/response_code.rs","byte_start":85273,"byte_end":85280,"line_start":90,"line_end":90,"column_start":5,"column_end":12},"name":"NXRRSet","qualname":"::op::response_code::ResponseCode::NXRRSet","value":"ResponseCode::NXRRSet","parent":{"krate":0,"index":2497},"children":[],"decl_id":null,"docs":" RR Set that should exist does not [RFC 2136](https://tools.ietf.org/html/rfc2136)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2516},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/response_code.rs","byte_start":85451,"byte_end":85458,"line_start":94,"line_end":94,"column_start":5,"column_end":12},"name":"NotAuth","qualname":"::op::response_code::ResponseCode::NotAuth","value":"ResponseCode::NotAuth","parent":{"krate":0,"index":2497},"children":[],"decl_id":null,"docs":" Server Not Authoritative for zone [RFC 2136](https://tools.ietf.org/html/rfc2136)\n or Not Authorized [RFC 2845](https://tools.ietf.org/html/rfc2845)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2518},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/response_code.rs","byte_start":85548,"byte_end":85555,"line_start":97,"line_end":97,"column_start":5,"column_end":12},"name":"NotZone","qualname":"::op::response_code::ResponseCode::NotZone","value":"ResponseCode::NotZone","parent":{"krate":0,"index":2497},"children":[],"decl_id":null,"docs":" Name not contained in zone [RFC 2136](https://tools.ietf.org/html/rfc2136)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2520},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/response_code.rs","byte_start":85644,"byte_end":85651,"line_start":100,"line_end":100,"column_start":5,"column_end":12},"name":"BADVERS","qualname":"::op::response_code::ResponseCode::BADVERS","value":"ResponseCode::BADVERS","parent":{"krate":0,"index":2497},"children":[],"decl_id":null,"docs":" Bad OPT Version [RFC 6891](https://tools.ietf.org/html/rfc6891#section-9)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2522},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/response_code.rs","byte_start":85737,"byte_end":85743,"line_start":103,"line_end":103,"column_start":5,"column_end":11},"name":"BADSIG","qualname":"::op::response_code::ResponseCode::BADSIG","value":"ResponseCode::BADSIG","parent":{"krate":0,"index":2497},"children":[],"decl_id":null,"docs":" TSIG Signature Failure [RFC 2845](https://tools.ietf.org/html/rfc2845)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2524},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/response_code.rs","byte_start":85825,"byte_end":85831,"line_start":106,"line_end":106,"column_start":5,"column_end":11},"name":"BADKEY","qualname":"::op::response_code::ResponseCode::BADKEY","value":"ResponseCode::BADKEY","parent":{"krate":0,"index":2497},"children":[],"decl_id":null,"docs":" Key not recognized [RFC 2845](https://tools.ietf.org/html/rfc2845)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2526},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/response_code.rs","byte_start":85923,"byte_end":85930,"line_start":109,"line_end":109,"column_start":5,"column_end":12},"name":"BADTIME","qualname":"::op::response_code::ResponseCode::BADTIME","value":"ResponseCode::BADTIME","parent":{"krate":0,"index":2497},"children":[],"decl_id":null,"docs":" Signature out of time window [RFC 2845](https://tools.ietf.org/html/rfc2845)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2528},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/response_code.rs","byte_start":86019,"byte_end":86026,"line_start":112,"line_end":112,"column_start":5,"column_end":12},"name":"BADMODE","qualname":"::op::response_code::ResponseCode::BADMODE","value":"ResponseCode::BADMODE","parent":{"krate":0,"index":2497},"children":[],"decl_id":null,"docs":" Bad TKEY Mode [RFC 2930](https://tools.ietf.org/html/rfc2930#section-2.6)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2530},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/response_code.rs","byte_start":86120,"byte_end":86127,"line_start":115,"line_end":115,"column_start":5,"column_end":12},"name":"BADNAME","qualname":"::op::response_code::ResponseCode::BADNAME","value":"ResponseCode::BADNAME","parent":{"krate":0,"index":2497},"children":[],"decl_id":null,"docs":" Duplicate key name [RFC 2930](https://tools.ietf.org/html/rfc2930#section-2.6)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2532},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/response_code.rs","byte_start":86226,"byte_end":86232,"line_start":118,"line_end":118,"column_start":5,"column_end":11},"name":"BADALG","qualname":"::op::response_code::ResponseCode::BADALG","value":"ResponseCode::BADALG","parent":{"krate":0,"index":2497},"children":[],"decl_id":null,"docs":" Algorithm not supported [RFC 2930](https://tools.ietf.org/html/rfc2930#section-2.6)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2534},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/response_code.rs","byte_start":86320,"byte_end":86328,"line_start":121,"line_end":121,"column_start":5,"column_end":13},"name":"BADTRUNC","qualname":"::op::response_code::ResponseCode::BADTRUNC","value":"ResponseCode::BADTRUNC","parent":{"krate":0,"index":2497},"children":[],"decl_id":null,"docs":" Bad Truncation [RFC 4635](https://tools.ietf.org/html/rfc4635#section-4)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2536},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/response_code.rs","byte_start":86453,"byte_end":86462,"line_start":124,"line_end":124,"column_start":5,"column_end":14},"name":"BADCOOKIE","qualname":"::op::response_code::ResponseCode::BADCOOKIE","value":"ResponseCode::BADCOOKIE","parent":{"krate":0,"index":2497},"children":[],"decl_id":null,"docs":" Bad/missing server cookie [draft-ietf-dnsop-cookies](https://tools.ietf.org/html/draft-ietf-dnsop-cookies-10)\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2497},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/response_code.rs","byte_start":84451,"byte_end":84463,"line_start":64,"line_end":64,"column_start":10,"column_end":22},"name":"ResponseCode","qualname":"::op::response_code::ResponseCode","value":"ResponseCode::{NoError, FormErr, ServFail, NXDomain, NotImp, Refused, YXDomain, YXRRSet, NXRRSet, NotAuth, NotZone, BADVERS, BADSIG, BADKEY, BADTIME, BADMODE, BADNAME, BADALG, BADTRUNC, BADCOOKIE}","parent":null,"children":[{"krate":0,"index":2498},{"krate":0,"index":2500},{"krate":0,"index":2502},{"krate":0,"index":2504},{"krate":0,"index":2506},{"krate":0,"index":2508},{"krate":0,"index":2510},{"krate":0,"index":2512},{"krate":0,"index":2514},{"krate":0,"index":2516},{"krate":0,"index":2518},{"krate":0,"index":2520},{"krate":0,"index":2522},{"krate":0,"index":2524},{"krate":0,"index":2526},{"krate":0,"index":2528},{"krate":0,"index":2530},{"krate":0,"index":2532},{"krate":0,"index":2534},{"krate":0,"index":2536}],"decl_id":null,"docs":" The status code of the response to a query.","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/response_code.rs","byte_start":84422,"byte_end":84441,"line_start":63,"line_end":63,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/response_code.rs","byte_start":86816,"byte_end":86819,"line_start":133,"line_end":133,"column_start":12,"column_end":15},"name":"low","qualname":"<ResponseCode>::low","value":"fn (self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" returns the lower 4 bits of the response code (for the original header portion of the code)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/response_code.rs","byte_start":86968,"byte_end":86972,"line_start":138,"line_end":138,"column_start":12,"column_end":16},"name":"high","qualname":"<ResponseCode>::high","value":"fn (self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" returns the high 12 bits for the edns portion of the response code\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/response_code.rs","byte_start":87138,"byte_end":87142,"line_start":143,"line_end":143,"column_start":12,"column_end":16},"name":"from","qualname":"<ResponseCode>::from","value":"fn (high: u8, low: u8) -> ResponseCode","parent":null,"children":[],"decl_id":null,"docs":" Combines the EDNS high and low from the Header to produce the Extended ResponseCode\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/response_code.rs","byte_start":87328,"byte_end":87334,"line_start":148,"line_end":148,"column_start":12,"column_end":18},"name":"to_str","qualname":"<ResponseCode>::to_str","value":"fn (self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Transforms the response code into the human message\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":343},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rr","qualname":"::rr","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/mod.rs","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":375},{"krate":0,"index":704},{"krate":0,"index":962},{"krate":0,"index":1011},{"krate":0,"index":1046},{"krate":0,"index":1091},{"krate":0,"index":1145},{"krate":0,"index":1146},{"krate":0,"index":1150},{"krate":0,"index":1151},{"krate":0,"index":1152},{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1155}],"decl_id":null,"docs":" Resource record related components, e.g. `Name` aka label, `Record`, `RData`, ...\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":344},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/dns_class.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dns_class","qualname":"::rr::dns_class","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/dns_class.rs","parent":null,"children":[{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":2551},{"krate":0,"index":2578},{"krate":0,"index":2574},{"krate":0,"index":2575},{"krate":0,"index":2571},{"krate":0,"index":2572},{"krate":0,"index":2568},{"krate":0,"index":2567},{"krate":0,"index":2565},{"krate":0,"index":354},{"krate":0,"index":357},{"krate":0,"index":360},{"krate":0,"index":362},{"krate":0,"index":365},{"krate":0,"index":367},{"krate":0,"index":369},{"krate":0,"index":371},{"krate":0,"index":373}],"decl_id":null,"docs":" class of DNS operations, in general always IN for internet\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2552},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/dns_class.rs","byte_start":97531,"byte_end":97533,"line_start":24,"line_end":24,"column_start":5,"column_end":7},"name":"IN","qualname":"::rr::dns_class::DNSClass::IN","value":"DNSClass::IN","parent":{"krate":0,"index":2551},"children":[],"decl_id":null,"docs":" Internet\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2554},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/dns_class.rs","byte_start":97553,"byte_end":97555,"line_start":26,"line_end":26,"column_start":5,"column_end":7},"name":"CH","qualname":"::rr::dns_class::DNSClass::CH","value":"DNSClass::CH","parent":{"krate":0,"index":2551},"children":[],"decl_id":null,"docs":" Chaos\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2556},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/dns_class.rs","byte_start":97576,"byte_end":97578,"line_start":28,"line_end":28,"column_start":5,"column_end":7},"name":"HS","qualname":"::rr::dns_class::DNSClass::HS","value":"DNSClass::HS","parent":{"krate":0,"index":2551},"children":[],"decl_id":null,"docs":" Hesiod\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2558},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/dns_class.rs","byte_start":97604,"byte_end":97608,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"NONE","qualname":"::rr::dns_class::DNSClass::NONE","value":"DNSClass::NONE","parent":{"krate":0,"index":2551},"children":[],"decl_id":null,"docs":" QCLASS NONE\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2560},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/dns_class.rs","byte_start":97637,"byte_end":97640,"line_start":32,"line_end":32,"column_start":5,"column_end":8},"name":"ANY","qualname":"::rr::dns_class::DNSClass::ANY","value":"DNSClass::ANY","parent":{"krate":0,"index":2551},"children":[],"decl_id":null,"docs":" QCLASS * (ANY)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2562},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/dns_class.rs","byte_start":97801,"byte_end":97804,"line_start":35,"line_end":35,"column_start":5,"column_end":8},"name":"OPT","qualname":"::rr::dns_class::DNSClass::OPT","value":"DNSClass::OPT(u16)","parent":{"krate":0,"index":2551},"children":[],"decl_id":null,"docs":" Special class for OPT Version, it was overloaded for EDNS - RFC 6891\n From the RFC: `Values lower than 512 MUST be treated as equal to 512`\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2551},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/dns_class.rs","byte_start":97499,"byte_end":97507,"line_start":22,"line_end":22,"column_start":10,"column_end":18},"name":"DNSClass","qualname":"::rr::dns_class::DNSClass","value":"DNSClass::{IN, CH, HS, NONE, ANY, OPT}","parent":null,"children":[{"krate":0,"index":2552},{"krate":0,"index":2554},{"krate":0,"index":2556},{"krate":0,"index":2558},{"krate":0,"index":2560},{"krate":0,"index":2562}],"decl_id":null,"docs":" The DNS Record class\n","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/dns_class.rs","byte_start":97470,"byte_end":97489,"line_start":21,"line_end":21,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/dns_class.rs","byte_start":98763,"byte_end":98771,"line_start":71,"line_end":71,"column_start":12,"column_end":20},"name":"from_u16","qualname":"<DNSClass>::from_u16","value":"fn (value: u16) -> ProtoResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Convert from `u16` to `DNSClass`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/dns_class.rs","byte_start":99155,"byte_end":99162,"line_start":83,"line_end":83,"column_start":12,"column_end":19},"name":"for_opt","qualname":"<DNSClass>::for_opt","value":"fn (value: u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return the OPT version from value\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":375},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"domain","qualname":"::rr::domain","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/mod.rs","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":466},{"krate":0,"index":648},{"krate":0,"index":664},{"krate":0,"index":697},{"krate":0,"index":700},{"krate":0,"index":703}],"decl_id":null,"docs":" Domain name associated types, such as Name and Label.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2580},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":103315,"byte_end":103320,"line_start":32,"line_end":32,"column_start":12,"column_end":17},"name":"Label","qualname":"::rr::domain::label::Label","value":"","parent":null,"children":[],"decl_id":null,"docs":" Labels are always stored as ASCII, unicode characters must be encoded with punycode\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":103608,"byte_end":103622,"line_start":39,"line_end":39,"column_start":12,"column_end":26},"name":"from_raw_bytes","qualname":"<Label>::from_raw_bytes","value":"fn (bytes: &[u8]) -> ProtoResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" These must only be ASCII, with unicode encoded to PunyCode, or other such transformation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":103933,"byte_end":103942,"line_start":47,"line_end":47,"column_start":12,"column_end":21},"name":"from_utf8","qualname":"<Label>::from_utf8","value":"fn (s: &str) -> ProtoResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Translates this string into IDNA safe name, encoding to punycode as necessary.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":104682,"byte_end":104692,"line_start":71,"line_end":71,"column_start":12,"column_end":22},"name":"from_ascii","qualname":"<Label>::from_ascii","value":"fn (s: &str) -> ProtoResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Takes the ascii string and returns a new label.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":105229,"byte_end":105237,"line_start":88,"line_end":88,"column_start":12,"column_end":20},"name":"wildcard","qualname":"<Label>::wildcard","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new Label of the Wildcard, i.e. \"*\"\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":105352,"byte_end":105364,"line_start":93,"line_end":93,"column_start":12,"column_end":24},"name":"to_lowercase","qualname":"<Label>::to_lowercase","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Converts this label to lowercase\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":105914,"byte_end":105925,"line_start":110,"line_end":110,"column_start":12,"column_end":23},"name":"is_wildcard","qualname":"<Label>::is_wildcard","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this label is the wildcard, '*', label\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":106047,"byte_end":106050,"line_start":115,"line_end":115,"column_start":12,"column_end":15},"name":"len","qualname":"<Label>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the lenght in bytes of this label\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":106157,"byte_end":106165,"line_start":120,"line_end":120,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Label>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" True if the label contains no characters\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":106397,"byte_end":106405,"line_start":127,"line_end":127,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Label>::as_bytes","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the raw bytes of the label, this is good for writing to the wire.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":106519,"byte_end":106539,"line_start":132,"line_end":132,"column_start":12,"column_end":32},"name":"eq_ignore_ascii_case","qualname":"<Label>::eq_ignore_ascii_case","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Performs the equivalence operation disregarding case\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":106688,"byte_end":106698,"line_start":137,"line_end":137,"column_start":12,"column_end":22},"name":"cmp_with_f","qualname":"<Label>::cmp_with_f","value":"fn <F> (&self, other: &Self) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" compares with the other label, ignoring case\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":107143,"byte_end":107150,"line_start":152,"line_end":152,"column_start":12,"column_end":19},"name":"to_utf8","qualname":"<Label>::to_utf8","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Performs the conversion to utf8 from IDNA as necessary, see `fmt` for more details\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":107394,"byte_end":107402,"line_start":159,"line_end":159,"column_start":12,"column_end":20},"name":"to_ascii","qualname":"<Label>::to_ascii","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Converts this label to safe ascii, escaping characters as necessary","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":107700,"byte_end":107711,"line_start":168,"line_end":168,"column_start":12,"column_end":23},"name":"write_ascii","qualname":"<Label>::write_ascii","value":"fn <W> (&self, f: &mut W) -> Result<(), fmt::Error>","parent":null,"children":[],"decl_id":null,"docs":" Writes this label to safe ascii, escaping characters as necessary\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":439},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":111382,"byte_end":111390,"line_start":293,"line_end":293,"column_start":11,"column_end":19},"name":"LabelCmp","qualname":"::rr::domain::label::LabelCmp","value":"LabelCmp","parent":null,"children":[{"krate":0,"index":440}],"decl_id":null,"docs":" Label comparison trait for case sensitive or insensitive comparisons\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":111461,"byte_end":111467,"line_start":295,"line_end":295,"column_start":8,"column_end":14},"name":"cmp_u8","qualname":"::rr::domain::label::LabelCmp::cmp_u8","value":"fn (l: u8, r: u8) -> Ordering","parent":{"krate":0,"index":439},"children":[],"decl_id":null,"docs":" this should mimic the cmp method from [`PartialOrd`]\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":449},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":111928,"byte_end":111937,"line_start":317,"line_end":317,"column_start":11,"column_end":20},"name":"IntoLabel","qualname":"::rr::domain::label::IntoLabel","value":"IntoLabel: Sized","parent":null,"children":[{"krate":0,"index":450}],"decl_id":null,"docs":" Conversion into a Label\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":111986,"byte_end":111996,"line_start":319,"line_end":319,"column_start":8,"column_end":18},"name":"into_label","qualname":"::rr::domain::label::IntoLabel::into_label","value":"fn (self: Self) -> ProtoResult<Label>","parent":{"krate":0,"index":449},"children":[],"decl_id":null,"docs":" Convert this into Label\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2588},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":118407,"byte_end":118411,"line_start":29,"line_end":29,"column_start":12,"column_end":16},"name":"Name","qualname":"::rr::domain::name::Name","value":"Name {  }","parent":null,"children":[{"krate":0,"index":2589},{"krate":0,"index":2590}],"decl_id":null,"docs":" Them should be through references. As a workaround the Strings are all Rc as well as the array\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":118529,"byte_end":118532,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<Name>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new domain::Name, i.e. label\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":118683,"byte_end":118687,"line_start":41,"line_end":41,"column_start":12,"column_end":16},"name":"root","qualname":"<Name>::root","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the root label, i.e. no labels, can probably make this better in the future.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":119103,"byte_end":119110,"line_start":59,"line_end":59,"column_start":12,"column_end":19},"name":"is_root","qualname":"<Name>::is_root","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if there are no labels, i.e. it's empty.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":119937,"byte_end":119944,"line_start":85,"line_end":85,"column_start":12,"column_end":19},"name":"is_fqdn","qualname":"<Name>::is_fqdn","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the name is a fully qualified domain name.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":120145,"byte_end":120153,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"set_fqdn","qualname":"<Name>::set_fqdn","value":"fn (&mut self, val: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Specifies this name is a fully qualified domain name","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":120267,"byte_end":120271,"line_start":97,"line_end":97,"column_start":12,"column_end":16},"name":"iter","qualname":"<Name>::iter","value":"fn (&self) -> LabelIter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the labels\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":120731,"byte_end":120743,"line_start":113,"line_end":113,"column_start":12,"column_end":24},"name":"append_label","qualname":"<Name>::append_label","value":"fn <L> (mut self, label: L) -> ProtoResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Appends the label to the end of this name","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":121922,"byte_end":121933,"line_start":144,"line_end":144,"column_start":12,"column_end":23},"name":"from_labels","qualname":"<Name>::from_labels","value":"fn <I, L> (labels: I) -> ProtoResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Name from the specified labels","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":123582,"byte_end":123593,"line_start":194,"line_end":194,"column_start":12,"column_end":23},"name":"append_name","qualname":"<Name>::append_name","value":"fn (mut self, other: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Appends `other` to `self`, returning a new `Name`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":124469,"byte_end":124482,"line_start":221,"line_end":221,"column_start":12,"column_end":25},"name":"append_domain","qualname":"<Name>::append_domain","value":"fn (self, domain: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Appends the `domain` to `self`, making the new `Name` an FQDN","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":125132,"byte_end":125144,"line_start":241,"line_end":241,"column_start":12,"column_end":24},"name":"to_lowercase","qualname":"<Name>::to_lowercase","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Name with all labels lowercased","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":125968,"byte_end":125977,"line_start":266,"line_end":266,"column_start":12,"column_end":21},"name":"base_name","qualname":"<Name>::base_name","value":"fn (&self) -> Name","parent":null,"children":[],"decl_id":null,"docs":" Trims off the first part of the name, to help with searching for the domain piece","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":126718,"byte_end":126725,"line_start":288,"line_end":288,"column_start":12,"column_end":19},"name":"trim_to","qualname":"<Name>::trim_to","value":"fn (&self, num_labels: usize) -> Name","parent":null,"children":[],"decl_id":null,"docs":" Trims to the number of labels specified","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":127115,"byte_end":127127,"line_start":301,"line_end":301,"column_start":12,"column_end":24},"name":"zone_of_case","qualname":"<Name>::zone_of_case","value":"fn (&self, name: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" same as `zone_of` allows for case sensitive call\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":128383,"byte_end":128390,"line_start":345,"line_end":345,"column_start":12,"column_end":19},"name":"zone_of","qualname":"<Name>::zone_of","value":"fn (&self, name: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" returns true if the name components of self are all present at the end of name","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":129123,"byte_end":129133,"line_start":369,"line_end":369,"column_start":12,"column_end":22},"name":"num_labels","qualname":"<Name>::num_labels","value":"fn (&self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of labels in the name, discounting `*`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":129960,"byte_end":129963,"line_start":395,"line_end":395,"column_start":12,"column_end":15},"name":"len","qualname":"<Name>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" returns the length in bytes of the labels. '.' counts as 1","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":130349,"byte_end":130357,"line_start":406,"line_end":406,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Name>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the length of the labels, in bytes is 0. In practice, since '.' counts as\n 1, this is never the case so the method returns false.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":130827,"byte_end":130832,"line_start":422,"line_end":422,"column_start":12,"column_end":17},"name":"parse","qualname":"<Name>::parse","value":"fn (local: &str, origin: Option<&Self>) -> ProtoResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" attempts to parse a name such as `\"example.com.\"` or `\"subdomain.example.com.\"`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":132146,"byte_end":132156,"line_start":453,"line_end":453,"column_start":12,"column_end":22},"name":"from_ascii","qualname":"<Name>::from_ascii","value":"fn <S> (name: S) -> ProtoResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Will convert the string to a name only allowing ascii as valid input","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":133185,"byte_end":133194,"line_start":477,"line_end":477,"column_start":12,"column_end":21},"name":"from_utf8","qualname":"<Name>::from_utf8","value":"fn <S> (name: S) -> ProtoResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Will convert the string to a name using IDNA, punycode, to encode the UTF8 as necessary","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":133934,"byte_end":133950,"line_start":499,"line_end":499,"column_start":12,"column_end":28},"name":"from_str_relaxed","qualname":"<Name>::from_str_relaxed","value":"fn <S> (name: S) -> ProtoResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" First attempts to decode via `from_utf8`, if that fails IDNA checks, than falls back to\n ascii decoding.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":137437,"byte_end":137454,"line_start":586,"line_end":586,"column_start":12,"column_end":29},"name":"emit_as_canonical","qualname":"<Name>::emit_as_canonical","value":"fn (&self, encoder: &mut BinEncoder, canonical: bool) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Emits the canonical version of the name to the encoder.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":140532,"byte_end":140551,"line_start":657,"line_end":657,"column_start":12,"column_end":31},"name":"emit_with_lowercase","qualname":"<Name>::emit_with_lowercase","value":"fn (&self, encoder: &mut BinEncoder, lowercase: bool) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes the labels, as lower case, to the encoder","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":141673,"byte_end":141681,"line_start":692,"line_end":692,"column_start":12,"column_end":20},"name":"cmp_case","qualname":"<Name>::cmp_case","value":"fn (&self, other: &Self) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Case sensitive comparison\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":141838,"byte_end":141845,"line_start":697,"line_end":697,"column_start":12,"column_end":19},"name":"eq_case","qualname":"<Name>::eq_case","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Compares the Names, in a case sensitive manner\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":142210,"byte_end":142218,"line_start":705,"line_end":705,"column_start":12,"column_end":20},"name":"to_ascii","qualname":"<Name>::to_ascii","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Converts this name into an ascii safe string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":142734,"byte_end":142741,"line_start":717,"line_end":717,"column_start":12,"column_end":19},"name":"to_utf8","qualname":"<Name>::to_utf8","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Converts the Name labels to the utf8 String form.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":543},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":143804,"byte_end":143816,"line_start":756,"line_end":756,"column_start":12,"column_end":24},"name":"is_localhost","qualname":"<Name>::is_localhost","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the `Name` is either localhost or in the localhost zone.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":144383,"byte_end":144394,"line_start":777,"line_end":777,"column_start":12,"column_end":23},"name":"is_wildcard","qualname":"<Name>::is_wildcard","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" True if the first label of this name is the wildcard, i.e. '*'","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":144986,"byte_end":144999,"line_start":796,"line_end":796,"column_start":12,"column_end":25},"name":"into_wildcard","qualname":"<Name>::into_wildcard","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Converts a name to a wildcard, by replacing the first label with `*`","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":562},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":145918,"byte_end":145927,"line_start":834,"line_end":834,"column_start":12,"column_end":21},"name":"LabelIter","qualname":"::rr::domain::name::LabelIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over labels in a name\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":638},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":158536,"byte_end":158544,"line_start":1187,"line_end":1187,"column_start":11,"column_end":19},"name":"IntoName","qualname":"::rr::domain::name::IntoName","value":"IntoName: Sized","parent":null,"children":[{"krate":0,"index":639}],"decl_id":null,"docs":" Conversion into a Name\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":158592,"byte_end":158601,"line_start":1189,"line_end":1189,"column_start":8,"column_end":17},"name":"into_name","qualname":"::rr::domain::name::IntoName::into_name","value":"fn (self) -> ProtoResult<Name>","parent":{"krate":0,"index":638},"children":[],"decl_id":null,"docs":" Convert this into Name\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":654},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/try_parse_ip.rs","byte_start":173370,"byte_end":173380,"line_start":14,"line_end":14,"column_start":11,"column_end":21},"name":"TryParseIp","qualname":"::rr::domain::try_parse_ip::TryParseIp","value":"TryParseIp","parent":null,"children":[{"krate":0,"index":655}],"decl_id":null,"docs":" Types of this trait will can be attempted for conversion to an IP address\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/try_parse_ip.rs","byte_start":173487,"byte_end":173499,"line_start":16,"line_end":16,"column_start":8,"column_end":20},"name":"try_parse_ip","qualname":"::rr::domain::try_parse_ip::TryParseIp::try_parse_ip","value":"fn (&self) -> Option<RData>","parent":{"krate":0,"index":654},"children":[],"decl_id":null,"docs":" Attempts to parse self into an RData::A or RData::AAAA, None is returned if not possible\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":664},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"usage","qualname":"::rr::domain::usage","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","parent":null,"children":[{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":2600},{"krate":0,"index":2602},{"krate":0,"index":2603},{"krate":0,"index":2608},{"krate":0,"index":2611},{"krate":0,"index":2613},{"krate":0,"index":2614},{"krate":0,"index":2619},{"krate":0,"index":2622},{"krate":0,"index":2624},{"krate":0,"index":2625},{"krate":0,"index":2630},{"krate":0,"index":2633},{"krate":0,"index":2635},{"krate":0,"index":2636},{"krate":0,"index":2641},{"krate":0,"index":2644},{"krate":0,"index":2646},{"krate":0,"index":2647},{"krate":0,"index":2652},{"krate":0,"index":2655},{"krate":0,"index":2657},{"krate":0,"index":2658},{"krate":0,"index":2663},{"krate":0,"index":2666},{"krate":0,"index":2668},{"krate":0,"index":2669},{"krate":0,"index":2674},{"krate":0,"index":2677},{"krate":0,"index":2679},{"krate":0,"index":2680},{"krate":0,"index":2685},{"krate":0,"index":2688},{"krate":0,"index":2690},{"krate":0,"index":2691},{"krate":0,"index":2696},{"krate":0,"index":2699},{"krate":0,"index":2701},{"krate":0,"index":2702},{"krate":0,"index":2707},{"krate":0,"index":2710},{"krate":0,"index":2712},{"krate":0,"index":2713},{"krate":0,"index":2718},{"krate":0,"index":2721},{"krate":0,"index":2723},{"krate":0,"index":2724},{"krate":0,"index":2729},{"krate":0,"index":2732},{"krate":0,"index":2734},{"krate":0,"index":2735},{"krate":0,"index":2740},{"krate":0,"index":2743},{"krate":0,"index":2759},{"krate":0,"index":2758},{"krate":0,"index":2755},{"krate":0,"index":2756},{"krate":0,"index":2752},{"krate":0,"index":2753},{"krate":0,"index":2761},{"krate":0,"index":2777},{"krate":0,"index":2776},{"krate":0,"index":2773},{"krate":0,"index":2774},{"krate":0,"index":2770},{"krate":0,"index":2771},{"krate":0,"index":2779},{"krate":0,"index":2795},{"krate":0,"index":2794},{"krate":0,"index":2791},{"krate":0,"index":2792},{"krate":0,"index":2788},{"krate":0,"index":2789},{"krate":0,"index":2797},{"krate":0,"index":2813},{"krate":0,"index":2812},{"krate":0,"index":2809},{"krate":0,"index":2810},{"krate":0,"index":2806},{"krate":0,"index":2807},{"krate":0,"index":2815},{"krate":0,"index":2831},{"krate":0,"index":2830},{"krate":0,"index":2827},{"krate":0,"index":2828},{"krate":0,"index":2824},{"krate":0,"index":2825},{"krate":0,"index":2833},{"krate":0,"index":2847},{"krate":0,"index":2846},{"krate":0,"index":2843},{"krate":0,"index":2844},{"krate":0,"index":2840},{"krate":0,"index":2841},{"krate":0,"index":2849},{"krate":0,"index":2861},{"krate":0,"index":2860},{"krate":0,"index":2857},{"krate":0,"index":2858},{"krate":0,"index":2854},{"krate":0,"index":2855},{"krate":0,"index":668},{"krate":0,"index":677},{"krate":0,"index":694}],"decl_id":null,"docs":" Reserved zone names.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2600},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":175340,"byte_end":175347,"line_start":20,"line_end":20,"column_start":20,"column_end":27},"name":"DEFAULT","qualname":"::rr::domain::usage::DEFAULT","value":"DEFAULT {  }","parent":null,"children":[{"krate":0,"index":2601}],"decl_id":null,"docs":" Default Name usage, everything is normal...\n","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":12124943,"byte_end":12124983,"line_start":24,"line_end":24,"column_start":5,"column_end":45}},{"value":"allow(non_camel_case_types)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":12124984,"byte_end":12125016,"line_start":24,"line_end":24,"column_start":46,"column_end":78}},{"value":"allow(dead_code)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":12125021,"byte_end":12125042,"line_start":25,"line_end":25,"column_start":5,"column_end":26}}]},{"kind":"Static","id":{"krate":0,"index":2602},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":175340,"byte_end":175347,"line_start":20,"line_end":20,"column_start":20,"column_end":27},"name":"DEFAULT","qualname":"::rr::domain::usage::DEFAULT","value":"DEFAULT","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2622},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":175524,"byte_end":175536,"line_start":26,"line_end":26,"column_start":20,"column_end":32},"name":"IN_ADDR_ARPA","qualname":"::rr::domain::usage::IN_ADDR_ARPA","value":"IN_ADDR_ARPA {  }","parent":null,"children":[{"krate":0,"index":2623}],"decl_id":null,"docs":" zone for ipv4 reverse addresses\n","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":12124943,"byte_end":12124983,"line_start":24,"line_end":24,"column_start":5,"column_end":45}},{"value":"allow(non_camel_case_types)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":12124984,"byte_end":12125016,"line_start":24,"line_end":24,"column_start":46,"column_end":78}},{"value":"allow(dead_code)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":12125021,"byte_end":12125042,"line_start":25,"line_end":25,"column_start":5,"column_end":26}}]},{"kind":"Static","id":{"krate":0,"index":2624},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":175524,"byte_end":175536,"line_start":26,"line_end":26,"column_start":20,"column_end":32},"name":"IN_ADDR_ARPA","qualname":"::rr::domain::usage::IN_ADDR_ARPA","value":"IN_ADDR_ARPA","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2633},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":175664,"byte_end":175672,"line_start":28,"line_end":28,"column_start":20,"column_end":28},"name":"IP6_ARPA","qualname":"::rr::domain::usage::IP6_ARPA","value":"IP6_ARPA {  }","parent":null,"children":[{"krate":0,"index":2634}],"decl_id":null,"docs":" zone for ipv6 reverse addresses\n","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":12124943,"byte_end":12124983,"line_start":24,"line_end":24,"column_start":5,"column_end":45}},{"value":"allow(non_camel_case_types)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":12124984,"byte_end":12125016,"line_start":24,"line_end":24,"column_start":46,"column_end":78}},{"value":"allow(dead_code)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":12125021,"byte_end":12125042,"line_start":25,"line_end":25,"column_start":5,"column_end":26}}]},{"kind":"Static","id":{"krate":0,"index":2635},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":175664,"byte_end":175672,"line_start":28,"line_end":28,"column_start":20,"column_end":28},"name":"IP6_ARPA","qualname":"::rr::domain::usage::IP6_ARPA","value":"IP6_ARPA","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2644},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":176162,"byte_end":176171,"line_start":44,"line_end":44,"column_start":20,"column_end":29},"name":"LOCALHOST","qualname":"::rr::domain::usage::LOCALHOST","value":"LOCALHOST {  }","parent":null,"children":[{"krate":0,"index":2645}],"decl_id":null,"docs":" localhost.","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":12124943,"byte_end":12124983,"line_start":24,"line_end":24,"column_start":5,"column_end":45}},{"value":"allow(non_camel_case_types)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":12124984,"byte_end":12125016,"line_start":24,"line_end":24,"column_start":46,"column_end":78}},{"value":"allow(dead_code)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":12125021,"byte_end":12125042,"line_start":25,"line_end":25,"column_start":5,"column_end":26}}]},{"kind":"Static","id":{"krate":0,"index":2646},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":176162,"byte_end":176171,"line_start":44,"line_end":44,"column_start":20,"column_end":29},"name":"LOCALHOST","qualname":"::rr::domain::usage::LOCALHOST","value":"LOCALHOST","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2655},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":176332,"byte_end":176348,"line_start":47,"line_end":47,"column_start":20,"column_end":36},"name":"IN_ADDR_ARPA_127","qualname":"::rr::domain::usage::IN_ADDR_ARPA_127","value":"IN_ADDR_ARPA_127 {  }","parent":null,"children":[{"krate":0,"index":2656}],"decl_id":null,"docs":" 127.in-addr.arpa. usage; 127/8 is reserved for loopback\n","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":12124943,"byte_end":12124983,"line_start":24,"line_end":24,"column_start":5,"column_end":45}},{"value":"allow(non_camel_case_types)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":12124984,"byte_end":12125016,"line_start":24,"line_end":24,"column_start":46,"column_end":78}},{"value":"allow(dead_code)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":12125021,"byte_end":12125042,"line_start":25,"line_end":25,"column_start":5,"column_end":26}}]},{"kind":"Static","id":{"krate":0,"index":2657},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":176332,"byte_end":176348,"line_start":47,"line_end":47,"column_start":20,"column_end":36},"name":"IN_ADDR_ARPA_127","qualname":"::rr::domain::usage::IN_ADDR_ARPA_127","value":"IN_ADDR_ARPA_127","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2666},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":176600,"byte_end":176610,"line_start":50,"line_end":50,"column_start":20,"column_end":30},"name":"IP6_ARPA_1","qualname":"::rr::domain::usage::IP6_ARPA_1","value":"IP6_ARPA_1 {  }","parent":null,"children":[{"krate":0,"index":2667}],"decl_id":null,"docs":" 1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.ip6.arpa. usage; 1/128 is the only address in ipv6 loopback\n","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":12124943,"byte_end":12124983,"line_start":24,"line_end":24,"column_start":5,"column_end":45}},{"value":"allow(non_camel_case_types)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":12124984,"byte_end":12125016,"line_start":24,"line_end":24,"column_start":46,"column_end":78}},{"value":"allow(dead_code)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":12125021,"byte_end":12125042,"line_start":25,"line_end":25,"column_start":5,"column_end":26}}]},{"kind":"Static","id":{"krate":0,"index":2668},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":176600,"byte_end":176610,"line_start":50,"line_end":50,"column_start":20,"column_end":30},"name":"IP6_ARPA_1","qualname":"::rr::domain::usage::IP6_ARPA_1","value":"IP6_ARPA_1","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2677},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":177485,"byte_end":177490,"line_start":69,"line_end":69,"column_start":20,"column_end":25},"name":"LOCAL","qualname":"::rr::domain::usage::LOCAL","value":"LOCAL {  }","parent":null,"children":[{"krate":0,"index":2678}],"decl_id":null,"docs":" .local.","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":12124943,"byte_end":12124983,"line_start":24,"line_end":24,"column_start":5,"column_end":45}},{"value":"allow(non_camel_case_types)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":12124984,"byte_end":12125016,"line_start":24,"line_end":24,"column_start":46,"column_end":78}},{"value":"allow(dead_code)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":12125021,"byte_end":12125042,"line_start":25,"line_end":25,"column_start":5,"column_end":26}}]},{"kind":"Static","id":{"krate":0,"index":2679},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":177485,"byte_end":177490,"line_start":69,"line_end":69,"column_start":20,"column_end":25},"name":"LOCAL","qualname":"::rr::domain::usage::LOCAL","value":"LOCAL","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2688},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":178469,"byte_end":178489,"line_start":87,"line_end":87,"column_start":20,"column_end":40},"name":"IN_ADDR_ARPA_169_254","qualname":"::rr::domain::usage::IN_ADDR_ARPA_169_254","value":"IN_ADDR_ARPA_169_254 {  }","parent":null,"children":[{"krate":0,"index":2689}],"decl_id":null,"docs":" 254.169.in-addr.arpa. usage link-local, i.e. mDNS\n","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":12124943,"byte_end":12124983,"line_start":24,"line_end":24,"column_start":5,"column_end":45}},{"value":"allow(non_camel_case_types)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":12124984,"byte_end":12125016,"line_start":24,"line_end":24,"column_start":46,"column_end":78}},{"value":"allow(dead_code)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":12125021,"byte_end":12125042,"line_start":25,"line_end":25,"column_start":5,"column_end":26}}]},{"kind":"Static","id":{"krate":0,"index":2690},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":178469,"byte_end":178489,"line_start":87,"line_end":87,"column_start":20,"column_end":40},"name":"IN_ADDR_ARPA_169_254","qualname":"::rr::domain::usage::IN_ADDR_ARPA_169_254","value":"IN_ADDR_ARPA_169_254","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2699},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":178667,"byte_end":178680,"line_start":90,"line_end":90,"column_start":20,"column_end":33},"name":"IP6_ARPA_FE_8","qualname":"::rr::domain::usage::IP6_ARPA_FE_8","value":"IP6_ARPA_FE_8 {  }","parent":null,"children":[{"krate":0,"index":2700}],"decl_id":null,"docs":" 254.169.in-addr.arpa. usage link-local, i.e. mDNS\n","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":12124943,"byte_end":12124983,"line_start":24,"line_end":24,"column_start":5,"column_end":45}},{"value":"allow(non_camel_case_types)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":12124984,"byte_end":12125016,"line_start":24,"line_end":24,"column_start":46,"column_end":78}},{"value":"allow(dead_code)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":12125021,"byte_end":12125042,"line_start":25,"line_end":25,"column_start":5,"column_end":26}}]},{"kind":"Static","id":{"krate":0,"index":2701},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":178667,"byte_end":178680,"line_start":90,"line_end":90,"column_start":20,"column_end":33},"name":"IP6_ARPA_FE_8","qualname":"::rr::domain::usage::IP6_ARPA_FE_8","value":"IP6_ARPA_FE_8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2710},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":178851,"byte_end":178864,"line_start":92,"line_end":92,"column_start":20,"column_end":33},"name":"IP6_ARPA_FE_9","qualname":"::rr::domain::usage::IP6_ARPA_FE_9","value":"IP6_ARPA_FE_9 {  }","parent":null,"children":[{"krate":0,"index":2711}],"decl_id":null,"docs":" 254.169.in-addr.arpa. usage link-local, i.e. mDNS\n","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":12124943,"byte_end":12124983,"line_start":24,"line_end":24,"column_start":5,"column_end":45}},{"value":"allow(non_camel_case_types)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":12124984,"byte_end":12125016,"line_start":24,"line_end":24,"column_start":46,"column_end":78}},{"value":"allow(dead_code)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":12125021,"byte_end":12125042,"line_start":25,"line_end":25,"column_start":5,"column_end":26}}]},{"kind":"Static","id":{"krate":0,"index":2712},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":178851,"byte_end":178864,"line_start":92,"line_end":92,"column_start":20,"column_end":33},"name":"IP6_ARPA_FE_9","qualname":"::rr::domain::usage::IP6_ARPA_FE_9","value":"IP6_ARPA_FE_9","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2721},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":179035,"byte_end":179048,"line_start":94,"line_end":94,"column_start":20,"column_end":33},"name":"IP6_ARPA_FE_B","qualname":"::rr::domain::usage::IP6_ARPA_FE_B","value":"IP6_ARPA_FE_B {  }","parent":null,"children":[{"krate":0,"index":2722}],"decl_id":null,"docs":" 254.169.in-addr.arpa. usage link-local, i.e. mDNS\n","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":12124943,"byte_end":12124983,"line_start":24,"line_end":24,"column_start":5,"column_end":45}},{"value":"allow(non_camel_case_types)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":12124984,"byte_end":12125016,"line_start":24,"line_end":24,"column_start":46,"column_end":78}},{"value":"allow(dead_code)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":12125021,"byte_end":12125042,"line_start":25,"line_end":25,"column_start":5,"column_end":26}}]},{"kind":"Static","id":{"krate":0,"index":2723},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":179035,"byte_end":179048,"line_start":94,"line_end":94,"column_start":20,"column_end":33},"name":"IP6_ARPA_FE_B","qualname":"::rr::domain::usage::IP6_ARPA_FE_B","value":"IP6_ARPA_FE_B","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2732},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":179749,"byte_end":179756,"line_start":112,"line_end":112,"column_start":20,"column_end":27},"name":"INVALID","qualname":"::rr::domain::usage::INVALID","value":"INVALID {  }","parent":null,"children":[{"krate":0,"index":2733}],"decl_id":null,"docs":" invalid.","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":12124943,"byte_end":12124983,"line_start":24,"line_end":24,"column_start":5,"column_end":45}},{"value":"allow(non_camel_case_types)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":12124984,"byte_end":12125016,"line_start":24,"line_end":24,"column_start":46,"column_end":78}},{"value":"allow(dead_code)","span":{"file_name":"<::lazy_static::__lazy_static_internal macros>","byte_start":12125021,"byte_end":12125042,"line_start":25,"line_end":25,"column_start":5,"column_end":26}}]},{"kind":"Static","id":{"krate":0,"index":2734},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":179749,"byte_end":179756,"line_start":112,"line_end":112,"column_start":20,"column_end":27},"name":"INVALID","qualname":"::rr::domain::usage::INVALID","value":"INVALID","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2744},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":180332,"byte_end":180338,"line_start":126,"line_end":126,"column_start":5,"column_end":11},"name":"Normal","qualname":"::rr::domain::usage::UserUsage::Normal","value":"UserUsage::Normal","parent":{"krate":0,"index":2743},"children":[],"decl_id":null,"docs":" Users are free to use these names as they would any other\n reverse-mapping names.  However, since there is no central\n authority responsible for use of private addresses, users SHOULD\n be aware that these names are likely to yield different results\n on different networks.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2746},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":180585,"byte_end":180593,"line_start":132,"line_end":132,"column_start":5,"column_end":13},"name":"Loopback","qualname":"::rr::domain::usage::UserUsage::Loopback","value":"UserUsage::Loopback","parent":{"krate":0,"index":2743},"children":[],"decl_id":null,"docs":" Users are free to use localhost names as they would any other\n domain names.  Users may assume that IPv4 and IPv6 address\n queries for localhost names will always resolve to the respective\n IP loopback address.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2748},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":180636,"byte_end":180645,"line_start":135,"line_end":135,"column_start":5,"column_end":14},"name":"LinkLocal","qualname":"::rr::domain::usage::UserUsage::LinkLocal","value":"UserUsage::LinkLocal","parent":{"krate":0,"index":2743},"children":[],"decl_id":null,"docs":" Multi-cast link-local usage\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2750},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":180842,"byte_end":180850,"line_start":140,"line_end":140,"column_start":5,"column_end":13},"name":"NxDomain","qualname":"::rr::domain::usage::UserUsage::NxDomain","value":"UserUsage::NxDomain","parent":{"krate":0,"index":2743},"children":[],"decl_id":null,"docs":" Users are free to use \"invalid\" names as they would any other\n domain names.  Users MAY assume that queries for \"invalid\" names\n will always return NXDOMAIN responses.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2743},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":180007,"byte_end":180016,"line_start":120,"line_end":120,"column_start":10,"column_end":19},"name":"UserUsage","qualname":"::rr::domain::usage::UserUsage","value":"UserUsage::{Normal, Loopback, LinkLocal, NxDomain}","parent":null,"children":[{"krate":0,"index":2744},{"krate":0,"index":2746},{"krate":0,"index":2748},{"krate":0,"index":2750}],"decl_id":null,"docs":" Users:","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2762},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":181708,"byte_end":181714,"line_start":162,"line_end":162,"column_start":5,"column_end":11},"name":"Normal","qualname":"::rr::domain::usage::AppUsage::Normal","value":"AppUsage::Normal","parent":{"krate":0,"index":2761},"children":[],"decl_id":null,"docs":" Application software SHOULD NOT recognize these names as special,\n and SHOULD use these names as they would other reverse-mapping\n names.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2764},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":181887,"byte_end":181895,"line_start":167,"line_end":167,"column_start":5,"column_end":13},"name":"Loopback","qualname":"::rr::domain::usage::AppUsage::Loopback","value":"AppUsage::Loopback","parent":{"krate":0,"index":2761},"children":[],"decl_id":null,"docs":" Application software MAY recognize localhost names as special, or\n MAY pass them to name resolution APIs as they would for other\n domain names.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2766},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":181941,"byte_end":181950,"line_start":170,"line_end":170,"column_start":5,"column_end":14},"name":"LinkLocal","qualname":"::rr::domain::usage::AppUsage::LinkLocal","value":"AppUsage::LinkLocal","parent":{"krate":0,"index":2761},"children":[],"decl_id":null,"docs":" Link local, generally for mDNS\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2768},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":182122,"byte_end":182130,"line_start":175,"line_end":175,"column_start":5,"column_end":13},"name":"NxDomain","qualname":"::rr::domain::usage::AppUsage::NxDomain","value":"AppUsage::NxDomain","parent":{"krate":0,"index":2761},"children":[],"decl_id":null,"docs":" Application software MAY recognize \"invalid\" names as special or\n MAY pass them to name resolution APIs as they would for other\n domain names.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2761},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":181222,"byte_end":181230,"line_start":151,"line_end":151,"column_start":10,"column_end":18},"name":"AppUsage","qualname":"::rr::domain::usage::AppUsage","value":"AppUsage::{Normal, Loopback, LinkLocal, NxDomain}","parent":null,"children":[{"krate":0,"index":2762},{"krate":0,"index":2764},{"krate":0,"index":2766},{"krate":0,"index":2768}],"decl_id":null,"docs":" Application Software:","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2780},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":183191,"byte_end":183197,"line_start":199,"line_end":199,"column_start":5,"column_end":11},"name":"Normal","qualname":"::rr::domain::usage::ResolverUsage::Normal","value":"ResolverUsage::Normal","parent":{"krate":0,"index":2779},"children":[],"decl_id":null,"docs":" Name resolution APIs and libraries SHOULD NOT recognize these\n names as special and SHOULD NOT treat them differently.  Name\n resolution APIs SHOULD send queries for these names to their\n configured caching DNS server(s).","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2782},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":183551,"byte_end":183559,"line_start":206,"line_end":206,"column_start":5,"column_end":13},"name":"Loopback","qualname":"::rr::domain::usage::ResolverUsage::Loopback","value":"ResolverUsage::Loopback","parent":{"krate":0,"index":2779},"children":[],"decl_id":null,"docs":" Name resolution APIs and libraries SHOULD recognize localhost\n names as special and SHOULD always return the IP loopback address\n for address queries and negative responses for all other query\n types.  Name resolution APIs SHOULD NOT send queries for\n localhost names to their configured caching DNS server(s).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2784},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":184412,"byte_end":184421,"line_start":221,"line_end":221,"column_start":5,"column_end":14},"name":"LinkLocal","qualname":"::rr::domain::usage::ResolverUsage::LinkLocal","value":"ResolverUsage::LinkLocal","parent":{"krate":0,"index":2779},"children":[],"decl_id":null,"docs":" Link local, generally for mDNS","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2786},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":184703,"byte_end":184711,"line_start":227,"line_end":227,"column_start":5,"column_end":13},"name":"NxDomain","qualname":"::rr::domain::usage::ResolverUsage::NxDomain","value":"ResolverUsage::NxDomain","parent":{"krate":0,"index":2779},"children":[],"decl_id":null,"docs":" Name resolution APIs and libraries SHOULD recognize \"invalid\"\n names as special and SHOULD always return immediate negative\n responses.  Name resolution APIs SHOULD NOT send queries for\n \"invalid\" names to their configured caching DNS server(s).\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2779},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":182400,"byte_end":182413,"line_start":184,"line_end":184,"column_start":10,"column_end":23},"name":"ResolverUsage","qualname":"::rr::domain::usage::ResolverUsage","value":"ResolverUsage::{Normal, Loopback, LinkLocal, NxDomain}","parent":null,"children":[{"krate":0,"index":2780},{"krate":0,"index":2782},{"krate":0,"index":2784},{"krate":0,"index":2786}],"decl_id":null,"docs":" Name Resolution APIs and Libraries:","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2798},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":185769,"byte_end":185781,"line_start":248,"line_end":248,"column_start":5,"column_end":17},"name":"NonRecursive","qualname":"::rr::domain::usage::CacheUsage::NonRecursive","value":"CacheUsage::NonRecursive","parent":{"krate":0,"index":2797},"children":[],"decl_id":null,"docs":" Caching DNS servers SHOULD recognize these names as special and\n SHOULD NOT, by default, attempt to look up NS records for them,\n or otherwise query authoritative DNS servers in an attempt to\n resolve these names.  Instead, caching DNS servers SHOULD, by\n default, generate immediate (positive or negative) responses for\n all such queries.  This is to avoid unnecessary load on the root\n name servers and other name servers.  Caching DNS servers SHOULD\n offer a configuration option (disabled by default) to enable\n upstream resolution of such names, for use in private networks\n where private-address reverse-mapping names are known to be\n handled by an authoritative DNS server in said private network.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2800},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":186231,"byte_end":186239,"line_start":257,"line_end":257,"column_start":5,"column_end":13},"name":"NxDomain","qualname":"::rr::domain::usage::CacheUsage::NxDomain","value":"CacheUsage::NxDomain","parent":{"krate":0,"index":2797},"children":[],"decl_id":null,"docs":" Caching DNS servers SHOULD recognize \"invalid\" names as special\n and SHOULD NOT attempt to look up NS records for them, or\n otherwise query authoritative DNS servers in an attempt to\n resolve \"invalid\" names.  Instead, caching DNS servers SHOULD\n generate immediate NXDOMAIN responses for all such queries.  This\n is to avoid unnecessary load on the root name servers and other\n name servers.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2802},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":186812,"byte_end":186820,"line_start":267,"line_end":267,"column_start":5,"column_end":13},"name":"Loopback","qualname":"::rr::domain::usage::CacheUsage::Loopback","value":"CacheUsage::Loopback","parent":{"krate":0,"index":2797},"children":[],"decl_id":null,"docs":" Caching DNS servers SHOULD recognize localhost names as special\n and SHOULD NOT attempt to look up NS records for them, or\n otherwise query authoritative DNS servers in an attempt to\n resolve localhost names.  Instead, caching DNS servers SHOULD,\n for all such address queries, generate an immediate positive\n response giving the IP loopback address, and for all other query\n types, generate an immediate negative response.  This is to avoid\n unnecessary load on the root name servers and other name servers.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2804},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":186943,"byte_end":186949,"line_start":271,"line_end":271,"column_start":5,"column_end":11},"name":"Normal","qualname":"::rr::domain::usage::CacheUsage::Normal","value":"CacheUsage::Normal","parent":{"krate":0,"index":2797},"children":[],"decl_id":null,"docs":" Caching DNS servers SHOULD NOT recognize example names as special\n and SHOULD resolve them normally.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2797},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":184969,"byte_end":184979,"line_start":236,"line_end":236,"column_start":10,"column_end":20},"name":"CacheUsage","qualname":"::rr::domain::usage::CacheUsage","value":"CacheUsage::{NonRecursive, NxDomain, Loopback, Normal}","parent":null,"children":[{"krate":0,"index":2798},{"krate":0,"index":2800},{"krate":0,"index":2802},{"krate":0,"index":2804}],"decl_id":null,"docs":" Caching DNS Servers:","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2816},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":187543,"byte_end":187548,"line_start":286,"line_end":286,"column_start":5,"column_end":10},"name":"Local","qualname":"::rr::domain::usage::AuthUsage::Local","value":"AuthUsage::Local","parent":{"krate":0,"index":2815},"children":[],"decl_id":null,"docs":" Authoritative DNS servers SHOULD recognize these names as special\n and SHOULD, by default, generate immediate negative responses for\n all such queries, unless explicitly configured by the\n administrator to give positive answers for private-address\n reverse-mapping names.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2818},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":187863,"byte_end":187871,"line_start":293,"line_end":293,"column_start":5,"column_end":13},"name":"NxDomain","qualname":"::rr::domain::usage::AuthUsage::NxDomain","value":"AuthUsage::NxDomain","parent":{"krate":0,"index":2815},"children":[],"decl_id":null,"docs":" Authoritative DNS servers SHOULD recognize these names as special\n and SHOULD, by default, generate immediate negative responses for\n all such queries, unless explicitly configured by the\n administrator to give positive answers for private-address\n reverse-mapping names.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2820},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":188032,"byte_end":188040,"line_start":298,"line_end":298,"column_start":5,"column_end":13},"name":"Loopback","qualname":"::rr::domain::usage::AuthUsage::Loopback","value":"AuthUsage::Loopback","parent":{"krate":0,"index":2815},"children":[],"decl_id":null,"docs":" Authoritative DNS servers SHOULD recognize localhost names as\n special and handle them as described above for caching DNS\n servers.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2822},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":188136,"byte_end":188142,"line_start":302,"line_end":302,"column_start":5,"column_end":11},"name":"Normal","qualname":"::rr::domain::usage::AuthUsage::Normal","value":"AuthUsage::Normal","parent":{"krate":0,"index":2815},"children":[],"decl_id":null,"docs":" Authoritative DNS servers SHOULD NOT recognize example names as\n special.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2815},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":187219,"byte_end":187228,"line_start":280,"line_end":280,"column_start":10,"column_end":19},"name":"AuthUsage","qualname":"::rr::domain::usage::AuthUsage","value":"AuthUsage::{Local, NxDomain, Loopback, Normal}","parent":null,"children":[{"krate":0,"index":2816},{"krate":0,"index":2818},{"krate":0,"index":2820},{"krate":0,"index":2822}],"decl_id":null,"docs":" Authoritative DNS Servers:","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2834},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":189140,"byte_end":189146,"line_start":324,"line_end":324,"column_start":5,"column_end":11},"name":"Normal","qualname":"::rr::domain::usage::OpUsage::Normal","value":"OpUsage::Normal","parent":{"krate":0,"index":2833},"children":[],"decl_id":null,"docs":" DNS server operators SHOULD, if they are using private addresses,\n configure their authoritative DNS servers to act as authoritative\n for these names.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2836},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":189343,"byte_end":189351,"line_start":329,"line_end":329,"column_start":5,"column_end":13},"name":"Loopback","qualname":"::rr::domain::usage::OpUsage::Loopback","value":"OpUsage::Loopback","parent":{"krate":0,"index":2833},"children":[],"decl_id":null,"docs":" DNS server operators SHOULD be aware that the effective RDATA for\n localhost names is defined by protocol specification and cannot\n be modified by local configuration.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2838},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":189566,"byte_end":189574,"line_start":334,"line_end":334,"column_start":5,"column_end":13},"name":"NxDomain","qualname":"::rr::domain::usage::OpUsage::NxDomain","value":"OpUsage::NxDomain","parent":{"krate":0,"index":2833},"children":[],"decl_id":null,"docs":" DNS server operators SHOULD be aware that the effective RDATA for\n \"invalid\" names is defined by protocol specification to be\n nonexistent and cannot be modified by local configuration.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2833},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":188780,"byte_end":188787,"line_start":316,"line_end":316,"column_start":10,"column_end":17},"name":"OpUsage","qualname":"::rr::domain::usage::OpUsage","value":"OpUsage::{Normal, Loopback, NxDomain}","parent":null,"children":[{"krate":0,"index":2834},{"krate":0,"index":2836},{"krate":0,"index":2838}],"decl_id":null,"docs":" DNS Server Operators:","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2850},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":190271,"byte_end":190277,"line_start":351,"line_end":351,"column_start":5,"column_end":11},"name":"Normal","qualname":"::rr::domain::usage::RegistryUsage::Normal","value":"RegistryUsage::Normal","parent":{"krate":0,"index":2849},"children":[],"decl_id":null,"docs":" Stanard checks apply\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2852},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":191920,"byte_end":191928,"line_start":380,"line_end":380,"column_start":5,"column_end":13},"name":"Reserved","qualname":"::rr::domain::usage::RegistryUsage::Reserved","value":"RegistryUsage::Reserved","parent":{"krate":0,"index":2849},"children":[],"decl_id":null,"docs":" DNS Registries/Registrars MUST NOT grant requests to register\n test names in the normal way to any person or entity.  Test names\n are reserved for use in private networks and fall outside the set\n of names available for allocation by registries/registrars.\n Attempting to allocate a test name as if it were a normal DNS\n domain name will probably not work as desired, for reasons 4, 5,\n and 6 above.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2849},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":190222,"byte_end":190235,"line_start":349,"line_end":349,"column_start":10,"column_end":23},"name":"RegistryUsage","qualname":"::rr::domain::usage::RegistryUsage","value":"RegistryUsage::{Normal, Reserved}","parent":null,"children":[{"krate":0,"index":2850},{"krate":0,"index":2852}],"decl_id":null,"docs":" DNS Registries/Registrars:","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":668},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":192040,"byte_end":192049,"line_start":384,"line_end":384,"column_start":12,"column_end":21},"name":"ZoneUsage","qualname":"::rr::domain::usage::ZoneUsage","value":"ZoneUsage {  }","parent":null,"children":[{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676}],"decl_id":null,"docs":" ZoneUsage represents information about how a name falling in a given zone should be treated\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":192361,"byte_end":192364,"line_start":398,"line_end":398,"column_start":12,"column_end":15},"name":"new","qualname":"<ZoneUsage>::new","value":"fn (name: Name, user: UserUsage, app: AppUsage, resolver: ResolverUsage, cache: CacheUsage, auth: AuthUsage, op: OpUsage, registry: RegistryUsage) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new ZoneUsage with the associated values\n","sig":null,"attributes":[{"value":"allow(clippy :: too_many_arguments)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":192313,"byte_end":192349,"line_start":397,"line_end":397,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":192846,"byte_end":192853,"line_start":421,"line_end":421,"column_start":12,"column_end":19},"name":"default","qualname":"<ZoneUsage>::default","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new Default, with all no restrictions\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":193201,"byte_end":193208,"line_start":435,"line_end":435,"column_start":12,"column_end":19},"name":"reverse","qualname":"<ZoneUsage>::reverse","value":"fn (name: Name) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Restrictions for reverse zones\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":193567,"byte_end":193571,"line_start":449,"line_end":449,"column_start":12,"column_end":16},"name":"test","qualname":"<ZoneUsage>::test","value":"fn (name: Name) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Restrictions for the .test. zone\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":193935,"byte_end":193944,"line_start":463,"line_end":463,"column_start":12,"column_end":21},"name":"localhost","qualname":"<ZoneUsage>::localhost","value":"fn (name: Name) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Restrictions for the .localhost. zone\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":194311,"byte_end":194316,"line_start":477,"line_end":477,"column_start":12,"column_end":17},"name":"local","qualname":"<ZoneUsage>::local","value":"fn (name: Name) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Restrictions for the .local. zone\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":194681,"byte_end":194688,"line_start":491,"line_end":491,"column_start":12,"column_end":19},"name":"invalid","qualname":"<ZoneUsage>::invalid","value":"fn (name: Name) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Restrictions for the .invalid. zone\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":195057,"byte_end":195064,"line_start":505,"line_end":505,"column_start":12,"column_end":19},"name":"example","qualname":"<ZoneUsage>::example","value":"fn (name: Name) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Restrictions for the .example. zone\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":195415,"byte_end":195419,"line_start":519,"line_end":519,"column_start":12,"column_end":16},"name":"name","qualname":"<ZoneUsage>::name","value":"fn (&self) -> &Name","parent":null,"children":[],"decl_id":null,"docs":" A reference to this zone name\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":195518,"byte_end":195522,"line_start":524,"line_end":524,"column_start":12,"column_end":16},"name":"user","qualname":"<ZoneUsage>::user","value":"fn (&self) -> UserUsage","parent":null,"children":[],"decl_id":null,"docs":" Returns the UserUsage of this zone\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":195623,"byte_end":195626,"line_start":529,"line_end":529,"column_start":12,"column_end":15},"name":"app","qualname":"<ZoneUsage>::app","value":"fn (&self) -> AppUsage","parent":null,"children":[],"decl_id":null,"docs":" Returns the AppUsage of this zone\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":195730,"byte_end":195738,"line_start":534,"line_end":534,"column_start":12,"column_end":20},"name":"resolver","qualname":"<ZoneUsage>::resolver","value":"fn (&self) -> ResolverUsage","parent":null,"children":[],"decl_id":null,"docs":" Returns the ResolverUsage of this zone\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":195849,"byte_end":195854,"line_start":539,"line_end":539,"column_start":12,"column_end":17},"name":"cache","qualname":"<ZoneUsage>::cache","value":"fn (&self) -> CacheUsage","parent":null,"children":[],"decl_id":null,"docs":" Returns the CacheUsage of this zone\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":195958,"byte_end":195962,"line_start":544,"line_end":544,"column_start":12,"column_end":16},"name":"auth","qualname":"<ZoneUsage>::auth","value":"fn (&self) -> AuthUsage","parent":null,"children":[],"decl_id":null,"docs":" Returns the AuthUsage of this zone\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":196062,"byte_end":196064,"line_start":549,"line_end":549,"column_start":12,"column_end":14},"name":"op","qualname":"<ZoneUsage>::op","value":"fn (&self) -> OpUsage","parent":null,"children":[],"decl_id":null,"docs":" Returns the OpUsage of this zone\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":196166,"byte_end":196174,"line_start":554,"line_end":554,"column_start":12,"column_end":20},"name":"registry","qualname":"<ZoneUsage>::registry","value":"fn (&self) -> RegistryUsage","parent":null,"children":[],"decl_id":null,"docs":" Returns the RegistryUsage of this zone\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":704},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"rdata","qualname":"::rr::rdata","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/mod.rs","parent":null,"children":[{"krate":0,"index":705},{"krate":0,"index":711},{"krate":0,"index":717},{"krate":0,"index":778},{"krate":0,"index":788},{"krate":0,"index":794},{"krate":0,"index":813},{"krate":0,"index":824},{"krate":0,"index":832},{"krate":0,"index":866},{"krate":0,"index":882},{"krate":0,"index":894},{"krate":0,"index":914},{"krate":0,"index":939},{"krate":0,"index":951},{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961}],"decl_id":null,"docs":" All record data structures and related serialization methods\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":705},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/a.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"a","qualname":"::rr::rdata::a","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/a.rs","parent":null,"children":[{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710}],"decl_id":null,"docs":" IPv4 address record data","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":709},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/a.rs","byte_start":199351,"byte_end":199355,"line_start":49,"line_end":49,"column_start":8,"column_end":12},"name":"read","qualname":"::rr::rdata::a::read","value":"fn (decoder: &mut BinDecoder) -> ProtoResult<Ipv4Addr>","parent":null,"children":[],"decl_id":null,"docs":" Read the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":710},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/a.rs","byte_start":199715,"byte_end":199719,"line_start":59,"line_end":59,"column_start":8,"column_end":12},"name":"emit","qualname":"::rr::rdata::a::emit","value":"fn (encoder: &mut BinEncoder, address: Ipv4Addr) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Write the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":711},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/aaaa.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"aaaa","qualname":"::rr::rdata::aaaa","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/aaaa.rs","parent":null,"children":[{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716}],"decl_id":null,"docs":" IPv6 address record data","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":715},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/aaaa.rs","byte_start":202362,"byte_end":202366,"line_start":42,"line_end":42,"column_start":8,"column_end":12},"name":"read","qualname":"::rr::rdata::aaaa::read","value":"fn (decoder: &mut BinDecoder) -> ProtoResult<Ipv6Addr>","parent":null,"children":[],"decl_id":null,"docs":" Read the RData from the given Decoder\n","sig":null,"attributes":[{"value":"allow(clippy :: many_single_char_names)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/aaaa.rs","byte_start":202314,"byte_end":202354,"line_start":41,"line_end":41,"column_start":1,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":716},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/aaaa.rs","byte_start":203088,"byte_end":203092,"line_start":56,"line_end":56,"column_start":8,"column_end":12},"name":"emit","qualname":"::rr::rdata::aaaa::emit","value":"fn (encoder: &mut BinEncoder, address: &Ipv6Addr) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Write the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":717},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"caa","qualname":"::rr::rdata::caa","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","parent":null,"children":[{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":2863},{"krate":0,"index":2879},{"krate":0,"index":2875},{"krate":0,"index":2876},{"krate":0,"index":2872},{"krate":0,"index":2873},{"krate":0,"index":2869},{"krate":0,"index":2867},{"krate":0,"index":723},{"krate":0,"index":2881},{"krate":0,"index":2903},{"krate":0,"index":2899},{"krate":0,"index":2900},{"krate":0,"index":2896},{"krate":0,"index":2897},{"krate":0,"index":2893},{"krate":0,"index":2891},{"krate":0,"index":731},{"krate":0,"index":737},{"krate":0,"index":2905},{"krate":0,"index":2928},{"krate":0,"index":2924},{"krate":0,"index":2925},{"krate":0,"index":2921},{"krate":0,"index":2922},{"krate":0,"index":2918},{"krate":0,"index":2916},{"krate":0,"index":739},{"krate":0,"index":743},{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":758},{"krate":0,"index":760},{"krate":0,"index":2930},{"krate":0,"index":2945},{"krate":0,"index":2941},{"krate":0,"index":2942},{"krate":0,"index":2938},{"krate":0,"index":2939},{"krate":0,"index":2935},{"krate":0,"index":2933},{"krate":0,"index":761},{"krate":0,"index":767},{"krate":0,"index":769},{"krate":0,"index":775},{"krate":0,"index":776}],"decl_id":null,"docs":" allows a DNS domain name holder to specify one or more Certification\n Authorities (CAs) authorized to issue certificates for that domain.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2863},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","byte_start":211663,"byte_end":211666,"line_start":130,"line_end":130,"column_start":12,"column_end":15},"name":"CAA","qualname":"::rr::rdata::caa::CAA","value":"CAA { issuer_critical, tag, value }","parent":null,"children":[{"krate":0,"index":2864},{"krate":0,"index":2865},{"krate":0,"index":2866}],"decl_id":null,"docs":" The CAA RR Type","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2864},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","byte_start":211696,"byte_end":211711,"line_start":132,"line_end":132,"column_start":9,"column_end":24},"name":"issuer_critical","qualname":"::rr::rdata::caa::CAA::issuer_critical","value":"bool","parent":{"krate":0,"index":2863},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2865},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","byte_start":211746,"byte_end":211749,"line_start":134,"line_end":134,"column_start":9,"column_end":12},"name":"tag","qualname":"::rr::rdata::caa::CAA::tag","value":"rr::rdata::caa::Property","parent":{"krate":0,"index":2863},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2866},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","byte_start":211788,"byte_end":211793,"line_start":136,"line_end":136,"column_start":9,"column_end":14},"name":"value","qualname":"::rr::rdata::caa::CAA::value","value":"rr::rdata::caa::Value","parent":{"krate":0,"index":2863},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","byte_start":212590,"byte_end":212599,"line_start":162,"line_end":162,"column_start":12,"column_end":21},"name":"new_issue","qualname":"<CAA>::new_issue","value":"fn (issuer_critical: bool, name: Option<Name>, options: Vec<KeyValue>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CAA issue record data, the tag is `issue`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","byte_start":213205,"byte_end":213218,"line_start":173,"line_end":173,"column_start":12,"column_end":25},"name":"new_issuewild","qualname":"<CAA>::new_issuewild","value":"fn (issuer_critical: bool, name: Option<Name>, options: Vec<KeyValue>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CAA issue record data, the tag is `issuewild`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","byte_start":213829,"byte_end":213838,"line_start":191,"line_end":191,"column_start":12,"column_end":21},"name":"new_iodef","qualname":"<CAA>::new_iodef","value":"fn (issuer_critical: bool, url: Url) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CAA issue record data, the tag is `iodef`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","byte_start":214176,"byte_end":214191,"line_start":200,"line_end":200,"column_start":12,"column_end":27},"name":"issuer_critical","qualname":"<CAA>::issuer_critical","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates that the corresponding property tag MUST be understood if the semantics of the CAA record are to be correctly interpreted by an issuer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","byte_start":214307,"byte_end":214310,"line_start":205,"line_end":205,"column_start":12,"column_end":15},"name":"tag","qualname":"<CAA>::tag","value":"fn (&self) -> &Property","parent":null,"children":[],"decl_id":null,"docs":" The property tag, see struct documentation\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":730},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","byte_start":214456,"byte_end":214461,"line_start":210,"line_end":210,"column_start":12,"column_end":17},"name":"value","qualname":"<CAA>::value","value":"fn (&self) -> &Value","parent":null,"children":[],"decl_id":null,"docs":" a potentially associated value with the property tag, see struct documentation\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2882},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","byte_start":214935,"byte_end":214940,"line_start":223,"line_end":223,"column_start":5,"column_end":10},"name":"Issue","qualname":"::rr::rdata::caa::Property::Issue","value":"Property::Issue","parent":{"krate":0,"index":2881},"children":[],"decl_id":null,"docs":" The issue property\n    entry authorizes the holder of the domain name <Issuer Domain\n    Name> or a party acting under the explicit authority of the holder\n    of that domain name to issue certificates for the domain in which\n    the property is published.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2884},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","byte_start":215252,"byte_end":215261,"line_start":229,"line_end":229,"column_start":5,"column_end":14},"name":"IssueWild","qualname":"::rr::rdata::caa::Property::IssueWild","value":"Property::IssueWild","parent":{"krate":0,"index":2881},"children":[],"decl_id":null,"docs":" The issuewild\n    property entry authorizes the holder of the domain name <Issuer\n    Domain Name> or a party acting under the explicit authority of the\n    holder of that domain name to issue wildcard certificates for the\n    domain in which the property is published.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2886},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","byte_start":215666,"byte_end":215671,"line_start":236,"line_end":236,"column_start":5,"column_end":10},"name":"Iodef","qualname":"::rr::rdata::caa::Property::Iodef","value":"Property::Iodef","parent":{"krate":0,"index":2881},"children":[],"decl_id":null,"docs":" Specifies a URL to which an issuer MAY report\n    certificate issue requests that are inconsistent with the issuer's\n    Certification Practices or Certificate Policy, or that a\n    Certificate Evaluator may use to report observation of a possible\n    policy violation. The Incident Object Description Exchange Format\n    (IODEF) format is used [RFC5070].\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2888},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","byte_start":215713,"byte_end":215720,"line_start":238,"line_end":238,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::rr::rdata::caa::Property::Unknown","value":"Property::Unknown(String)","parent":{"krate":0,"index":2881},"children":[],"decl_id":null,"docs":" Unknown format to Trust-DNS\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2881},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","byte_start":214627,"byte_end":214635,"line_start":217,"line_end":217,"column_start":10,"column_end":18},"name":"Property","qualname":"::rr::rdata::caa::Property","value":"Property::{Issue, IssueWild, Iodef, Unknown}","parent":null,"children":[{"krate":0,"index":2882},{"krate":0,"index":2884},{"krate":0,"index":2886},{"krate":0,"index":2888}],"decl_id":null,"docs":" Specifies in what contexts this key may be trusted for use\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","byte_start":216055,"byte_end":216063,"line_start":252,"line_end":252,"column_start":12,"column_end":20},"name":"is_issue","qualname":"<Property>::is_issue","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" true if the property is `issue`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","byte_start":216247,"byte_end":216259,"line_start":261,"line_end":261,"column_start":12,"column_end":24},"name":"is_issuewild","qualname":"<Property>::is_issuewild","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" true if the property is `issueworld`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","byte_start":216442,"byte_end":216450,"line_start":270,"line_end":270,"column_start":12,"column_end":20},"name":"is_iodef","qualname":"<Property>::is_iodef","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" true if the property is `iodef`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","byte_start":216644,"byte_end":216654,"line_start":279,"line_end":279,"column_start":12,"column_end":22},"name":"is_unknown","qualname":"<Property>::is_unknown","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" true if the property is not known to Trust-DNS\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2906},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","byte_start":217572,"byte_end":217578,"line_start":314,"line_end":314,"column_start":5,"column_end":11},"name":"Issuer","qualname":"::rr::rdata::caa::Value::Issuer","value":"Value::Issuer(Option<Name>, Vec<KeyValue>)","parent":{"krate":0,"index":2905},"children":[],"decl_id":null,"docs":" Issuer authorized to issue certs for this zone, and any associated parameters\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2910},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","byte_start":217652,"byte_end":217655,"line_start":316,"line_end":316,"column_start":5,"column_end":8},"name":"Url","qualname":"::rr::rdata::caa::Value::Url","value":"Value::Url(Url)","parent":{"krate":0,"index":2905},"children":[],"decl_id":null,"docs":" Url to which to send CA errors\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2913},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","byte_start":217714,"byte_end":217721,"line_start":318,"line_end":318,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::rr::rdata::caa::Value::Unknown","value":"Value::Unknown(Vec<u8>)","parent":{"krate":0,"index":2905},"children":[],"decl_id":null,"docs":" Unrecognized tag and value by Trust-DNS\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2905},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","byte_start":217474,"byte_end":217479,"line_start":312,"line_end":312,"column_start":10,"column_end":15},"name":"Value","qualname":"::rr::rdata::caa::Value","value":"Value::{Issuer, Url, Unknown}","parent":null,"children":[{"krate":0,"index":2906},{"krate":0,"index":2910},{"krate":0,"index":2913}],"decl_id":null,"docs":" Potential values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":740},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","byte_start":217795,"byte_end":217804,"line_start":323,"line_end":323,"column_start":12,"column_end":21},"name":"is_issuer","qualname":"<Value>::is_issuer","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" true if this is an `Issuer`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":741},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","byte_start":217977,"byte_end":217983,"line_start":332,"line_end":332,"column_start":12,"column_end":18},"name":"is_url","qualname":"<Value>::is_url","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" true if this is a `Url`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":742},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","byte_start":218158,"byte_end":218168,"line_start":341,"line_end":341,"column_start":12,"column_end":22},"name":"is_unknown","qualname":"<Value>::is_unknown","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" true if this is an `Unknown`\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":758},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","byte_start":223842,"byte_end":223853,"line_start":497,"line_end":497,"column_start":8,"column_end":19},"name":"read_issuer","qualname":"::rr::rdata::caa::read_issuer","value":"fn (bytes: &[u8]) -> ProtoResult<(Option<Name>, Vec<KeyValue>)>","parent":null,"children":[],"decl_id":null,"docs":" Reads the issuer field according to the spec","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":760},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","byte_start":229556,"byte_end":229566,"line_start":642,"line_end":642,"column_start":8,"column_end":18},"name":"read_iodef","qualname":"::rr::rdata::caa::read_iodef","value":"fn (url: &[u8]) -> ProtoResult<Url>","parent":null,"children":[],"decl_id":null,"docs":" Incident Object Description Exchange Format","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2930},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","byte_start":229927,"byte_end":229935,"line_start":653,"line_end":653,"column_start":12,"column_end":20},"name":"KeyValue","qualname":"::rr::rdata::caa::KeyValue","value":"KeyValue {  }","parent":null,"children":[{"krate":0,"index":2931},{"krate":0,"index":2932}],"decl_id":null,"docs":" Issuer key and value pairs.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","byte_start":230042,"byte_end":230045,"line_start":660,"line_end":660,"column_start":12,"column_end":15},"name":"new","qualname":"<KeyValue>::new","value":"fn <K, V> (key: K, value: V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new KeyValue pair\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":765},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","byte_start":230266,"byte_end":230269,"line_start":668,"line_end":668,"column_start":12,"column_end":15},"name":"key","qualname":"<KeyValue>::key","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key of the pair.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","byte_start":230374,"byte_end":230379,"line_start":673,"line_end":673,"column_start":12,"column_end":17},"name":"value","qualname":"<KeyValue>::value","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the value of the pair.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":767},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","byte_start":234053,"byte_end":234057,"line_start":756,"line_end":756,"column_start":8,"column_end":12},"name":"read","qualname":"::rr::rdata::caa::read","value":"fn (decoder: &mut BinDecoder, rdata_length: Restrict<u16>) -> ProtoResult<CAA>","parent":null,"children":[],"decl_id":null,"docs":" Read the binary CAA format","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":776},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","byte_start":236262,"byte_end":236266,"line_start":828,"line_end":828,"column_start":8,"column_end":12},"name":"emit","qualname":"::rr::rdata::caa::emit","value":"fn (encoder: &mut BinEncoder, caa: &CAA) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Write the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":778},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/mx.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mx","qualname":"::rr::rdata::mx","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/mx.rs","parent":null,"children":[{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":2947},{"krate":0,"index":2962},{"krate":0,"index":2958},{"krate":0,"index":2959},{"krate":0,"index":2955},{"krate":0,"index":2956},{"krate":0,"index":2952},{"krate":0,"index":2950},{"krate":0,"index":782},{"krate":0,"index":786},{"krate":0,"index":787}],"decl_id":null,"docs":" mail exchange, email, record\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2947},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/mx.rs","byte_start":245560,"byte_end":245562,"line_start":41,"line_end":41,"column_start":12,"column_end":14},"name":"MX","qualname":"::rr::rdata::mx::MX","value":"MX {  }","parent":null,"children":[{"krate":0,"index":2948},{"krate":0,"index":2949}],"decl_id":null,"docs":" [RFC 1035, DOMAIN NAMES - IMPLEMENTATION AND SPECIFICATION, November 1987](https://tools.ietf.org/html/rfc1035)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":783},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/mx.rs","byte_start":245953,"byte_end":245956,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"new","qualname":"<MX>::new","value":"fn (preference: u16, exchange: Name) -> MX","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new MX RData","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/mx.rs","byte_start":246439,"byte_end":246449,"line_start":71,"line_end":71,"column_start":12,"column_end":22},"name":"preference","qualname":"<MX>::preference","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" [RFC 1035, DOMAIN NAMES - IMPLEMENTATION AND SPECIFICATION, November 1987](https://tools.ietf.org/html/rfc1035)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":785},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/mx.rs","byte_start":246805,"byte_end":246813,"line_start":81,"line_end":81,"column_start":12,"column_end":20},"name":"exchange","qualname":"<MX>::exchange","value":"fn (&self) -> &Name","parent":null,"children":[],"decl_id":null,"docs":" [RFC 1035, DOMAIN NAMES - IMPLEMENTATION AND SPECIFICATION, November 1987](https://tools.ietf.org/html/rfc1035)","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":786},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/mx.rs","byte_start":246913,"byte_end":246917,"line_start":87,"line_end":87,"column_start":8,"column_end":12},"name":"read","qualname":"::rr::rdata::mx::read","value":"fn (decoder: &mut BinDecoder) -> ProtoResult<MX>","parent":null,"children":[],"decl_id":null,"docs":" Read the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":787},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/mx.rs","byte_start":247754,"byte_end":247758,"line_start":110,"line_end":110,"column_start":8,"column_end":12},"name":"emit","qualname":"::rr::rdata::mx::emit","value":"fn (encoder: &mut BinEncoder, mx: &MX) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" [RFC 4034](https://tools.ietf.org/html/rfc4034#section-6), DNSSEC Resource Records, March 2005","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":788},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/name.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"name","qualname":"::rr::rdata::name","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/name.rs","parent":null,"children":[{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":793}],"decl_id":null,"docs":" Record type for all cname like records.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":792},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/name.rs","byte_start":250454,"byte_end":250458,"line_start":47,"line_end":47,"column_start":8,"column_end":12},"name":"read","qualname":"::rr::rdata::name::read","value":"fn (decoder: &mut BinDecoder) -> ProtoResult<Name>","parent":null,"children":[],"decl_id":null,"docs":" Read the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":793},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/name.rs","byte_start":251264,"byte_end":251268,"line_start":69,"line_end":69,"column_start":8,"column_end":12},"name":"emit","qualname":"::rr::rdata::name::emit","value":"fn (encoder: &mut BinEncoder, name_data: &Name) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" [RFC 4034](https://tools.ietf.org/html/rfc4034#section-6), DNSSEC Resource Records, March 2005","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":794},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/naptr.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"naptr","qualname":"::rr::rdata::naptr","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/naptr.rs","parent":null,"children":[{"krate":0,"index":795},{"krate":0,"index":796},{"krate":0,"index":797},{"krate":0,"index":2964},{"krate":0,"index":2983},{"krate":0,"index":2979},{"krate":0,"index":2980},{"krate":0,"index":2976},{"krate":0,"index":2977},{"krate":0,"index":2973},{"krate":0,"index":2971},{"krate":0,"index":798},{"krate":0,"index":806},{"krate":0,"index":808},{"krate":0,"index":811}],"decl_id":null,"docs":" Dynamic Delegation Discovery System\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2964},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/naptr.rs","byte_start":253895,"byte_end":253900,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"NAPTR","qualname":"::rr::rdata::naptr::NAPTR","value":"NAPTR {  }","parent":null,"children":[{"krate":0,"index":2965},{"krate":0,"index":2966},{"krate":0,"index":2967},{"krate":0,"index":2968},{"krate":0,"index":2969},{"krate":0,"index":2970}],"decl_id":null,"docs":" [RFC 3403 DDDS DNS Database, October 2002](https://tools.ietf.org/html/rfc3403#section-4)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/naptr.rs","byte_start":254893,"byte_end":254896,"line_start":64,"line_end":64,"column_start":12,"column_end":15},"name":"new","qualname":"<NAPTR>::new","value":"fn (order: u16, preference: u16, flags: Box<[u8]>, services: Box<[u8]>, regexp: Box<[u8]>, replacement: Name) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new NAPTR record","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/naptr.rs","byte_start":255736,"byte_end":255741,"line_start":91,"line_end":91,"column_start":12,"column_end":17},"name":"order","qualname":"<NAPTR>::order","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" ```text\n   ORDER\n      A 16-bit unsigned integer specifying the order in which the NAPTR\n      records MUST be processed in order to accurately represent the\n      ordered list of Rules.  The ordering is from lowest to highest.\n      If two records have the same order value then they are considered\n      to be the same rule and should be selected based on the\n      combination of the Preference values and Services offered.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/naptr.rs","byte_start":257673,"byte_end":257683,"line_start":124,"line_end":124,"column_start":12,"column_end":22},"name":"preference","qualname":"<NAPTR>::preference","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" ```text\n   PREFERENCE\n      Although it is called \"preference\" in deference to DNS\n      terminology, this field is equivalent to the Priority value in the\n      DDDS Algorithm.  It is a 16-bit unsigned integer that specifies\n      the order in which NAPTR records with equal Order values SHOULD be\n      processed, low numbers being processed before high numbers.  This\n      is similar to the preference field in an MX record, and is used so\n      domain administrators can direct clients towards more capable\n      hosts or lighter weight protocols.  A client MAY look at records\n      with higher preference values if it has a good reason to do so\n      such as not supporting some protocol or service very well.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/naptr.rs","byte_start":258314,"byte_end":258319,"line_start":139,"line_end":139,"column_start":12,"column_end":17},"name":"flags","qualname":"<NAPTR>::flags","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" ```text\n   FLAGS\n      A <character-string> containing flags to control aspects of the\n      rewriting and interpretation of the fields in the record.  Flags\n      are single characters from the set A-Z and 0-9.  The case of the\n      alphabetic characters is not significant.  The field can be empty.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/naptr.rs","byte_start":258661,"byte_end":258669,"line_start":150,"line_end":150,"column_start":12,"column_end":20},"name":"services","qualname":"<NAPTR>::services","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" ```text\n   SERVICES\n      A <character-string> that specifies the Service Parameters\n      applicable to this this delegation path.  It is up to the\n      Application Specification to specify the values found in this\n      field.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/naptr.rs","byte_start":259571,"byte_end":259577,"line_start":169,"line_end":169,"column_start":12,"column_end":18},"name":"regexp","qualname":"<NAPTR>::regexp","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" ```text\n   REGEXP\n      A <character-string> containing a substitution expression that is\n      applied to the original string held by the client in order to\n      construct the next domain name to lookup.  See the DDDS Algorithm\n      specification for the syntax of this field.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":805},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/naptr.rs","byte_start":260537,"byte_end":260548,"line_start":188,"line_end":188,"column_start":12,"column_end":23},"name":"replacement","qualname":"<NAPTR>::replacement","value":"fn (&self) -> &Name","parent":null,"children":[],"decl_id":null,"docs":" ```text\n   REPLACEMENT\n      A <domain-name> which is the next domain-name to query for\n      depending on the potential values found in the flags field.  This\n      field is used when the regular expression is a simple replacement\n      operation.  Any value in this field MUST be a fully qualified\n      domain-name.  Name compression is not to be used for this field.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":806},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/naptr.rs","byte_start":260647,"byte_end":260659,"line_start":194,"line_end":194,"column_start":8,"column_end":20},"name":"verify_flags","qualname":"::rr::rdata::naptr::verify_flags","value":"fn (flags: &[u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" verifies that the flags are valid\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":808},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/naptr.rs","byte_start":260885,"byte_end":260889,"line_start":204,"line_end":204,"column_start":8,"column_end":12},"name":"read","qualname":"::rr::rdata::naptr::read","value":"fn (decoder: &mut BinDecoder) -> ProtoResult<NAPTR>","parent":null,"children":[],"decl_id":null,"docs":" Read the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":811},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/naptr.rs","byte_start":261639,"byte_end":261643,"line_start":222,"line_end":222,"column_start":8,"column_end":12},"name":"emit","qualname":"::rr::rdata::naptr::emit","value":"fn (encoder: &mut BinEncoder, naptr: &NAPTR) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Declares the method for emitting this type\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":813},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/null.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"null","qualname":"::rr::rdata::null","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/null.rs","parent":null,"children":[{"krate":0,"index":814},{"krate":0,"index":815},{"krate":0,"index":2985},{"krate":0,"index":3001},{"krate":0,"index":2999},{"krate":0,"index":2995},{"krate":0,"index":2996},{"krate":0,"index":2992},{"krate":0,"index":2993},{"krate":0,"index":2989},{"krate":0,"index":2987},{"krate":0,"index":816},{"krate":0,"index":821},{"krate":0,"index":823}],"decl_id":null,"docs":" null record type, generally not used except as an internal tool for representing null data\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2985},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/null.rs","byte_start":265267,"byte_end":265271,"line_start":40,"line_end":40,"column_start":12,"column_end":16},"name":"NULL","qualname":"::rr::rdata::null::NULL","value":"NULL {  }","parent":null,"children":[{"krate":0,"index":2986}],"decl_id":null,"docs":" [RFC 1035, DOMAIN NAMES - IMPLEMENTATION AND SPECIFICATION, November 1987](https://tools.ietf.org/html/rfc1035)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":817},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/null.rs","byte_start":265366,"byte_end":265369,"line_start":46,"line_end":46,"column_start":12,"column_end":15},"name":"new","qualname":"<NULL>::new","value":"fn () -> NULL","parent":null,"children":[],"decl_id":null,"docs":" Construct a new NULL RData\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":818},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/null.rs","byte_start":265488,"byte_end":265492,"line_start":51,"line_end":51,"column_start":12,"column_end":16},"name":"with","qualname":"<NULL>::with","value":"fn (anything: Vec<u8>) -> NULL","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new NULL RData with the associated data\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":819},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/null.rs","byte_start":265649,"byte_end":265657,"line_start":58,"line_end":58,"column_start":12,"column_end":20},"name":"anything","qualname":"<NULL>::anything","value":"fn (&self) -> Option<&[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Returns the buffer stored in the NULL\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":821},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/null.rs","byte_start":265797,"byte_end":265801,"line_start":64,"line_end":64,"column_start":8,"column_end":12},"name":"read","qualname":"::rr::rdata::null::read","value":"fn (decoder: &mut BinDecoder, rdata_length: Restrict<u16>) -> ProtoResult<NULL>","parent":null,"children":[],"decl_id":null,"docs":" Read the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":823},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/null.rs","byte_start":266220,"byte_end":266224,"line_start":75,"line_end":75,"column_start":8,"column_end":12},"name":"emit","qualname":"::rr::rdata::null::emit","value":"fn (encoder: &mut BinEncoder, nil: &NULL) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Write the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":824},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/openpgpkey.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"openpgpkey","qualname":"::rr::rdata::openpgpkey","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/openpgpkey.rs","parent":null,"children":[{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":3003},{"krate":0,"index":3017},{"krate":0,"index":3013},{"krate":0,"index":3014},{"krate":0,"index":3010},{"krate":0,"index":3011},{"krate":0,"index":3007},{"krate":0,"index":3005},{"krate":0,"index":827},{"krate":0,"index":830},{"krate":0,"index":831}],"decl_id":null,"docs":" OPENPGPKEY records for OpenPGP public keys\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3003},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/openpgpkey.rs","byte_start":267870,"byte_end":267880,"line_start":21,"line_end":21,"column_start":12,"column_end":22},"name":"OPENPGPKEY","qualname":"::rr::rdata::openpgpkey::OPENPGPKEY","value":"OPENPGPKEY {  }","parent":null,"children":[{"krate":0,"index":3004}],"decl_id":null,"docs":" [RFC 7929](https://tools.ietf.org/html/rfc7929#section-2.1)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/openpgpkey.rs","byte_start":268120,"byte_end":268123,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<OPENPGPKEY>::new","value":"fn (public_key: Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new OPENPGPKEY record data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":829},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/openpgpkey.rs","byte_start":268318,"byte_end":268328,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"public_key","qualname":"<OPENPGPKEY>::public_key","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" The public key. This should be an OpenPGP Transferable Public Key,\n but this is not guaranteed.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":830},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/openpgpkey.rs","byte_start":268431,"byte_end":268435,"line_start":44,"line_end":44,"column_start":8,"column_end":12},"name":"read","qualname":"::rr::rdata::openpgpkey::read","value":"fn (decoder: &mut BinDecoder, rdata_length: Restrict<u16>) -> ProtoResult<OPENPGPKEY>","parent":null,"children":[],"decl_id":null,"docs":" Read the RData from the given decoder.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":831},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/openpgpkey.rs","byte_start":268791,"byte_end":268795,"line_start":52,"line_end":52,"column_start":8,"column_end":12},"name":"emit","qualname":"::rr::rdata::openpgpkey::emit","value":"fn (encoder: &mut BinEncoder, openpgpkey: &OPENPGPKEY) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Write the RData using the given encoder\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":832},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/opt.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"opt","qualname":"::rr::rdata::opt","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/opt.rs","parent":null,"children":[{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":3019},{"krate":0,"index":3032},{"krate":0,"index":3030},{"krate":0,"index":3026},{"krate":0,"index":3027},{"krate":0,"index":3023},{"krate":0,"index":3024},{"krate":0,"index":3021},{"krate":0,"index":837},{"krate":0,"index":842},{"krate":0,"index":847},{"krate":0,"index":3034},{"krate":0,"index":3050},{"krate":0,"index":3046},{"krate":0,"index":3047},{"krate":0,"index":3043},{"krate":0,"index":3044},{"krate":0,"index":3052},{"krate":0,"index":3094},{"krate":0,"index":3092},{"krate":0,"index":3091},{"krate":0,"index":3089},{"krate":0,"index":3085},{"krate":0,"index":3086},{"krate":0,"index":3082},{"krate":0,"index":3083},{"krate":0,"index":848},{"krate":0,"index":850},{"krate":0,"index":3097},{"krate":0,"index":3124},{"krate":0,"index":3114},{"krate":0,"index":3110},{"krate":0,"index":3111},{"krate":0,"index":3107},{"krate":0,"index":3108},{"krate":0,"index":3105},{"krate":0,"index":3102},{"krate":0,"index":852},{"krate":0,"index":855},{"krate":0,"index":857},{"krate":0,"index":860},{"krate":0,"index":863}],"decl_id":null,"docs":" option record for passing protocol options between the client and server\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3019},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/opt.rs","byte_start":276572,"byte_end":276575,"line_start":166,"line_end":166,"column_start":12,"column_end":15},"name":"OPT","qualname":"::rr::rdata::opt::OPT","value":"OPT {  }","parent":null,"children":[{"krate":0,"index":3020}],"decl_id":null,"docs":" The OPT record type is used for ExtendedDNS records.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":838},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/opt.rs","byte_start":276854,"byte_end":276857,"line_start":180,"line_end":180,"column_start":12,"column_end":15},"name":"new","qualname":"<OPT>::new","value":"fn (options: HashMap<EdnsCode, EdnsOption>) -> OPT","parent":null,"children":[],"decl_id":null,"docs":" Creates a new OPT record data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":839},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/opt.rs","byte_start":276983,"byte_end":276990,"line_start":185,"line_end":185,"column_start":12,"column_end":19},"name":"options","qualname":"<OPT>::options","value":"fn (&self) -> &HashMap<EdnsCode, EdnsOption>","parent":null,"children":[],"decl_id":null,"docs":" The entire map of options\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/opt.rs","byte_start":277120,"byte_end":277123,"line_start":190,"line_end":190,"column_start":12,"column_end":15},"name":"get","qualname":"<OPT>::get","value":"fn (&self, code: EdnsCode) -> Option<&EdnsOption>","parent":null,"children":[],"decl_id":null,"docs":" Get a single option based on the code\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/opt.rs","byte_start":277292,"byte_end":277298,"line_start":195,"line_end":195,"column_start":12,"column_end":18},"name":"insert","qualname":"<OPT>::insert","value":"fn (&mut self, option: EdnsOption) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Insert a new option, the key is derived from the `EdnsOption`\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":842},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/opt.rs","byte_start":277445,"byte_end":277449,"line_start":201,"line_end":201,"column_start":8,"column_end":12},"name":"read","qualname":"::rr::rdata::opt::read","value":"fn (decoder: &mut BinDecoder, rdata_length: Restrict<u16>) -> ProtoResult<OPT>","parent":null,"children":[],"decl_id":null,"docs":" Read the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":847},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/opt.rs","byte_start":280099,"byte_end":280103,"line_start":265,"line_end":265,"column_start":8,"column_end":12},"name":"emit","qualname":"::rr::rdata::opt::emit","value":"fn (encoder: &mut BinEncoder, opt: &OPT) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Write the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3053},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/opt.rs","byte_start":280840,"byte_end":280844,"line_start":291,"line_end":291,"column_start":5,"column_end":9},"name":"Zero","qualname":"::rr::rdata::opt::EdnsCode::Zero","value":"EdnsCode::Zero","parent":{"krate":0,"index":3052},"children":[],"decl_id":null,"docs":" [RFC 6891, Reserved](https://tools.ietf.org/html/rfc6891)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3055},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/opt.rs","byte_start":280922,"byte_end":280925,"line_start":294,"line_end":294,"column_start":5,"column_end":8},"name":"LLQ","qualname":"::rr::rdata::opt::EdnsCode::LLQ","value":"EdnsCode::LLQ","parent":{"krate":0,"index":3052},"children":[],"decl_id":null,"docs":" [LLQ On-hold](http://files.dns-sd.org/draft-sekar-dns-llq.txt)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3057},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/opt.rs","byte_start":281001,"byte_end":281003,"line_start":297,"line_end":297,"column_start":5,"column_end":7},"name":"UL","qualname":"::rr::rdata::opt::EdnsCode::UL","value":"EdnsCode::UL","parent":{"krate":0,"index":3052},"children":[],"decl_id":null,"docs":" [UL On-hold](http://files.dns-sd.org/draft-sekar-dns-ul.txt)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3059},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/opt.rs","byte_start":281072,"byte_end":281076,"line_start":300,"line_end":300,"column_start":5,"column_end":9},"name":"NSID","qualname":"::rr::rdata::opt::EdnsCode::NSID","value":"EdnsCode::NSID","parent":{"krate":0,"index":3052},"children":[],"decl_id":null,"docs":" [RFC 5001, NSID](https://tools.ietf.org/html/rfc5001)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3061},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/opt.rs","byte_start":281231,"byte_end":281234,"line_start":303,"line_end":303,"column_start":5,"column_end":8},"name":"DAU","qualname":"::rr::rdata::opt::EdnsCode::DAU","value":"EdnsCode::DAU","parent":{"krate":0,"index":3052},"children":[],"decl_id":null,"docs":" [RFC 6975, DNSSEC Algorithm Understood](https://tools.ietf.org/html/rfc6975)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3063},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/opt.rs","byte_start":281317,"byte_end":281320,"line_start":306,"line_end":306,"column_start":5,"column_end":8},"name":"DHU","qualname":"::rr::rdata::opt::EdnsCode::DHU","value":"EdnsCode::DHU","parent":{"krate":0,"index":3052},"children":[],"decl_id":null,"docs":" [RFC 6975, DS Hash Understood](https://tools.ietf.org/html/rfc6975)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3065},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/opt.rs","byte_start":281406,"byte_end":281409,"line_start":309,"line_end":309,"column_start":5,"column_end":8},"name":"N3U","qualname":"::rr::rdata::opt::EdnsCode::N3U","value":"EdnsCode::N3U","parent":{"krate":0,"index":3052},"children":[],"decl_id":null,"docs":" [RFC 6975, NSEC3 Hash Understood](https://tools.ietf.org/html/rfc6975)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3067},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/opt.rs","byte_start":281524,"byte_end":281530,"line_start":312,"line_end":312,"column_start":5,"column_end":11},"name":"Subnet","qualname":"::rr::rdata::opt::EdnsCode::Subnet","value":"EdnsCode::Subnet","parent":{"krate":0,"index":3052},"children":[],"decl_id":null,"docs":" [edns-client-subnet, Optional](https://tools.ietf.org/html/draft-vandergaast-edns-client-subnet-02)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3069},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/opt.rs","byte_start":281616,"byte_end":281622,"line_start":315,"line_end":315,"column_start":5,"column_end":11},"name":"Expire","qualname":"::rr::rdata::opt::EdnsCode::Expire","value":"EdnsCode::Expire","parent":{"krate":0,"index":3052},"children":[],"decl_id":null,"docs":" [RFC 7314, EDNS EXPIRE, Optional](https://tools.ietf.org/html/rfc7314)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3071},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/opt.rs","byte_start":281721,"byte_end":281727,"line_start":318,"line_end":318,"column_start":5,"column_end":11},"name":"Cookie","qualname":"::rr::rdata::opt::EdnsCode::Cookie","value":"EdnsCode::Cookie","parent":{"krate":0,"index":3052},"children":[],"decl_id":null,"docs":" [draft-ietf-dnsop-cookies](https://tools.ietf.org/html/draft-ietf-dnsop-cookies-07)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3073},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/opt.rs","byte_start":281858,"byte_end":281867,"line_start":321,"line_end":321,"column_start":5,"column_end":14},"name":"Keepalive","qualname":"::rr::rdata::opt::EdnsCode::Keepalive","value":"EdnsCode::Keepalive","parent":{"krate":0,"index":3052},"children":[],"decl_id":null,"docs":" [draft-ietf-dnsop-edns-tcp-keepalive, Optional](https://tools.ietf.org/html/draft-ietf-dnsop-edns-tcp-keepalive-04)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3075},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/opt.rs","byte_start":281986,"byte_end":281993,"line_start":324,"line_end":324,"column_start":5,"column_end":12},"name":"Padding","qualname":"::rr::rdata::opt::EdnsCode::Padding","value":"EdnsCode::Padding","parent":{"krate":0,"index":3052},"children":[],"decl_id":null,"docs":" [draft-mayrhofer-edns0-padding, Optional](https://tools.ietf.org/html/draft-mayrhofer-edns0-padding-01)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3077},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/opt.rs","byte_start":282110,"byte_end":282115,"line_start":327,"line_end":327,"column_start":5,"column_end":10},"name":"Chain","qualname":"::rr::rdata::opt::EdnsCode::Chain","value":"EdnsCode::Chain","parent":{"krate":0,"index":3052},"children":[],"decl_id":null,"docs":" [draft-ietf-dnsop-edns-chain-query](https://tools.ietf.org/html/draft-ietf-dnsop-edns-chain-query-07)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3079},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/opt.rs","byte_start":282186,"byte_end":282193,"line_start":330,"line_end":330,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::rr::rdata::opt::EdnsCode::Unknown","value":"EdnsCode::Unknown(u16)","parent":{"krate":0,"index":3052},"children":[],"decl_id":null,"docs":" Unknown, used to deal with unknown or unsupported codes\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3052},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/opt.rs","byte_start":280759,"byte_end":280767,"line_start":289,"line_end":289,"column_start":10,"column_end":18},"name":"EdnsCode","qualname":"::rr::rdata::opt::EdnsCode","value":"EdnsCode::{Zero, LLQ, UL, NSID, DAU, DHU, N3U, Subnet, Expire, Cookie, Keepalive, Padding, Chain, Unknown}","parent":null,"children":[{"krate":0,"index":3053},{"krate":0,"index":3055},{"krate":0,"index":3057},{"krate":0,"index":3059},{"krate":0,"index":3061},{"krate":0,"index":3063},{"krate":0,"index":3065},{"krate":0,"index":3067},{"krate":0,"index":3069},{"krate":0,"index":3071},{"krate":0,"index":3073},{"krate":0,"index":3075},{"krate":0,"index":3077},{"krate":0,"index":3079}],"decl_id":null,"docs":" The code of the EDNS data option\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3098},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/opt.rs","byte_start":284407,"byte_end":284414,"line_start":398,"line_end":398,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::rr::rdata::opt::EdnsOption::Unknown","value":"EdnsOption::Unknown(u16, Vec<u8>)","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":" Unknown, used to deal with unknown or unsupported codes\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3097},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/opt.rs","byte_start":283900,"byte_end":283910,"line_start":384,"line_end":384,"column_start":10,"column_end":20},"name":"EdnsOption","qualname":"::rr::rdata::opt::EdnsOption","value":"EdnsOption::{Unknown}","parent":null,"children":[{"krate":0,"index":3098}],"decl_id":null,"docs":" options used to pass information about capabilities between client and server","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/opt.rs","byte_start":284516,"byte_end":284519,"line_start":403,"line_end":403,"column_start":12,"column_end":15},"name":"len","qualname":"<EdnsOption>::len","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the length in bytes of the EdnsOption\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/opt.rs","byte_start":284945,"byte_end":284953,"line_start":414,"line_end":414,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<EdnsOption>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the length in bytes of the EdnsOption is 0\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":866},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/soa.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"soa","qualname":"::rr::rdata::soa","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/soa.rs","parent":null,"children":[{"krate":0,"index":867},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":3126},{"krate":0,"index":3146},{"krate":0,"index":3142},{"krate":0,"index":3143},{"krate":0,"index":3139},{"krate":0,"index":3140},{"krate":0,"index":3136},{"krate":0,"index":3134},{"krate":0,"index":870},{"krate":0,"index":880},{"krate":0,"index":881}],"decl_id":null,"docs":" start of authority record defining ownership and defaults for the zone\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3126},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/soa.rs","byte_start":291038,"byte_end":291041,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"SOA","qualname":"::rr::rdata::soa::SOA","value":"SOA {  }","parent":null,"children":[{"krate":0,"index":3127},{"krate":0,"index":3128},{"krate":0,"index":3129},{"krate":0,"index":3130},{"krate":0,"index":3131},{"krate":0,"index":3132},{"krate":0,"index":3133}],"decl_id":null,"docs":" [RFC 1035, DOMAIN NAMES - IMPLEMENTATION AND SPECIFICATION, November 1987](https://tools.ietf.org/html/rfc1035)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":871},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/soa.rs","byte_start":291940,"byte_end":291943,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"new","qualname":"<SOA>::new","value":"fn (mname: Name, rname: Name, serial: u32, refresh: i32, retry: i32, expire: i32, minimum: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new SOA record data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":872},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/soa.rs","byte_start":292334,"byte_end":292350,"line_start":115,"line_end":115,"column_start":12,"column_end":28},"name":"increment_serial","qualname":"<SOA>::increment_serial","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Increments the serial number by one\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/soa.rs","byte_start":292801,"byte_end":292806,"line_start":128,"line_end":128,"column_start":12,"column_end":17},"name":"mname","qualname":"<SOA>::mname","value":"fn (&self) -> &Name","parent":null,"children":[],"decl_id":null,"docs":" ```text\n MNAME           The <domain-name> of the name server that was the\n                 original or primary source of data for this zone.\n ```","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":874},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/soa.rs","byte_start":293191,"byte_end":293196,"line_start":141,"line_end":141,"column_start":12,"column_end":17},"name":"rname","qualname":"<SOA>::rname","value":"fn (&self) -> &Name","parent":null,"children":[],"decl_id":null,"docs":" ```text\n RNAME           A <domain-name> which specifies the mailbox of the\n                 person responsible for this zone.\n ```","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/soa.rs","byte_start":293790,"byte_end":293796,"line_start":156,"line_end":156,"column_start":12,"column_end":18},"name":"serial","qualname":"<SOA>::serial","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" ```text\n SERIAL          The unsigned 32 bit version number of the original copy\n                 of the zone.  Zone transfers preserve this value.  This\n                 value wraps and should be compared using sequence space\n                 arithmetic.\n ```","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/soa.rs","byte_start":294106,"byte_end":294113,"line_start":168,"line_end":168,"column_start":12,"column_end":19},"name":"refresh","qualname":"<SOA>::refresh","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" ```text\n REFRESH         A 32 bit time interval before the zone should be\n                 refreshed.\n ```","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/soa.rs","byte_start":294482,"byte_end":294487,"line_start":181,"line_end":181,"column_start":12,"column_end":17},"name":"retry","qualname":"<SOA>::retry","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" ```text\n RETRY           A 32 bit time interval that should elapse before a\n                 failed refresh should be retried.\n ```","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/soa.rs","byte_start":294971,"byte_end":294977,"line_start":195,"line_end":195,"column_start":12,"column_end":18},"name":"expire","qualname":"<SOA>::expire","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" ```text\n EXPIRE          A 32 bit time value that specifies the upper limit on\n                 the time interval that can elapse before the zone is no\n                 longer authoritative.\n ```","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/soa.rs","byte_start":295335,"byte_end":295342,"line_start":207,"line_end":207,"column_start":12,"column_end":19},"name":"minimum","qualname":"<SOA>::minimum","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" ```text\n MINIMUM         The unsigned 32 bit minimum TTL field that should be\n                 exported with any RR from this zone.\n ```","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":880},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/soa.rs","byte_start":295438,"byte_end":295442,"line_start":213,"line_end":213,"column_start":8,"column_end":12},"name":"read","qualname":"::rr::rdata::soa::read","value":"fn (decoder: &mut BinDecoder) -> ProtoResult<SOA>","parent":null,"children":[],"decl_id":null,"docs":" Read the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":881},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/soa.rs","byte_start":296668,"byte_end":296672,"line_start":243,"line_end":243,"column_start":8,"column_end":12},"name":"emit","qualname":"::rr::rdata::soa::emit","value":"fn (encoder: &mut BinEncoder, soa: &SOA) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" [RFC 4034](https://tools.ietf.org/html/rfc4034#section-6), DNSSEC Resource Records, March 2005","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":882},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/srv.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"srv","qualname":"::rr::rdata::srv","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/srv.rs","parent":null,"children":[{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":3148},{"krate":0,"index":3165},{"krate":0,"index":3161},{"krate":0,"index":3162},{"krate":0,"index":3158},{"krate":0,"index":3159},{"krate":0,"index":3155},{"krate":0,"index":3153},{"krate":0,"index":886},{"krate":0,"index":892},{"krate":0,"index":893}],"decl_id":null,"docs":" service records for identify port mapping for specific services on a host\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3148},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/srv.rs","byte_start":300988,"byte_end":300991,"line_start":84,"line_end":84,"column_start":12,"column_end":15},"name":"SRV","qualname":"::rr::rdata::srv::SRV","value":"SRV {  }","parent":null,"children":[{"krate":0,"index":3149},{"krate":0,"index":3150},{"krate":0,"index":3151},{"krate":0,"index":3152}],"decl_id":null,"docs":" [RFC 2782, DNS SRV RR, February 2000](https://tools.ietf.org/html/rfc2782)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/srv.rs","byte_start":301652,"byte_end":301655,"line_start":105,"line_end":105,"column_start":12,"column_end":15},"name":"new","qualname":"<SRV>::new","value":"fn (priority: u16, weight: u16, port: u16, target: Name) -> SRV","parent":null,"children":[],"decl_id":null,"docs":" Creates a new SRV record data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/srv.rs","byte_start":302232,"byte_end":302240,"line_start":122,"line_end":122,"column_start":12,"column_end":20},"name":"priority","qualname":"<SRV>::priority","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" ```text\n  Priority\n The priority of this target host.  A client MUST attempt to\n contact the target host with the lowest-numbered priority it can\n reach; target hosts with the same priority SHOULD be tried in an\n order defined by the weight field.  The range is 0-65535.  This\n is a 16 bit unsigned integer in network byte order.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/srv.rs","byte_start":304372,"byte_end":304378,"line_start":163,"line_end":163,"column_start":12,"column_end":18},"name":"weight","qualname":"<SRV>::weight","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" ```text\n  Weight\n A server selection mechanism.  The weight field specifies a\n relative weight for entries with the same priority. Larger\n weights SHOULD be given a proportionately higher probability of\n being selected. The range of this number is 0-65535.  This is a\n 16 bit unsigned integer in network byte order.  Domain\n administrators SHOULD use Weight 0 when there isn't any server\n selection to do, to make the RR easier to read for humans (less\n noisy).  In the presence of records containing weights greater\n than 0, records with weight 0 should have a very small chance of\n being selected.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":890},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/srv.rs","byte_start":304699,"byte_end":304703,"line_start":174,"line_end":174,"column_start":12,"column_end":16},"name":"port","qualname":"<SRV>::port","value":"fn (&self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" ```text\n  Port\n The port on this target host of this service.  The range is 0-\n 65535.  This is a 16 bit unsigned integer in network byte order.\n This is often as specified in Assigned Numbers but need not be.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/srv.rs","byte_start":305332,"byte_end":305338,"line_start":190,"line_end":190,"column_start":12,"column_end":18},"name":"target","qualname":"<SRV>::target","value":"fn (&self) -> &Name","parent":null,"children":[],"decl_id":null,"docs":" ```text\n  Target\n The domain name of the target host.  There MUST be one or more\n address records for this name, the name MUST NOT be an alias (in\n the sense of RFC 1034 or RFC 2181).  Implementors are urged, but\n not required, to return the address record(s) in the Additional\n Data section.  Unless and until permitted by future standards\n action, name compression is not to be used for this field.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":892},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/srv.rs","byte_start":305436,"byte_end":305440,"line_start":196,"line_end":196,"column_start":8,"column_end":12},"name":"read","qualname":"::rr::rdata::srv::read","value":"fn (decoder: &mut BinDecoder) -> ProtoResult<SRV>","parent":null,"children":[],"decl_id":null,"docs":" Read the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":893},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/srv.rs","byte_start":306530,"byte_end":306534,"line_start":224,"line_end":224,"column_start":8,"column_end":12},"name":"emit","qualname":"::rr::rdata::srv::emit","value":"fn (encoder: &mut BinEncoder, srv: &SRV) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" [RFC 4034](https://tools.ietf.org/html/rfc4034#section-6), DNSSEC Resource Records, March 2005","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":894},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/sshfp.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sshfp","qualname":"::rr::rdata::sshfp","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/sshfp.rs","parent":null,"children":[{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":3167},{"krate":0,"index":3183},{"krate":0,"index":3179},{"krate":0,"index":3180},{"krate":0,"index":3176},{"krate":0,"index":3177},{"krate":0,"index":3173},{"krate":0,"index":3171},{"krate":0,"index":897},{"krate":0,"index":3185},{"krate":0,"index":3212},{"krate":0,"index":3208},{"krate":0,"index":3209},{"krate":0,"index":3205},{"krate":0,"index":3206},{"krate":0,"index":3202},{"krate":0,"index":3200},{"krate":0,"index":3199},{"krate":0,"index":902},{"krate":0,"index":904},{"krate":0,"index":3214},{"krate":0,"index":3237},{"krate":0,"index":3233},{"krate":0,"index":3234},{"krate":0,"index":3230},{"krate":0,"index":3231},{"krate":0,"index":3227},{"krate":0,"index":3225},{"krate":0,"index":3224},{"krate":0,"index":906},{"krate":0,"index":908},{"krate":0,"index":910},{"krate":0,"index":913}],"decl_id":null,"docs":" SSHFP records for SSH public key fingerprints\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3167},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/sshfp.rs","byte_start":309246,"byte_end":309251,"line_start":40,"line_end":40,"column_start":12,"column_end":17},"name":"SSHFP","qualname":"::rr::rdata::sshfp::SSHFP","value":"SSHFP {  }","parent":null,"children":[{"krate":0,"index":3168},{"krate":0,"index":3169},{"krate":0,"index":3170}],"decl_id":null,"docs":" [RFC 4255](https://tools.ietf.org/html/rfc4255#section-3.1)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/sshfp.rs","byte_start":309624,"byte_end":309627,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"new","qualname":"<SSHFP>::new","value":"fn (algorithm: Algorithm, fingerprint_type: FingerprintType, fingerprint: Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new SSHFP record data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":899},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/sshfp.rs","byte_start":309908,"byte_end":309917,"line_start":67,"line_end":67,"column_start":12,"column_end":21},"name":"algorithm","qualname":"<SSHFP>::algorithm","value":"fn (&self) -> Algorithm","parent":null,"children":[],"decl_id":null,"docs":" The SSH public key algorithm.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":900},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/sshfp.rs","byte_start":310018,"byte_end":310034,"line_start":72,"line_end":72,"column_start":12,"column_end":28},"name":"fingerprint_type","qualname":"<SSHFP>::fingerprint_type","value":"fn (&self) -> FingerprintType","parent":null,"children":[],"decl_id":null,"docs":" The fingerprint type to use.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":901},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/sshfp.rs","byte_start":310154,"byte_end":310165,"line_start":77,"line_end":77,"column_start":12,"column_end":23},"name":"fingerprint","qualname":"<SSHFP>::fingerprint","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" The fingerprint of the public key.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3186},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/sshfp.rs","byte_start":310897,"byte_end":310905,"line_start":103,"line_end":103,"column_start":5,"column_end":13},"name":"Reserved","qualname":"::rr::rdata::sshfp::Algorithm::Reserved","value":"Algorithm::Reserved","parent":{"krate":0,"index":3185},"children":[],"decl_id":null,"docs":" Reserved value\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3188},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/sshfp.rs","byte_start":310924,"byte_end":310927,"line_start":106,"line_end":106,"column_start":5,"column_end":8},"name":"RSA","qualname":"::rr::rdata::sshfp::Algorithm::RSA","value":"Algorithm::RSA","parent":{"krate":0,"index":3185},"children":[],"decl_id":null,"docs":" RSA\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3190},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/sshfp.rs","byte_start":310950,"byte_end":310953,"line_start":109,"line_end":109,"column_start":5,"column_end":8},"name":"DSA","qualname":"::rr::rdata::sshfp::Algorithm::DSA","value":"Algorithm::DSA","parent":{"krate":0,"index":3185},"children":[],"decl_id":null,"docs":" DSS/DSA\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3192},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/sshfp.rs","byte_start":310974,"byte_end":310979,"line_start":112,"line_end":112,"column_start":5,"column_end":10},"name":"ECDSA","qualname":"::rr::rdata::sshfp::Algorithm::ECDSA","value":"Algorithm::ECDSA","parent":{"krate":0,"index":3185},"children":[],"decl_id":null,"docs":" ECDSA\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3194},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/sshfp.rs","byte_start":311002,"byte_end":311009,"line_start":115,"line_end":115,"column_start":5,"column_end":12},"name":"Ed25519","qualname":"::rr::rdata::sshfp::Algorithm::Ed25519","value":"Algorithm::Ed25519","parent":{"krate":0,"index":3185},"children":[],"decl_id":null,"docs":" Ed25519\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3196},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/sshfp.rs","byte_start":311041,"byte_end":311051,"line_start":118,"line_end":118,"column_start":5,"column_end":15},"name":"Unassigned","qualname":"::rr::rdata::sshfp::Algorithm::Unassigned","value":"Algorithm::Unassigned(u8)","parent":{"krate":0,"index":3185},"children":[],"decl_id":null,"docs":" Unassigned value\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3185},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/sshfp.rs","byte_start":310858,"byte_end":310867,"line_start":101,"line_end":101,"column_start":10,"column_end":19},"name":"Algorithm","qualname":"::rr::rdata::sshfp::Algorithm","value":"Algorithm::{Reserved, RSA, DSA, ECDSA, Ed25519, Unassigned}","parent":null,"children":[{"krate":0,"index":3186},{"krate":0,"index":3188},{"krate":0,"index":3190},{"krate":0,"index":3192},{"krate":0,"index":3194},{"krate":0,"index":3196}],"decl_id":null,"docs":" ```text\n 3.1.1.  Algorithm Number Specification","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3215},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/sshfp.rs","byte_start":312588,"byte_end":312596,"line_start":171,"line_end":171,"column_start":5,"column_end":13},"name":"Reserved","qualname":"::rr::rdata::sshfp::FingerprintType::Reserved","value":"FingerprintType::Reserved","parent":{"krate":0,"index":3214},"children":[],"decl_id":null,"docs":" Reserved value\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3217},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/sshfp.rs","byte_start":312617,"byte_end":312621,"line_start":174,"line_end":174,"column_start":5,"column_end":9},"name":"SHA1","qualname":"::rr::rdata::sshfp::FingerprintType::SHA1","value":"FingerprintType::SHA1","parent":{"krate":0,"index":3214},"children":[],"decl_id":null,"docs":" SHA-1\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3219},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/sshfp.rs","byte_start":312644,"byte_end":312650,"line_start":177,"line_end":177,"column_start":5,"column_end":11},"name":"SHA256","qualname":"::rr::rdata::sshfp::FingerprintType::SHA256","value":"FingerprintType::SHA256","parent":{"krate":0,"index":3214},"children":[],"decl_id":null,"docs":" SHA-256\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3221},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/sshfp.rs","byte_start":312682,"byte_end":312692,"line_start":180,"line_end":180,"column_start":5,"column_end":15},"name":"Unassigned","qualname":"::rr::rdata::sshfp::FingerprintType::Unassigned","value":"FingerprintType::Unassigned(u8)","parent":{"krate":0,"index":3214},"children":[],"decl_id":null,"docs":" Unassigned value\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3214},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/sshfp.rs","byte_start":312543,"byte_end":312558,"line_start":169,"line_end":169,"column_start":10,"column_end":25},"name":"FingerprintType","qualname":"::rr::rdata::sshfp::FingerprintType","value":"FingerprintType::{Reserved, SHA1, SHA256, Unassigned}","parent":null,"children":[{"krate":0,"index":3215},{"krate":0,"index":3217},{"krate":0,"index":3219},{"krate":0,"index":3221}],"decl_id":null,"docs":" ```text\n 3.1.2.  Fingerprint Type Specification","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":910},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/sshfp.rs","byte_start":313351,"byte_end":313355,"line_start":206,"line_end":206,"column_start":8,"column_end":12},"name":"read","qualname":"::rr::rdata::sshfp::read","value":"fn (decoder: &mut BinDecoder, rdata_length: Restrict<u16>) -> ProtoResult<SSHFP>","parent":null,"children":[],"decl_id":null,"docs":" Read the RData from the given decoder.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":913},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/sshfp.rs","byte_start":313937,"byte_end":313941,"line_start":219,"line_end":219,"column_start":8,"column_end":12},"name":"emit","qualname":"::rr::rdata::sshfp::emit","value":"fn (encoder: &mut BinEncoder, sshfp: &SSHFP) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Write the RData using the given encoder.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":914},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/tlsa.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tlsa","qualname":"::rr::rdata::tlsa","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/tlsa.rs","parent":null,"children":[{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":3239},{"krate":0,"index":3256},{"krate":0,"index":3252},{"krate":0,"index":3253},{"krate":0,"index":3249},{"krate":0,"index":3250},{"krate":0,"index":3246},{"krate":0,"index":3244},{"krate":0,"index":3258},{"krate":0,"index":3285},{"krate":0,"index":3281},{"krate":0,"index":3282},{"krate":0,"index":3278},{"krate":0,"index":3279},{"krate":0,"index":3275},{"krate":0,"index":3273},{"krate":0,"index":3272},{"krate":0,"index":917},{"krate":0,"index":919},{"krate":0,"index":3287},{"krate":0,"index":3310},{"krate":0,"index":3306},{"krate":0,"index":3307},{"krate":0,"index":3303},{"krate":0,"index":3304},{"krate":0,"index":3300},{"krate":0,"index":3298},{"krate":0,"index":3297},{"krate":0,"index":921},{"krate":0,"index":923},{"krate":0,"index":3312},{"krate":0,"index":3337},{"krate":0,"index":3333},{"krate":0,"index":3334},{"krate":0,"index":3330},{"krate":0,"index":3331},{"krate":0,"index":3327},{"krate":0,"index":3325},{"krate":0,"index":3324},{"krate":0,"index":925},{"krate":0,"index":927},{"krate":0,"index":929},{"krate":0,"index":935},{"krate":0,"index":938}],"decl_id":null,"docs":" TLSA records for storing TLS certificate validation information\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3239},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/tlsa.rs","byte_start":318769,"byte_end":318773,"line_start":33,"line_end":33,"column_start":12,"column_end":16},"name":"TLSA","qualname":"::rr::rdata::tlsa::TLSA","value":"TLSA {  }","parent":null,"children":[{"krate":0,"index":3240},{"krate":0,"index":3241},{"krate":0,"index":3242},{"krate":0,"index":3243}],"decl_id":null,"docs":" [RFC 6698, DNS-Based Authentication for TLS](https://tools.ietf.org/html/rfc6698#section-2.1)","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3259},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/tlsa.rs","byte_start":320895,"byte_end":320897,"line_start":82,"line_end":82,"column_start":5,"column_end":7},"name":"CA","qualname":"::rr::rdata::tlsa::CertUsage::CA","value":"CertUsage::CA","parent":{"krate":0,"index":3258},"children":[],"decl_id":null,"docs":" ```text\n       0 -- Certificate usage 0 is used to specify a CA certificate, or\n       the public key of such a certificate, that MUST be found in any of\n       the PKIX certification paths for the end entity certificate given\n       by the server in TLS.  This certificate usage is sometimes\n       referred to as \"CA constraint\" because it limits which CA can be\n       used to issue certificates for a given service on a host.  The\n       presented certificate MUST pass PKIX certification path\n       validation, and a CA certificate that matches the TLSA record MUST\n       be included as part of a valid certification path.  Because this\n       certificate usage allows both trust anchors and CA certificates,\n       the certificate might or might not have the basicConstraints\n       extension present.\n ```\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3261},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/tlsa.rs","byte_start":321512,"byte_end":321519,"line_start":94,"line_end":94,"column_start":5,"column_end":12},"name":"Service","qualname":"::rr::rdata::tlsa::CertUsage::Service","value":"CertUsage::Service","parent":{"krate":0,"index":3258},"children":[],"decl_id":null,"docs":" ```text\n       1 -- Certificate usage 1 is used to specify an end entity\n       certificate, or the public key of such a certificate, that MUST be\n       matched with the end entity certificate given by the server in\n       TLS.  This certificate usage is sometimes referred to as \"service\n       certificate constraint\" because it limits which end entity\n       certificate can be used by a given service on a host.  The target\n       certificate MUST pass PKIX certification path validation and MUST\n       match the TLSA record.\n ```\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3263},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/tlsa.rs","byte_start":322400,"byte_end":322411,"line_start":109,"line_end":109,"column_start":5,"column_end":16},"name":"TrustAnchor","qualname":"::rr::rdata::tlsa::CertUsage::TrustAnchor","value":"CertUsage::TrustAnchor","parent":{"krate":0,"index":3258},"children":[],"decl_id":null,"docs":" ```text\n       2 -- Certificate usage 2 is used to specify a certificate, or the\n       public key of such a certificate, that MUST be used as the trust\n       anchor when validating the end entity certificate given by the\n       server in TLS.  This certificate usage is sometimes referred to as\n       \"trust anchor assertion\" and allows a domain name administrator to\n       specify a new trust anchor -- for example, if the domain issues\n       its own certificates under its own CA that is not expected to be\n       in the end users' collection of trust anchors.  The target\n       certificate MUST pass PKIX certification path validation, with any\n       certificate matching the TLSA record considered to be a trust\n       anchor for this certification path validation.\n ```\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3265},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/tlsa.rs","byte_start":323217,"byte_end":323229,"line_start":123,"line_end":123,"column_start":5,"column_end":17},"name":"DomainIssued","qualname":"::rr::rdata::tlsa::CertUsage::DomainIssued","value":"CertUsage::DomainIssued","parent":{"krate":0,"index":3258},"children":[],"decl_id":null,"docs":" ```text\n       3 -- Certificate usage 3 is used to specify a certificate, or the\n       public key of such a certificate, that MUST match the end entity\n       certificate given by the server in TLS.  This certificate usage is\n       sometimes referred to as \"domain-issued certificate\" because it\n       allows for a domain name administrator to issue certificates for a\n       domain without involving a third-party CA.  The target certificate\n       MUST match the TLSA record.  The difference between certificate\n       usage 1 and certificate usage 3 is that certificate usage 1\n       requires that the certificate pass PKIX validation, but PKIX\n       validation is not tested for certificate usage 3.\n ```\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3267},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/tlsa.rs","byte_start":323290,"byte_end":323300,"line_start":126,"line_end":126,"column_start":5,"column_end":15},"name":"Unassigned","qualname":"::rr::rdata::tlsa::CertUsage::Unassigned","value":"CertUsage::Unassigned(u8)","parent":{"krate":0,"index":3258},"children":[],"decl_id":null,"docs":" Unassigned at the time of this implementation\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3270},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/tlsa.rs","byte_start":323333,"byte_end":323340,"line_start":129,"line_end":129,"column_start":5,"column_end":12},"name":"Private","qualname":"::rr::rdata::tlsa::CertUsage::Private","value":"CertUsage::Private","parent":{"krate":0,"index":3258},"children":[],"decl_id":null,"docs":" Private usage\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3258},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/tlsa.rs","byte_start":319965,"byte_end":319974,"line_start":67,"line_end":67,"column_start":10,"column_end":19},"name":"CertUsage","qualname":"::rr::rdata::tlsa::CertUsage","value":"CertUsage::{CA, Service, TrustAnchor, DomainIssued, Unassigned, Private}","parent":null,"children":[{"krate":0,"index":3259},{"krate":0,"index":3261},{"krate":0,"index":3263},{"krate":0,"index":3265},{"krate":0,"index":3267},{"krate":0,"index":3270}],"decl_id":null,"docs":" [RFC 6698, DNS-Based Authentication for TLS](https://tools.ietf.org/html/rfc6698#section-2.1.1)","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3288},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/tlsa.rs","byte_start":324872,"byte_end":324876,"line_start":179,"line_end":179,"column_start":5,"column_end":9},"name":"Full","qualname":"::rr::rdata::tlsa::Selector::Full","value":"Selector::Full","parent":{"krate":0,"index":3287},"children":[],"decl_id":null,"docs":" Full certificate: the Certificate binary structure as defined in [RFC5280]\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3290},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/tlsa.rs","byte_start":324966,"byte_end":324970,"line_start":182,"line_end":182,"column_start":5,"column_end":9},"name":"Spki","qualname":"::rr::rdata::tlsa::Selector::Spki","value":"Selector::Spki","parent":{"krate":0,"index":3287},"children":[],"decl_id":null,"docs":" SubjectPublicKeyInfo: DER-encoded binary structure as defined in [RFC5280]\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3292},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/tlsa.rs","byte_start":325024,"byte_end":325034,"line_start":185,"line_end":185,"column_start":5,"column_end":15},"name":"Unassigned","qualname":"::rr::rdata::tlsa::Selector::Unassigned","value":"Selector::Unassigned(u8)","parent":{"krate":0,"index":3287},"children":[],"decl_id":null,"docs":" Unassigned at the time of this writing\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3295},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/tlsa.rs","byte_start":325067,"byte_end":325074,"line_start":188,"line_end":188,"column_start":5,"column_end":12},"name":"Private","qualname":"::rr::rdata::tlsa::Selector::Private","value":"Selector::Private","parent":{"krate":0,"index":3287},"children":[],"decl_id":null,"docs":" Private usage\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3287},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/tlsa.rs","byte_start":324774,"byte_end":324782,"line_start":177,"line_end":177,"column_start":10,"column_end":18},"name":"Selector","qualname":"::rr::rdata::tlsa::Selector","value":"Selector::{Full, Spki, Unassigned, Private}","parent":null,"children":[{"krate":0,"index":3288},{"krate":0,"index":3290},{"krate":0,"index":3292},{"krate":0,"index":3295}],"decl_id":null,"docs":" [RFC 6698, DNS-Based Authentication for TLS](https://tools.ietf.org/html/rfc6698#section-2.1.1)","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3313},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/tlsa.rs","byte_start":326463,"byte_end":326466,"line_start":237,"line_end":237,"column_start":5,"column_end":8},"name":"Raw","qualname":"::rr::rdata::tlsa::Matching::Raw","value":"Matching::Raw","parent":{"krate":0,"index":3312},"children":[],"decl_id":null,"docs":" Exact match on selected content\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3315},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/tlsa.rs","byte_start":326524,"byte_end":326530,"line_start":240,"line_end":240,"column_start":5,"column_end":11},"name":"Sha256","qualname":"::rr::rdata::tlsa::Matching::Sha256","value":"Matching::Sha256","parent":{"krate":0,"index":3312},"children":[],"decl_id":null,"docs":" SHA-256 hash of selected content [RFC6234]\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3317},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/tlsa.rs","byte_start":326588,"byte_end":326594,"line_start":243,"line_end":243,"column_start":5,"column_end":11},"name":"Sha512","qualname":"::rr::rdata::tlsa::Matching::Sha512","value":"Matching::Sha512","parent":{"krate":0,"index":3312},"children":[],"decl_id":null,"docs":" SHA-512 hash of selected content [RFC6234]\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3319},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/tlsa.rs","byte_start":326648,"byte_end":326658,"line_start":246,"line_end":246,"column_start":5,"column_end":15},"name":"Unassigned","qualname":"::rr::rdata::tlsa::Matching::Unassigned","value":"Matching::Unassigned(u8)","parent":{"krate":0,"index":3312},"children":[],"decl_id":null,"docs":" Unassigned at the time of this writing\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3322},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/tlsa.rs","byte_start":326691,"byte_end":326698,"line_start":249,"line_end":249,"column_start":5,"column_end":12},"name":"Private","qualname":"::rr::rdata::tlsa::Matching::Private","value":"Matching::Private","parent":{"krate":0,"index":3312},"children":[],"decl_id":null,"docs":" Private usage\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3312},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/tlsa.rs","byte_start":326408,"byte_end":326416,"line_start":235,"line_end":235,"column_start":10,"column_end":18},"name":"Matching","qualname":"::rr::rdata::tlsa::Matching","value":"Matching::{Raw, Sha256, Sha512, Unassigned, Private}","parent":null,"children":[{"krate":0,"index":3313},{"krate":0,"index":3315},{"krate":0,"index":3317},{"krate":0,"index":3319},{"krate":0,"index":3322}],"decl_id":null,"docs":" [RFC 6698, DNS-Based Authentication for TLS](https://tools.ietf.org/html/rfc6698#section-2.1.3)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/tlsa.rs","byte_start":328088,"byte_end":328091,"line_start":295,"line_end":295,"column_start":12,"column_end":15},"name":"new","qualname":"<TLSA>::new","value":"fn (cert_usage: CertUsage, selector: Selector, matching: Matching, cert_data: Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new TLSA","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/tlsa.rs","byte_start":328475,"byte_end":328485,"line_start":310,"line_end":310,"column_start":12,"column_end":22},"name":"cert_usage","qualname":"<TLSA>::cert_usage","value":"fn (&self) -> CertUsage","parent":null,"children":[],"decl_id":null,"docs":" Specifies the provided association that will be used to match the certificate presented in the TLS handshake\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":932},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/tlsa.rs","byte_start":328671,"byte_end":328679,"line_start":315,"line_end":315,"column_start":12,"column_end":20},"name":"selector","qualname":"<TLSA>::selector","value":"fn (&self) -> Selector","parent":null,"children":[],"decl_id":null,"docs":" Specifies which part of the TLS certificate presented by the server will be matched against the association data\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":933},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/tlsa.rs","byte_start":328804,"byte_end":328812,"line_start":320,"line_end":320,"column_start":12,"column_end":20},"name":"matching","qualname":"<TLSA>::matching","value":"fn (&self) -> Matching","parent":null,"children":[],"decl_id":null,"docs":" Specifies how the certificate association is presented\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":934},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/tlsa.rs","byte_start":328958,"byte_end":328967,"line_start":325,"line_end":325,"column_start":12,"column_end":21},"name":"cert_data","qualname":"<TLSA>::cert_data","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Binary data for validating the cert, see other members to understand format\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":935},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/tlsa.rs","byte_start":329747,"byte_end":329751,"line_start":343,"line_end":343,"column_start":8,"column_end":12},"name":"read","qualname":"::rr::rdata::tlsa::read","value":"fn (decoder: &mut BinDecoder, rdata_length: Restrict<u16>) -> ProtoResult<TLSA>","parent":null,"children":[],"decl_id":null,"docs":" Read the RData from the given Decoder","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":938},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/tlsa.rs","byte_start":330582,"byte_end":330586,"line_start":365,"line_end":365,"column_start":8,"column_end":12},"name":"emit","qualname":"::rr::rdata::tlsa::emit","value":"fn (encoder: &mut BinEncoder, tlsa: &TLSA) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Write the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":939},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/txt.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"txt","qualname":"::rr::rdata::txt","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/txt.rs","parent":null,"children":[{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":3339},{"krate":0,"index":3353},{"krate":0,"index":3349},{"krate":0,"index":3350},{"krate":0,"index":3346},{"krate":0,"index":3347},{"krate":0,"index":3343},{"krate":0,"index":3341},{"krate":0,"index":943},{"krate":0,"index":948},{"krate":0,"index":950}],"decl_id":null,"docs":" text records for storing arbitrary data\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3339},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/txt.rs","byte_start":335769,"byte_end":335772,"line_start":38,"line_end":38,"column_start":12,"column_end":15},"name":"TXT","qualname":"::rr::rdata::txt::TXT","value":"TXT {  }","parent":null,"children":[{"krate":0,"index":3340}],"decl_id":null,"docs":" [RFC 1035, DOMAIN NAMES - IMPLEMENTATION AND SPECIFICATION, November 1987](https://tools.ietf.org/html/rfc1035)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/txt.rs","byte_start":336049,"byte_end":336052,"line_start":52,"line_end":52,"column_start":12,"column_end":15},"name":"new","qualname":"<TXT>::new","value":"fn (txt_data: Vec<String>) -> TXT","parent":null,"children":[],"decl_id":null,"docs":" Creates a new TXT record data.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":946},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/txt.rs","byte_start":336413,"byte_end":336421,"line_start":65,"line_end":65,"column_start":12,"column_end":20},"name":"txt_data","qualname":"<TXT>::txt_data","value":"fn (&self) -> &[Box<[u8]>]","parent":null,"children":[],"decl_id":null,"docs":" ```text\n TXT-DATA        One or more <character-string>s.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":947},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/txt.rs","byte_start":336548,"byte_end":336552,"line_start":70,"line_end":70,"column_start":12,"column_end":16},"name":"iter","qualname":"<TXT>::iter","value":"fn (&self) -> Iter<Box<[u8]>>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the arrays in the txt data\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":948},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/txt.rs","byte_start":336668,"byte_end":336672,"line_start":76,"line_end":76,"column_start":8,"column_end":12},"name":"read","qualname":"::rr::rdata::txt::read","value":"fn (decoder: &mut BinDecoder, rdata_length: Restrict<u16>) -> ProtoResult<TXT>","parent":null,"children":[],"decl_id":null,"docs":" Read the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":950},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/txt.rs","byte_start":337355,"byte_end":337359,"line_start":94,"line_end":94,"column_start":8,"column_end":12},"name":"emit","qualname":"::rr::rdata::txt::emit","value":"fn (encoder: &mut BinEncoder, txt: &TXT) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Write the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":962},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_data.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"record_data","qualname":"::rr::record_data","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_data.rs","parent":null,"children":[{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":3355},{"krate":0,"index":3478},{"krate":0,"index":3421},{"krate":0,"index":3417},{"krate":0,"index":3418},{"krate":0,"index":3415},{"krate":0,"index":3412},{"krate":0,"index":3413},{"krate":0,"index":989},{"krate":0,"index":1007},{"krate":0,"index":1009}],"decl_id":null,"docs":" record data enum variants\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3356},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_data.rs","byte_start":341112,"byte_end":341113,"line_start":81,"line_end":81,"column_start":5,"column_end":6},"name":"A","qualname":"::rr::record_data::RData::A","value":"RData::A(Ipv4Addr)","parent":{"krate":0,"index":3355},"children":[],"decl_id":null,"docs":" ```text\n -- RFC 1035 -- Domain Implementation and Specification    November 1987","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3359},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_data.rs","byte_start":341423,"byte_end":341427,"line_start":91,"line_end":91,"column_start":5,"column_end":9},"name":"AAAA","qualname":"::rr::record_data::RData::AAAA","value":"RData::AAAA(Ipv6Addr)","parent":{"krate":0,"index":3355},"children":[],"decl_id":null,"docs":" ```text\n -- RFC 1886 -- IPv6 DNS Extensions              December 1995","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3362},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_data.rs","byte_start":341825,"byte_end":341830,"line_start":106,"line_end":106,"column_start":5,"column_end":10},"name":"ANAME","qualname":"::rr::record_data::RData::ANAME","value":"RData::ANAME(Name)","parent":{"krate":0,"index":3355},"children":[],"decl_id":null,"docs":" ```text\n 2.  The ANAME resource record","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3365},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_data.rs","byte_start":343167,"byte_end":343170,"line_start":136,"line_end":136,"column_start":5,"column_end":8},"name":"CAA","qualname":"::rr::record_data::RData::CAA","value":"RData::CAA(CAA)","parent":{"krate":0,"index":3355},"children":[],"decl_id":null,"docs":" ```text\n -- RFC 6844          Certification Authority Authorization     January 2013","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3368},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_data.rs","byte_start":344684,"byte_end":344689,"line_start":169,"line_end":169,"column_start":5,"column_end":10},"name":"CNAME","qualname":"::rr::record_data::RData::CNAME","value":"RData::CNAME(Name)","parent":{"krate":0,"index":3355},"children":[],"decl_id":null,"docs":" ```text\n   3.3. Standard RRs","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3371},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_data.rs","byte_start":345697,"byte_end":345699,"line_start":194,"line_end":194,"column_start":5,"column_end":7},"name":"MX","qualname":"::rr::record_data::RData::MX","value":"RData::MX(MX)","parent":{"krate":0,"index":3355},"children":[],"decl_id":null,"docs":" ```text\n 3.3.9. MX RDATA format","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3374},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_data.rs","byte_start":352040,"byte_end":352045,"line_start":305,"line_end":305,"column_start":5,"column_end":10},"name":"NAPTR","qualname":"::rr::record_data::RData::NAPTR","value":"RData::NAPTR(NAPTR)","parent":{"krate":0,"index":3355},"children":[],"decl_id":null,"docs":" [RFC 3403 DDDS DNS Database, October 2002](https://tools.ietf.org/html/rfc3403#section-4)","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3377},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_data.rs","byte_start":352701,"byte_end":352705,"line_start":322,"line_end":322,"column_start":5,"column_end":9},"name":"NULL","qualname":"::rr::record_data::RData::NULL","value":"RData::NULL(NULL)","parent":{"krate":0,"index":3355},"children":[],"decl_id":null,"docs":" ```text\n 3.3.10. NULL RDATA format (EXPERIMENTAL)","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3380},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_data.rs","byte_start":353912,"byte_end":353914,"line_start":348,"line_end":348,"column_start":5,"column_end":7},"name":"NS","qualname":"::rr::record_data::RData::NS","value":"RData::NS(Name)","parent":{"krate":0,"index":3355},"children":[],"decl_id":null,"docs":" ```text\n 3.3.11. NS RDATA format","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3383},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_data.rs","byte_start":354207,"byte_end":354217,"line_start":357,"line_end":357,"column_start":5,"column_end":15},"name":"OPENPGPKEY","qualname":"::rr::record_data::RData::OPENPGPKEY","value":"RData::OPENPGPKEY(OPENPGPKEY)","parent":{"krate":0,"index":3355},"children":[],"decl_id":null,"docs":" [RFC 7929](https://tools.ietf.org/html/rfc7929#section-2.1)","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3386},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_data.rs","byte_start":356138,"byte_end":356141,"line_start":389,"line_end":389,"column_start":5,"column_end":8},"name":"OPT","qualname":"::rr::record_data::RData::OPT","value":"RData::OPT(OPT)","parent":{"krate":0,"index":3355},"children":[],"decl_id":null,"docs":" ```text\n RFC 6891                   EDNS(0) Extensions                 April 2013\n 6.1.2.  Wire Format","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3389},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_data.rs","byte_start":356947,"byte_end":356950,"line_start":409,"line_end":409,"column_start":5,"column_end":8},"name":"PTR","qualname":"::rr::record_data::RData::PTR","value":"RData::PTR(Name)","parent":{"krate":0,"index":3355},"children":[],"decl_id":null,"docs":" ```text\n 3.3.12. PTR RDATA format","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3392},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_data.rs","byte_start":360432,"byte_end":360435,"line_start":477,"line_end":477,"column_start":5,"column_end":8},"name":"SOA","qualname":"::rr::record_data::RData::SOA","value":"RData::SOA(SOA)","parent":{"krate":0,"index":3355},"children":[],"decl_id":null,"docs":" ```text\n 3.3.13. SOA RDATA format","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3395},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_data.rs","byte_start":360677,"byte_end":360680,"line_start":486,"line_end":486,"column_start":5,"column_end":8},"name":"SRV","qualname":"::rr::record_data::RData::SRV","value":"RData::SRV(SRV)","parent":{"krate":0,"index":3355},"children":[],"decl_id":null,"docs":" ```text\n RFC 2782                       DNS SRV RR                  February 2000","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3398},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_data.rs","byte_start":363336,"byte_end":363341,"line_start":548,"line_end":548,"column_start":5,"column_end":10},"name":"SSHFP","qualname":"::rr::record_data::RData::SSHFP","value":"RData::SSHFP(SSHFP)","parent":{"krate":0,"index":3355},"children":[],"decl_id":null,"docs":" [RFC 4255](https://tools.ietf.org/html/rfc4255#section-3.1)","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3401},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_data.rs","byte_start":364184,"byte_end":364188,"line_start":563,"line_end":563,"column_start":5,"column_end":9},"name":"TLSA","qualname":"::rr::record_data::RData::TLSA","value":"RData::TLSA(TLSA)","parent":{"krate":0,"index":3355},"children":[],"decl_id":null,"docs":" [RFC 6698, DNS-Based Authentication for TLS](https://tools.ietf.org/html/rfc6698#section-2.1)","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3404},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_data.rs","byte_start":364679,"byte_end":364682,"line_start":579,"line_end":579,"column_start":5,"column_end":8},"name":"TXT","qualname":"::rr::record_data::RData::TXT","value":"RData::TXT(TXT)","parent":{"krate":0,"index":3355},"children":[],"decl_id":null,"docs":" ```text\n 3.3.14. TXT RDATA format","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3407},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_data.rs","byte_start":365028,"byte_end":365035,"line_start":589,"line_end":589,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::rr::record_data::RData::Unknown","value":"RData::Unknown { code, rdata }","parent":{"krate":0,"index":3355},"children":[],"decl_id":null,"docs":" Unknown RecordData is for record types not supported by Trust-DNS\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3410},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_data.rs","byte_start":365221,"byte_end":365225,"line_start":597,"line_end":597,"column_start":5,"column_end":9},"name":"ZERO","qualname":"::rr::record_data::RData::ZERO","value":"RData::ZERO","parent":{"krate":0,"index":3355},"children":[],"decl_id":null,"docs":" This corresponds to a record type of 0, unspecified\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3355},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_data.rs","byte_start":340259,"byte_end":340264,"line_start":57,"line_end":57,"column_start":10,"column_end":15},"name":"RData","qualname":"::rr::record_data::RData","value":"RData::{A, AAAA, ANAME, CAA, CNAME, MX, NAPTR, NULL, NS, OPENPGPKEY, OPT, PTR, SOA, SRV, SSHFP, TLSA, TXT, Unknown, ZERO}","parent":null,"children":[{"krate":0,"index":3356},{"krate":0,"index":3359},{"krate":0,"index":3362},{"krate":0,"index":3365},{"krate":0,"index":3368},{"krate":0,"index":3371},{"krate":0,"index":3374},{"krate":0,"index":3377},{"krate":0,"index":3380},{"krate":0,"index":3383},{"krate":0,"index":3386},{"krate":0,"index":3389},{"krate":0,"index":3392},{"krate":0,"index":3395},{"krate":0,"index":3398},{"krate":0,"index":3401},{"krate":0,"index":3404},{"krate":0,"index":3407},{"krate":0,"index":3410}],"decl_id":null,"docs":" Record data enum variants","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":992},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_data.rs","byte_start":365621,"byte_end":365625,"line_start":613,"line_end":613,"column_start":12,"column_end":16},"name":"read","qualname":"<RData>::read","value":"fn (decoder: &mut BinDecoder, record_type: RecordType, rdata_length: Restrict<u16>) -> ProtoResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Read the RData from the given Decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":997},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_data.rs","byte_start":373179,"byte_end":373183,"line_start":788,"line_end":788,"column_start":12,"column_end":16},"name":"emit","qualname":"<RData>::emit","value":"fn (&self, encoder: &mut BinEncoder) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" [RFC 4034](https://tools.ietf.org/html/rfc4034#section-6), DNSSEC Resource Records, March 2005","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1005},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_data.rs","byte_start":375438,"byte_end":375452,"line_start":833,"line_end":833,"column_start":12,"column_end":26},"name":"to_record_type","qualname":"<RData>::to_record_type","value":"fn (&self) -> RecordType","parent":null,"children":[],"decl_id":null,"docs":" Converts this to a Recordtype\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1006},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_data.rs","byte_start":376680,"byte_end":376690,"line_start":860,"line_end":860,"column_start":12,"column_end":22},"name":"to_ip_addr","qualname":"<RData>::to_ip_addr","value":"fn (&self) -> Option<IpAddr>","parent":null,"children":[],"decl_id":null,"docs":" If this is an A or AAAA record type, then an IpAddr will be returned\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1011},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"record_type","qualname":"::rr::record_type","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","parent":null,"children":[{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":3480},{"krate":0,"index":3539},{"krate":0,"index":3535},{"krate":0,"index":3536},{"krate":0,"index":3532},{"krate":0,"index":3533},{"krate":0,"index":3529},{"krate":0,"index":3528},{"krate":0,"index":3526},{"krate":0,"index":1021},{"krate":0,"index":1026},{"krate":0,"index":1029},{"krate":0,"index":1031},{"krate":0,"index":1033},{"krate":0,"index":1036},{"krate":0,"index":1038},{"krate":0,"index":1040},{"krate":0,"index":1042},{"krate":0,"index":1044}],"decl_id":null,"docs":" record type definitions\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3481},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":387339,"byte_end":387340,"line_start":42,"line_end":42,"column_start":5,"column_end":6},"name":"A","qualname":"::rr::record_type::RecordType::A","value":"RecordType::A","parent":{"krate":0,"index":3480},"children":[],"decl_id":null,"docs":" RFC 1035[1] IPv4 Address record\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3483},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":387386,"byte_end":387390,"line_start":44,"line_end":44,"column_start":5,"column_end":9},"name":"AAAA","qualname":"::rr::record_type::RecordType::AAAA","value":"RecordType::AAAA","parent":{"krate":0,"index":3480},"children":[],"decl_id":null,"docs":" RFC 3596[2] IPv6 address record\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3485},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":387433,"byte_end":387438,"line_start":46,"line_end":46,"column_start":5,"column_end":10},"name":"ANAME","qualname":"::rr::record_type::RecordType::ANAME","value":"RecordType::ANAME","parent":{"krate":0,"index":3480},"children":[],"decl_id":null,"docs":" ANAME draft-ietf-dnsop-aname\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3487},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":387547,"byte_end":387550,"line_start":49,"line_end":49,"column_start":5,"column_end":8},"name":"ANY","qualname":"::rr::record_type::RecordType::ANY","value":"RecordType::ANY","parent":{"krate":0,"index":3480},"children":[],"decl_id":null,"docs":" RFC 1035[1] All cached records, aka ANY\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3489},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":387659,"byte_end":387663,"line_start":52,"line_end":52,"column_start":5,"column_end":9},"name":"AXFR","qualname":"::rr::record_type::RecordType::AXFR","value":"RecordType::AXFR","parent":{"krate":0,"index":3480},"children":[],"decl_id":null,"docs":" RFC 1035[1] Authoritative Zone Transfer\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3491},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":387724,"byte_end":387727,"line_start":54,"line_end":54,"column_start":5,"column_end":8},"name":"CAA","qualname":"::rr::record_type::RecordType::CAA","value":"RecordType::CAA","parent":{"krate":0,"index":3480},"children":[],"decl_id":null,"docs":" RFC 6844 Certification Authority Authorization\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3493},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":387829,"byte_end":387834,"line_start":57,"line_end":57,"column_start":5,"column_end":10},"name":"CNAME","qualname":"::rr::record_type::RecordType::CNAME","value":"RecordType::CNAME","parent":{"krate":0,"index":3480},"children":[],"decl_id":null,"docs":" RFC 1035[1] Canonical name record\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3495},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":388088,"byte_end":388092,"line_start":63,"line_end":63,"column_start":5,"column_end":9},"name":"IXFR","qualname":"::rr::record_type::RecordType::IXFR","value":"RecordType::IXFR","parent":{"krate":0,"index":3480},"children":[],"decl_id":null,"docs":" RFC 1996 Incremental Zone Transfer\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3497},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":388246,"byte_end":388248,"line_start":67,"line_end":67,"column_start":5,"column_end":7},"name":"MX","qualname":"::rr::record_type::RecordType::MX","value":"RecordType::MX","parent":{"krate":0,"index":3480},"children":[],"decl_id":null,"docs":" RFC 1035[1] Mail exchange record\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3499},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":388296,"byte_end":388301,"line_start":69,"line_end":69,"column_start":5,"column_end":10},"name":"NAPTR","qualname":"::rr::record_type::RecordType::NAPTR","value":"RecordType::NAPTR","parent":{"krate":0,"index":3480},"children":[],"decl_id":null,"docs":" RFC 3403 Naming Authority Pointer\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3501},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":388346,"byte_end":388348,"line_start":71,"line_end":71,"column_start":5,"column_end":7},"name":"NS","qualname":"::rr::record_type::RecordType::NS","value":"RecordType::NS","parent":{"krate":0,"index":3480},"children":[],"decl_id":null,"docs":" RFC 1035[1] Name server record\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3503},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":388406,"byte_end":388410,"line_start":73,"line_end":73,"column_start":5,"column_end":9},"name":"NULL","qualname":"::rr::record_type::RecordType::NULL","value":"RecordType::NULL","parent":{"krate":0,"index":3480},"children":[],"decl_id":null,"docs":" RFC 1035[1] Null server record, for testing\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3505},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":388452,"byte_end":388462,"line_start":75,"line_end":75,"column_start":5,"column_end":15},"name":"OPENPGPKEY","qualname":"::rr::record_type::RecordType::OPENPGPKEY","value":"RecordType::OPENPGPKEY","parent":{"krate":0,"index":3480},"children":[],"decl_id":null,"docs":" RFC 7929\tOpenPGP public key\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3507},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":388492,"byte_end":388495,"line_start":77,"line_end":77,"column_start":5,"column_end":8},"name":"OPT","qualname":"::rr::record_type::RecordType::OPT","value":"RecordType::OPT","parent":{"krate":0,"index":3480},"children":[],"decl_id":null,"docs":" RFC 6891\tOption\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3509},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":388536,"byte_end":388539,"line_start":79,"line_end":79,"column_start":5,"column_end":8},"name":"PTR","qualname":"::rr::record_type::RecordType::PTR","value":"RecordType::PTR","parent":{"krate":0,"index":3480},"children":[],"decl_id":null,"docs":" RFC 1035[1] Pointer record\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3511},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":388673,"byte_end":388676,"line_start":82,"line_end":82,"column_start":5,"column_end":8},"name":"SOA","qualname":"::rr::record_type::RecordType::SOA","value":"RecordType::SOA","parent":{"krate":0,"index":3480},"children":[],"decl_id":null,"docs":" RFC 1035[1] and RFC 2308[9]\tStart of [a zone of] authority record\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3513},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":388715,"byte_end":388718,"line_start":84,"line_end":84,"column_start":5,"column_end":8},"name":"SRV","qualname":"::rr::record_type::RecordType::SRV","value":"RecordType::SRV","parent":{"krate":0,"index":3480},"children":[],"decl_id":null,"docs":" RFC 2782 Service locator\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3515},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":388768,"byte_end":388773,"line_start":86,"line_end":86,"column_start":5,"column_end":10},"name":"SSHFP","qualname":"::rr::record_type::RecordType::SSHFP","value":"RecordType::SSHFP","parent":{"krate":0,"index":3480},"children":[],"decl_id":null,"docs":" RFC 4255 SSH Public Key Fingerprint\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3517},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":388937,"byte_end":388941,"line_start":90,"line_end":90,"column_start":5,"column_end":9},"name":"TLSA","qualname":"::rr::record_type::RecordType::TLSA","value":"RecordType::TLSA","parent":{"krate":0,"index":3480},"children":[],"decl_id":null,"docs":" RFC 6698 TLSA certificate association\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3519},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":389037,"byte_end":389040,"line_start":93,"line_end":93,"column_start":5,"column_end":8},"name":"TXT","qualname":"::rr::record_type::RecordType::TXT","value":"RecordType::TXT","parent":{"krate":0,"index":3480},"children":[],"decl_id":null,"docs":" RFC 1035[1] Text record\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3521},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":389335,"byte_end":389342,"line_start":103,"line_end":103,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::rr::record_type::RecordType::Unknown","value":"RecordType::Unknown(u16)","parent":{"krate":0,"index":3480},"children":[],"decl_id":null,"docs":" Unknown Record type, or unsupported\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3524},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":389414,"byte_end":389418,"line_start":106,"line_end":106,"column_start":5,"column_end":9},"name":"ZERO","qualname":"::rr::record_type::RecordType::ZERO","value":"RecordType::ZERO","parent":{"krate":0,"index":3480},"children":[],"decl_id":null,"docs":" This corresponds to a record type of 0, unspecified\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3480},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":387282,"byte_end":387292,"line_start":40,"line_end":40,"column_start":10,"column_end":20},"name":"RecordType","qualname":"::rr::record_type::RecordType","value":"RecordType::{A, AAAA, ANAME, ANY, AXFR, CAA, CNAME, IXFR, MX, NAPTR, NS, NULL, OPENPGPKEY, OPT, PTR, SOA, SRV, SSHFP, TLSA, TXT, Unknown, ZERO}","parent":null,"children":[{"krate":0,"index":3481},{"krate":0,"index":3483},{"krate":0,"index":3485},{"krate":0,"index":3487},{"krate":0,"index":3489},{"krate":0,"index":3491},{"krate":0,"index":3493},{"krate":0,"index":3495},{"krate":0,"index":3497},{"krate":0,"index":3499},{"krate":0,"index":3501},{"krate":0,"index":3503},{"krate":0,"index":3505},{"krate":0,"index":3507},{"krate":0,"index":3509},{"krate":0,"index":3511},{"krate":0,"index":3513},{"krate":0,"index":3515},{"krate":0,"index":3517},{"krate":0,"index":3519},{"krate":0,"index":3521},{"krate":0,"index":3524}],"decl_id":null,"docs":" The type of the resource record.","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":387253,"byte_end":387272,"line_start":39,"line_end":39,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1022},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":389505,"byte_end":389511,"line_start":112,"line_end":112,"column_start":12,"column_end":18},"name":"is_any","qualname":"<RecordType>::is_any","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this is an ANY\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":389484,"byte_end":389493,"line_start":111,"line_end":111,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1023},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":389632,"byte_end":389640,"line_start":118,"line_end":118,"column_start":12,"column_end":20},"name":"is_cname","qualname":"<RecordType>::is_cname","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this is a CNAME\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":389611,"byte_end":389620,"line_start":117,"line_end":117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":389762,"byte_end":389768,"line_start":124,"line_end":124,"column_start":12,"column_end":18},"name":"is_srv","qualname":"<RecordType>::is_srv","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this is an SRV\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":389741,"byte_end":389750,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1025},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":389904,"byte_end":389914,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"is_ip_addr","qualname":"<RecordType>::is_ip_addr","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this is an A or an AAAA record\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":389883,"byte_end":389892,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":1046},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/resource.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"resource","qualname":"::rr::resource","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/resource.rs","parent":null,"children":[{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1053},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":3541},{"krate":0,"index":3553},{"krate":0,"index":3554},{"krate":0,"index":3551},{"krate":0,"index":3549},{"krate":0,"index":3547},{"krate":0,"index":1057},{"krate":0,"index":1059},{"krate":0,"index":1077},{"krate":0,"index":1079},{"krate":0,"index":1081},{"krate":0,"index":1086},{"krate":0,"index":1088},{"krate":0,"index":1089}],"decl_id":null,"docs":" resource record implementation\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3541},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/resource.rs","byte_start":401874,"byte_end":401880,"line_start":66,"line_end":66,"column_start":12,"column_end":18},"name":"Record","qualname":"::rr::resource::Record","value":"Record {  }","parent":null,"children":[{"krate":0,"index":3542},{"krate":0,"index":3543},{"krate":0,"index":3544},{"krate":0,"index":3545},{"krate":0,"index":3546}],"decl_id":null,"docs":" Resource records are storage value in DNS, into which all key/value pair data is stored.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1060},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/resource.rs","byte_start":402587,"byte_end":402590,"line_start":92,"line_end":92,"column_start":12,"column_end":15},"name":"new","qualname":"<Record>::new","value":"fn () -> Record","parent":null,"children":[],"decl_id":null,"docs":" Creates a default record, use the setters to build a more useful object.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1061},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/resource.rs","byte_start":402931,"byte_end":402935,"line_start":103,"line_end":103,"column_start":12,"column_end":16},"name":"with","qualname":"<Record>::with","value":"fn (name: Name, rr_type: RecordType, ttl: u32) -> Record","parent":null,"children":[],"decl_id":null,"docs":" Create a record with the specified initial values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1062},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/resource.rs","byte_start":403491,"byte_end":403501,"line_start":120,"line_end":120,"column_start":12,"column_end":22},"name":"from_rdata","qualname":"<Record>::from_rdata","value":"fn (name: Name, ttl: u32, rdata: RData) -> Record","parent":null,"children":[],"decl_id":null,"docs":" Create a record with the specified initial values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1063},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/resource.rs","byte_start":403850,"byte_end":403858,"line_start":133,"line_end":133,"column_start":12,"column_end":20},"name":"set_name","qualname":"<Record>::set_name","value":"fn (&mut self, name: Name) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" ```text\n NAME            a domain name to which this resource record pertains.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1064},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/resource.rs","byte_start":404236,"byte_end":404247,"line_start":144,"line_end":144,"column_start":12,"column_end":23},"name":"set_rr_type","qualname":"<Record>::set_rr_type","value":"fn (&mut self, rr_type: RecordType) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" ```text\n TYPE            two octets containing one of the RR type codes.  This\n                 field specifies the meaning of the data in the RDATA\n                 field.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1065},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/resource.rs","byte_start":404572,"byte_end":404587,"line_start":154,"line_end":154,"column_start":12,"column_end":27},"name":"set_record_type","qualname":"<Record>::set_record_type","value":"fn (&mut self, rr_type: RecordType) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" ```text\n TYPE            two octets containing one of the RR type codes.  This\n                 field specifies the meaning of the data in the RDATA\n                 field.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1066},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/resource.rs","byte_start":404841,"byte_end":404854,"line_start":163,"line_end":163,"column_start":12,"column_end":25},"name":"set_dns_class","qualname":"<Record>::set_dns_class","value":"fn (&mut self, dns_class: DNSClass) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" ```text\n CLASS           two octets which specify the class of the data in the\n                 RDATA field.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1067},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/resource.rs","byte_start":405384,"byte_end":405391,"line_start":175,"line_end":175,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<Record>::set_ttl","value":"fn (&mut self, ttl: u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" ```text\n TTL             a 32 bit unsigned integer that specifies the time\n                 interval (in seconds) that the resource record may be\n                 cached before it should be discarded.  Zero values are\n                 interpreted to mean that the RR can only be used for the\n                 transaction in progress, and should not be cached.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1068},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/resource.rs","byte_start":405897,"byte_end":405906,"line_start":187,"line_end":187,"column_start":12,"column_end":21},"name":"set_rdata","qualname":"<Record>::set_rdata","value":"fn (&mut self, rdata: RData) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" ```text\n RDATA           a variable length string of octets that describes the\n                 resource.  The format of this information varies\n                 according to the TYPE and CLASS of the resource record.\n                 For example, the if the TYPE is A and the CLASS is IN,\n                 the RDATA field is a 4 octet ARPA Internet address.\n ```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1069},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/resource.rs","byte_start":406045,"byte_end":406049,"line_start":193,"line_end":193,"column_start":12,"column_end":16},"name":"name","qualname":"<Record>::name","value":"fn (&self) -> &Name","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of the record\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/resource.rs","byte_start":406221,"byte_end":406228,"line_start":199,"line_end":199,"column_start":12,"column_end":19},"name":"rr_type","qualname":"<Record>::rr_type","value":"fn (&self) -> RecordType","parent":null,"children":[],"decl_id":null,"docs":" Returns the type of the RData in the record\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1071},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/resource.rs","byte_start":406348,"byte_end":406359,"line_start":204,"line_end":204,"column_start":12,"column_end":23},"name":"record_type","qualname":"<Record>::record_type","value":"fn (&self) -> RecordType","parent":null,"children":[],"decl_id":null,"docs":" Returns the type of the RecordData in the record\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1072},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/resource.rs","byte_start":406492,"byte_end":406501,"line_start":209,"line_end":209,"column_start":12,"column_end":21},"name":"dns_class","qualname":"<Record>::dns_class","value":"fn (&self) -> DNSClass","parent":null,"children":[],"decl_id":null,"docs":" Returns the DNSClass of the Record, generally IN fro internet\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1073},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/resource.rs","byte_start":406633,"byte_end":406636,"line_start":214,"line_end":214,"column_start":12,"column_end":15},"name":"ttl","qualname":"<Record>::ttl","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the time-to-live of the record, for caching purposes\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1074},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/resource.rs","byte_start":406749,"byte_end":406754,"line_start":219,"line_end":219,"column_start":12,"column_end":17},"name":"rdata","qualname":"<Record>::rdata","value":"fn (&self) -> &RData","parent":null,"children":[],"decl_id":null,"docs":" Returns the Record Data, i.e. the record information\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1075},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/resource.rs","byte_start":406867,"byte_end":406876,"line_start":224,"line_end":224,"column_start":12,"column_end":21},"name":"rdata_mut","qualname":"<Record>::rdata_mut","value":"fn (&mut self) -> &mut RData","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the Record Data\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1076},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/resource.rs","byte_start":406993,"byte_end":407005,"line_start":229,"line_end":229,"column_start":12,"column_end":24},"name":"unwrap_rdata","qualname":"<Record>::unwrap_rdata","value":"fn (self) -> RData","parent":null,"children":[],"decl_id":null,"docs":" Returns the RData consuming the Record\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3556},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rr_set.rs","byte_start":417443,"byte_end":417452,"line_start":20,"line_end":20,"column_start":12,"column_end":21},"name":"RecordSet","qualname":"::rr::rr_set::RecordSet","value":"RecordSet {  }","parent":null,"children":[{"krate":0,"index":3557},{"krate":0,"index":3558},{"krate":0,"index":3559},{"krate":0,"index":3560},{"krate":0,"index":3561},{"krate":0,"index":3562},{"krate":0,"index":3563}],"decl_id":null,"docs":" Set of resource records associated to a name and type\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1103},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rr_set.rs","byte_start":418262,"byte_end":418265,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<RecordSet>::new","value":"fn (name: &Name, record_type: RecordType, serial: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Resource Record Set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1104},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rr_set.rs","byte_start":419057,"byte_end":419065,"line_start":70,"line_end":70,"column_start":12,"column_end":20},"name":"with_ttl","qualname":"<RecordSet>::with_ttl","value":"fn (name: Name, record_type: RecordType, ttl: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Resource Record Set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1105},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rr_set.rs","byte_start":419428,"byte_end":419432,"line_start":85,"line_end":85,"column_start":12,"column_end":16},"name":"name","qualname":"<RecordSet>::name","value":"fn (&self) -> &Name","parent":null,"children":[],"decl_id":null,"docs":" # Return value","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1106},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rr_set.rs","byte_start":419567,"byte_end":419578,"line_start":92,"line_end":92,"column_start":12,"column_end":23},"name":"record_type","qualname":"<RecordSet>::record_type","value":"fn (&self) -> RecordType","parent":null,"children":[],"decl_id":null,"docs":" # Return value","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1107},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rr_set.rs","byte_start":419788,"byte_end":419801,"line_start":99,"line_end":99,"column_start":12,"column_end":25},"name":"set_dns_class","qualname":"<RecordSet>::set_dns_class","value":"fn (&mut self, dns_class: DNSClass) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the DNSClass to the specified value","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1108},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rr_set.rs","byte_start":420025,"byte_end":420034,"line_start":107,"line_end":107,"column_start":12,"column_end":21},"name":"dns_class","qualname":"<RecordSet>::dns_class","value":"fn (&self) -> DNSClass","parent":null,"children":[],"decl_id":null,"docs":" Returns the `DNSClass` of the RecordSet\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1109},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rr_set.rs","byte_start":420242,"byte_end":420249,"line_start":114,"line_end":114,"column_start":12,"column_end":19},"name":"set_ttl","qualname":"<RecordSet>::set_ttl","value":"fn (&mut self, ttl: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the TTL, in seconds, to the specified value","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1110},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rr_set.rs","byte_start":420612,"byte_end":420615,"line_start":127,"line_end":127,"column_start":12,"column_end":15},"name":"ttl","qualname":"<RecordSet>::ttl","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the time-to-live for the record.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1111},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rr_set.rs","byte_start":422193,"byte_end":422215,"line_start":171,"line_end":171,"column_start":12,"column_end":34},"name":"records_without_rrsigs","qualname":"<RecordSet>::records_without_rrsigs","value":"fn (&self) -> RrsetRecords","parent":null,"children":[],"decl_id":null,"docs":" Returns a Vec of all records in the set, without any RRSIGs.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1112},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rr_set.rs","byte_start":422527,"byte_end":422531,"line_start":181,"line_end":181,"column_start":12,"column_end":16},"name":"iter","qualname":"<RecordSet>::iter","value":"fn (&self) -> Iter<Record>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the records in the set\n","sig":null,"attributes":[{"value":"deprecated(note = \"see `records_without_rrsigs`\")","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rr_set.rs","byte_start":422463,"byte_end":422515,"line_start":180,"line_end":180,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1113},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rr_set.rs","byte_start":422660,"byte_end":422668,"line_start":186,"line_end":186,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<RecordSet>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if there are no records in this set\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1114},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rr_set.rs","byte_start":422803,"byte_end":422809,"line_start":191,"line_end":191,"column_start":12,"column_end":18},"name":"serial","qualname":"<RecordSet>::serial","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the serial number at which the record was updated.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1115},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rr_set.rs","byte_start":422935,"byte_end":422941,"line_start":196,"line_end":196,"column_start":12,"column_end":18},"name":"rrsigs","qualname":"<RecordSet>::rrsigs","value":"fn (&self) -> &[Record]","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice of all the Records signatures in the RecordSet\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1116},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rr_set.rs","byte_start":423253,"byte_end":423265,"line_start":207,"line_end":207,"column_start":12,"column_end":24},"name":"insert_rrsig","qualname":"<RecordSet>::insert_rrsig","value":"fn (&mut self, rrsig: Record) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Inserts a Signature for the Record set","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1117},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rr_set.rs","byte_start":423439,"byte_end":423451,"line_start":212,"line_end":212,"column_start":12,"column_end":24},"name":"clear_rrsigs","qualname":"<RecordSet>::clear_rrsigs","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Useful for clearing all signatures when the RecordSet is updated, or keys are rotated.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1119},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rr_set.rs","byte_start":423804,"byte_end":423814,"line_start":224,"line_end":224,"column_start":12,"column_end":22},"name":"new_record","qualname":"<RecordSet>::new_record","value":"fn (&mut self, rdata: &RData) -> &Record","parent":null,"children":[],"decl_id":null,"docs":" creates a new Record as part of this RecordSet, adding the associated RData","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1121},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rr_set.rs","byte_start":424116,"byte_end":424125,"line_start":234,"line_end":234,"column_start":12,"column_end":21},"name":"add_rdata","qualname":"<RecordSet>::add_rdata","value":"fn (&mut self, rdata: RData) -> bool","parent":null,"children":[],"decl_id":null,"docs":" creates a new Record as part of this RecordSet, adding the associated RData\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1122},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rr_set.rs","byte_start":425817,"byte_end":425823,"line_start":275,"line_end":275,"column_start":12,"column_end":18},"name":"insert","qualname":"<RecordSet>::insert","value":"fn (&mut self, record: Record, serial: u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Inserts a new Resource Record into the Set.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1125},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rr_set.rs","byte_start":431087,"byte_end":431093,"line_start":393,"line_end":393,"column_start":12,"column_end":18},"name":"remove","qualname":"<RecordSet>::remove","value":"fn (&mut self, record: &Record, serial: u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Removes the Resource Record if it exists.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1130},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rr_set.rs","byte_start":432788,"byte_end":432801,"line_start":449,"line_end":449,"column_start":11,"column_end":24},"name":"IntoRecordSet","qualname":"::rr::rr_set::IntoRecordSet","value":"IntoRecordSet: Sized","parent":null,"children":[{"krate":0,"index":1131}],"decl_id":null,"docs":" Types which implement this can be converted into a RecordSet\n","sig":null,"attributes":[{"value":"deprecated(note = \"use From/Into\")","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rr_set.rs","byte_start":432740,"byte_end":432777,"line_start":448,"line_end":448,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1131},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rr_set.rs","byte_start":432865,"byte_end":432880,"line_start":451,"line_end":451,"column_start":8,"column_end":23},"name":"into_record_set","qualname":"::rr::rr_set::IntoRecordSet::into_record_set","value":"fn (self) -> RecordSet","parent":{"krate":0,"index":1130},"children":[],"decl_id":null,"docs":" Performs the conversion to a RecordSet\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3574},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rr_set.rs","byte_start":435123,"byte_end":435128,"line_start":530,"line_end":530,"column_start":5,"column_end":10},"name":"Empty","qualname":"::rr::rr_set::RrsetRecords::Empty","value":"RrsetRecords::Empty","parent":{"krate":0,"index":3572},"children":[],"decl_id":null,"docs":" There are no records in the record set\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3576},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rr_set.rs","byte_start":435185,"byte_end":435196,"line_start":532,"line_end":532,"column_start":5,"column_end":16},"name":"RecordsOnly","qualname":"::rr::rr_set::RrsetRecords::RecordsOnly","value":"RrsetRecords::RecordsOnly(Iter<'r, Record>)","parent":{"krate":0,"index":3572},"children":[],"decl_id":null,"docs":" The records associated with the record set\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3572},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rr_set.rs","byte_start":435053,"byte_end":435065,"line_start":528,"line_end":528,"column_start":10,"column_end":22},"name":"RrsetRecords","qualname":"::rr::rr_set::RrsetRecords","value":"RrsetRecords::{Empty, RecordsOnly}","parent":null,"children":[{"krate":0,"index":3574},{"krate":0,"index":3576}],"decl_id":null,"docs":" An iterator over the RecordSet data\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1140},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rr_set.rs","byte_start":435449,"byte_end":435457,"line_start":540,"line_end":540,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<RrsetRecords>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" This is a best effort emptyness check\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1156},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"serialize","qualname":"::serialize","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/mod.rs","parent":null,"children":[{"krate":0,"index":1157}],"decl_id":null,"docs":" Contains serialization libraries for `binary` and text, `txt`.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1157},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"binary","qualname":"::serialize::binary","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/mod.rs","parent":null,"children":[{"krate":0,"index":1158},{"krate":0,"index":1194},{"krate":0,"index":1297},{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1374},{"krate":0,"index":1375},{"krate":0,"index":1379},{"krate":0,"index":1380},{"krate":0,"index":1383},{"krate":0,"index":1387},{"krate":0,"index":1389},{"krate":0,"index":1392},{"krate":0,"index":1394},{"krate":0,"index":1397},{"krate":0,"index":1399},{"krate":0,"index":1402}],"decl_id":null,"docs":" Binary serialization types\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1164},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/decoder.rs","byte_start":453337,"byte_end":453347,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"name":"BinDecoder","qualname":"::serialize::binary::decoder::BinDecoder","value":"BinDecoder {  }","parent":null,"children":[{"krate":0,"index":1166},{"krate":0,"index":1167}],"decl_id":null,"docs":" This is non-destructive to the inner buffer, b/c for pointer types we need to perform a reverse\n  seek to lookup names","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1170},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/decoder.rs","byte_start":453564,"byte_end":453567,"line_start":38,"line_end":38,"column_start":12,"column_end":15},"name":"new","qualname":"<BinDecoder>::new","value":"fn (buffer: &'a [u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new BinDecoder","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1171},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/decoder.rs","byte_start":453691,"byte_end":453694,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"pop","qualname":"<BinDecoder>::pop","value":"fn (&mut self) -> ProtoResult<Restrict<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Pop one byte from the buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1172},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/decoder.rs","byte_start":454352,"byte_end":454355,"line_start":64,"line_end":64,"column_start":12,"column_end":15},"name":"len","qualname":"<BinDecoder>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes in the buffer","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1173},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/decoder.rs","byte_start":454491,"byte_end":454499,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<BinDecoder>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the buffer is empty\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1174},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/decoder.rs","byte_start":454631,"byte_end":454635,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"peek","qualname":"<BinDecoder>::peek","value":"fn (&self) -> Option<Restrict<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Peed one byte forward, without moving the current index forward\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1175},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/decoder.rs","byte_start":454880,"byte_end":454885,"line_start":83,"line_end":83,"column_start":12,"column_end":17},"name":"index","qualname":"<BinDecoder>::index","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current index in the buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1176},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/decoder.rs","byte_start":455072,"byte_end":455077,"line_start":89,"line_end":89,"column_start":12,"column_end":17},"name":"clone","qualname":"<BinDecoder>::clone","value":"fn (&self, index_at: u16) -> BinDecoder<'a>","parent":null,"children":[],"decl_id":null,"docs":" This is a pretty efficient clone, as the buffer is never cloned, and only the index is set\n  to the value passed in\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1177},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/decoder.rs","byte_start":455637,"byte_end":455656,"line_start":108,"line_end":108,"column_start":12,"column_end":31},"name":"read_character_data","qualname":"<BinDecoder>::read_character_data","value":"fn (&mut self) -> ProtoResult<Restrict<&[u8]>>","parent":null,"children":[],"decl_id":null,"docs":" Reads a String from the buffer","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1178},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/decoder.rs","byte_start":455843,"byte_end":455866,"line_start":113,"line_end":113,"column_start":12,"column_end":35},"name":"read_character_data_max","qualname":"<BinDecoder>::read_character_data_max","value":"fn (&mut self, max_len: Option<usize>) -> ProtoResult<Restrict<&[u8]>>","parent":null,"children":[],"decl_id":null,"docs":" Reads to a maximum length of data, returns an error if this is exceeded\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1182},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/decoder.rs","byte_start":456751,"byte_end":456759,"line_start":146,"line_end":146,"column_start":12,"column_end":20},"name":"read_vec","qualname":"<BinDecoder>::read_vec","value":"fn (&mut self, len: usize) -> ProtoResult<Restrict<Vec<u8>>>","parent":null,"children":[],"decl_id":null,"docs":" Reads a Vec out of the buffer","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1184},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/decoder.rs","byte_start":457150,"byte_end":457160,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"name":"read_slice","qualname":"<BinDecoder>::read_slice","value":"fn (&mut self, len: usize) -> ProtoResult<Restrict<&'a [u8]>>","parent":null,"children":[],"decl_id":null,"docs":" Reads a slice out of the buffer, without allocating","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1186},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/decoder.rs","byte_start":457664,"byte_end":457674,"line_start":173,"line_end":173,"column_start":12,"column_end":22},"name":"slice_from","qualname":"<BinDecoder>::slice_from","value":"fn (&self, index: usize) -> ProtoResult<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Reads a slice from a previous index to the current\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1187},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/decoder.rs","byte_start":457956,"byte_end":457963,"line_start":182,"line_end":182,"column_start":12,"column_end":19},"name":"read_u8","qualname":"<BinDecoder>::read_u8","value":"fn (&mut self) -> ProtoResult<Restrict<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Reads a byte from the buffer, equivalent to `Self::pop()`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1188},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/decoder.rs","byte_start":458325,"byte_end":458333,"line_start":194,"line_end":194,"column_start":12,"column_end":20},"name":"read_u16","qualname":"<BinDecoder>::read_u16","value":"fn (&mut self) -> ProtoResult<Restrict<u16>>","parent":null,"children":[],"decl_id":null,"docs":" Reads the next 2 bytes into u16","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1190},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/decoder.rs","byte_start":458781,"byte_end":458789,"line_start":208,"line_end":208,"column_start":12,"column_end":20},"name":"read_i32","qualname":"<BinDecoder>::read_i32","value":"fn (&mut self) -> ProtoResult<Restrict<i32>>","parent":null,"children":[],"decl_id":null,"docs":" Reads the next four bytes into i32.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1192},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/decoder.rs","byte_start":459249,"byte_end":459257,"line_start":222,"line_end":222,"column_start":12,"column_end":20},"name":"read_u32","qualname":"<BinDecoder>::read_u32","value":"fn (&mut self) -> ProtoResult<Restrict<u32>>","parent":null,"children":[],"decl_id":null,"docs":" Reads the next four bytes into u32.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1219},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":463601,"byte_end":463611,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"BinEncoder","qualname":"::serialize::binary::encoder::BinEncoder","value":"BinEncoder {  }","parent":null,"children":[{"krate":0,"index":1221},{"krate":0,"index":1222},{"krate":0,"index":1223},{"krate":0,"index":1224},{"krate":0,"index":1225}],"decl_id":null,"docs":" Encode DNS messages and resource record types.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1228},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":463909,"byte_end":463912,"line_start":100,"line_end":100,"column_start":12,"column_end":15},"name":"new","qualname":"<BinEncoder>::new","value":"fn (buf: &'a mut Vec<u8>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder with the Vec to fill\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1229},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":464209,"byte_end":464218,"line_start":109,"line_end":109,"column_start":12,"column_end":21},"name":"with_mode","qualname":"<BinEncoder>::with_mode","value":"fn (buf: &'a mut Vec<u8>, mode: EncodeMode) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify the mode for encoding","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1230},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":464749,"byte_end":464760,"line_start":122,"line_end":122,"column_start":12,"column_end":23},"name":"with_offset","qualname":"<BinEncoder>::with_offset","value":"fn (buf: &'a mut Vec<u8>, offset: u32, mode: EncodeMode) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Begins the encoder at the given offset","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1231},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":465540,"byte_end":465552,"line_start":144,"line_end":144,"column_start":12,"column_end":24},"name":"set_max_size","qualname":"<BinEncoder>::set_max_size","value":"fn (&mut self, max: u16) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum size of the buffer","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1232},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":465684,"byte_end":465694,"line_start":149,"line_end":149,"column_start":12,"column_end":22},"name":"into_bytes","qualname":"<BinEncoder>::into_bytes","value":"fn (self) -> &'a Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internal buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1233},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":465810,"byte_end":465813,"line_start":154,"line_end":154,"column_start":12,"column_end":15},"name":"len","qualname":"<BinEncoder>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of the buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1234},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":465922,"byte_end":465930,"line_start":159,"line_end":159,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<BinEncoder>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the buffer is empty\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1235},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":466057,"byte_end":466063,"line_start":164,"line_end":164,"column_start":12,"column_end":18},"name":"offset","qualname":"<BinEncoder>::offset","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current offset into the buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1236},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":466170,"byte_end":466180,"line_start":169,"line_end":169,"column_start":12,"column_end":22},"name":"set_offset","qualname":"<BinEncoder>::set_offset","value":"fn (&mut self, offset: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" sets the current offset to the new offset\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1237},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":466299,"byte_end":466303,"line_start":174,"line_end":174,"column_start":12,"column_end":16},"name":"mode","qualname":"<BinEncoder>::mode","value":"fn (&self) -> EncodeMode","parent":null,"children":[],"decl_id":null,"docs":" Returns the current Encoding mode\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1238},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":466448,"byte_end":466467,"line_start":179,"line_end":179,"column_start":12,"column_end":31},"name":"set_canonical_names","qualname":"<BinEncoder>::set_canonical_names","value":"fn (&mut self, canonical_names: bool) -> ()","parent":null,"children":[],"decl_id":null,"docs":" If set to true, then names will be written into the buffer in canonical form\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1239},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":466636,"byte_end":466654,"line_start":184,"line_end":184,"column_start":12,"column_end":30},"name":"is_canonical_names","qualname":"<BinEncoder>::is_canonical_names","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if then encoder is writing in canonical form\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1240},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":466808,"byte_end":466828,"line_start":189,"line_end":189,"column_start":12,"column_end":32},"name":"with_canonical_names","qualname":"<BinEncoder>::with_canonical_names","value":"fn <F> (&mut self, f: F) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Emit all names in canonical form, useful for https://tools.ietf.org/html/rfc3597\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1242},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":467233,"byte_end":467240,"line_start":204,"line_end":204,"column_start":12,"column_end":19},"name":"reserve","qualname":"<BinEncoder>::reserve","value":"fn (&mut self, _additional: usize) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Reserve specified additional length in the internal buffer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1243},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":467362,"byte_end":467366,"line_start":209,"line_end":209,"column_start":12,"column_end":16},"name":"trim","qualname":"<BinEncoder>::trim","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" trims to the current offset\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1245},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":468112,"byte_end":468120,"line_start":229,"line_end":229,"column_start":12,"column_end":20},"name":"slice_of","qualname":"<BinEncoder>::slice_of","value":"fn (&self, start: usize, end: usize) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" borrow a slice from the encoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1246},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":468537,"byte_end":468556,"line_start":239,"line_end":239,"column_start":12,"column_end":31},"name":"store_label_pointer","qualname":"<BinEncoder>::store_label_pointer","value":"fn (&mut self, start: usize, end: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stores a label pointer to an already written label","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1247},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":468956,"byte_end":468973,"line_start":249,"line_end":249,"column_start":12,"column_end":29},"name":"get_label_pointer","qualname":"<BinEncoder>::get_label_pointer","value":"fn (&self, start: usize, end: usize) -> Option<u16>","parent":null,"children":[],"decl_id":null,"docs":" Looks up the index of an already written label\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1248},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":469466,"byte_end":469470,"line_start":264,"line_end":264,"column_start":12,"column_end":16},"name":"emit","qualname":"<BinEncoder>::emit","value":"fn (&mut self, b: u8) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Emit one byte into the buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1251},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":470315,"byte_end":470334,"line_start":291,"line_end":291,"column_start":12,"column_end":31},"name":"emit_character_data","qualname":"<BinEncoder>::emit_character_data","value":"fn <S> (&mut self, char_data: S) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" matches description from above.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1253},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":470828,"byte_end":470835,"line_start":307,"line_end":307,"column_start":12,"column_end":19},"name":"emit_u8","qualname":"<BinEncoder>::emit_u8","value":"fn (&mut self, data: u8) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Emit one byte into the buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1254},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":470977,"byte_end":470985,"line_start":312,"line_end":312,"column_start":12,"column_end":20},"name":"emit_u16","qualname":"<BinEncoder>::emit_u16","value":"fn (&mut self, data: u16) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes a u16 in network byte order to the buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1255},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":471151,"byte_end":471159,"line_start":317,"line_end":317,"column_start":12,"column_end":20},"name":"emit_i32","qualname":"<BinEncoder>::emit_i32","value":"fn (&mut self, data: i32) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes an i32 in network byte order to the buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1256},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":471325,"byte_end":471333,"line_start":322,"line_end":322,"column_start":12,"column_end":20},"name":"emit_u32","qualname":"<BinEncoder>::emit_u32","value":"fn (&mut self, data: u32) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes an u32 in network byte order to the buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1260},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":472303,"byte_end":472311,"line_start":352,"line_end":352,"column_start":12,"column_end":20},"name":"emit_vec","qualname":"<BinEncoder>::emit_vec","value":"fn (&mut self, data: &[u8]) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes the byte slice to the stream\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1261},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":472467,"byte_end":472475,"line_start":357,"line_end":357,"column_start":12,"column_end":20},"name":"emit_all","qualname":"<BinEncoder>::emit_all","value":"fn <'e, I, E> (&mut self, mut iter: I) -> ProtoResult<usize>","parent":null,"children":[],"decl_id":null,"docs":" Emits all the elements of an Iterator to the encoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1265},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":472752,"byte_end":472765,"line_start":366,"line_end":366,"column_start":12,"column_end":25},"name":"emit_all_refs","qualname":"<BinEncoder>::emit_all_refs","value":"fn <'r, 'e, I, E> (&mut self, iter: I) -> ProtoResult<usize>","parent":null,"children":[],"decl_id":null,"docs":" Emits all the elements of an Iterator to the encoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1270},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":473123,"byte_end":473132,"line_start":378,"line_end":378,"column_start":12,"column_end":21},"name":"emit_iter","qualname":"<BinEncoder>::emit_iter","value":"fn <'e, I, E> (&mut self, iter: &mut I) -> ProtoResult<usize>","parent":null,"children":[],"decl_id":null,"docs":" emits all items in the iterator, return the number emitted\n","sig":null,"attributes":[{"value":"allow(clippy :: needless_return)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":473078,"byte_end":473111,"line_start":377,"line_end":377,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1275},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":473804,"byte_end":473809,"line_start":399,"line_end":399,"column_start":12,"column_end":17},"name":"place","qualname":"<BinEncoder>::place","value":"fn <T> (&mut self) -> ProtoResult<Place<T>>","parent":null,"children":[],"decl_id":null,"docs":" capture a location to write back to\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1278},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":474302,"byte_end":474317,"line_start":417,"line_end":417,"column_start":12,"column_end":27},"name":"len_since_place","qualname":"<BinEncoder>::len_since_place","value":"fn <T> (&self, place: &Place<T>) -> usize","parent":null,"children":[],"decl_id":null,"docs":" calculates the length of data written since the place was creating\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1280},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":474501,"byte_end":474508,"line_start":422,"line_end":422,"column_start":12,"column_end":19},"name":"emit_at","qualname":"<BinEncoder>::emit_at","value":"fn <T> (&mut self, place: Place<T>, data: T) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":" write back to a previously captured location\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1283},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":475627,"byte_end":475638,"line_start":454,"line_end":454,"column_start":11,"column_end":22},"name":"EncodedSize","qualname":"::serialize::binary::encoder::EncodedSize","value":"EncodedSize: BinEncodable","parent":null,"children":[{"krate":0,"index":1284}],"decl_id":null,"docs":" A trait to return the size of a type as it will be encoded in DNS","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1284},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":475702,"byte_end":475709,"line_start":456,"line_end":456,"column_start":8,"column_end":15},"name":"size_of","qualname":"::serialize::binary::encoder::EncodedSize::size_of","value":"fn () -> usize","parent":{"krate":0,"index":1283},"children":[],"decl_id":null,"docs":" Return the size in bytes of the\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3582},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":475971,"byte_end":475976,"line_start":473,"line_end":473,"column_start":12,"column_end":17},"name":"Place","qualname":"::serialize::binary::encoder::Place","value":"Place {  }","parent":null,"children":[{"krate":0,"index":3584},{"krate":0,"index":3585}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use = \"data must be written back to the place\"","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":475905,"byte_end":475959,"line_start":472,"line_end":472,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1291},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":476094,"byte_end":476101,"line_start":479,"line_end":479,"column_start":12,"column_end":19},"name":"replace","qualname":"<Place<T>>::replace","value":"fn (self, encoder: &mut BinEncoder, data: T) -> ProtoResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1292},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":476218,"byte_end":476225,"line_start":483,"line_end":483,"column_start":12,"column_end":19},"name":"size_of","qualname":"<Place<T>>::size_of","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3590},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":476823,"byte_end":476830,"line_start":504,"line_end":504,"column_start":5,"column_end":12},"name":"Signing","qualname":"::serialize::binary::encoder::EncodeMode::Signing","value":"EncodeMode::Signing","parent":{"krate":0,"index":3589},"children":[],"decl_id":null,"docs":" In signing mode records are written in canonical form\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3592},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":476877,"byte_end":476883,"line_start":506,"line_end":506,"column_start":5,"column_end":11},"name":"Normal","qualname":"::serialize::binary::encoder::EncodeMode::Normal","value":"EncodeMode::Normal","parent":{"krate":0,"index":3589},"children":[],"decl_id":null,"docs":" Write records in standard format\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3589},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":476744,"byte_end":476754,"line_start":502,"line_end":502,"column_start":10,"column_end":20},"name":"EncodeMode","qualname":"::serialize::binary::encoder::EncodeMode","value":"EncodeMode::{Signing, Normal}","parent":null,"children":[{"krate":0,"index":3590},{"krate":0,"index":3592}],"decl_id":null,"docs":" In the Verify mode there maybe some things which are encoded differently, e.g. SIG0 records\n  should not be included in the additional count and not in the encoded data when in Verify\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3603},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/restrict.rs","byte_start":480633,"byte_end":480641,"line_start":5,"line_end":5,"column_start":12,"column_end":20},"name":"Restrict","qualname":"::serialize::binary::restrict::Restrict","value":"","parent":null,"children":[],"decl_id":null,"docs":" Untrusted types will be wrapped in this type.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1300},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/restrict.rs","byte_start":480734,"byte_end":480737,"line_start":10,"line_end":10,"column_start":12,"column_end":15},"name":"new","qualname":"<Restrict<T>>::new","value":"fn (restricted: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new restricted type\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/restrict.rs","byte_start":480713,"byte_end":480722,"line_start":9,"line_end":9,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1301},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/restrict.rs","byte_start":481268,"byte_end":481274,"line_start":27,"line_end":27,"column_start":12,"column_end":18},"name":"verify","qualname":"<Restrict<T>>::verify","value":"fn <'a, F> (&'a self, f: F) -> Verified<'a, T>","parent":null,"children":[],"decl_id":null,"docs":" It is the responsibility of this function to verify the contained type is valid.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/restrict.rs","byte_start":481247,"byte_end":481256,"line_start":26,"line_end":26,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1304},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/restrict.rs","byte_start":481983,"byte_end":481996,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"verify_unwrap","qualname":"<Restrict<T>>::verify_unwrap","value":"fn <F> (self, f: F) -> Result<T, T>","parent":null,"children":[],"decl_id":null,"docs":" It is the responsibility of this function to verify the contained type is valid.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/restrict.rs","byte_start":481962,"byte_end":481971,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1306},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/restrict.rs","byte_start":482292,"byte_end":482302,"line_start":59,"line_end":59,"column_start":12,"column_end":22},"name":"unverified","qualname":"<Restrict<T>>::unverified","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the value without verifying the data, akin to Result::unwrap and Option::unwrap, but will not panic\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/restrict.rs","byte_start":482271,"byte_end":482280,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1307},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/restrict.rs","byte_start":482704,"byte_end":482707,"line_start":73,"line_end":73,"column_start":12,"column_end":15},"name":"map","qualname":"<Restrict<T>>::map","value":"fn <R, F> (self, f: F) -> Restrict<R>","parent":null,"children":[],"decl_id":null,"docs":" Map the internal type of the restriction","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/restrict.rs","byte_start":482683,"byte_end":482692,"line_start":72,"line_end":72,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1310},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/restrict.rs","byte_start":482845,"byte_end":482853,"line_start":79,"line_end":79,"column_start":12,"column_end":20},"name":"Verified","qualname":"::serialize::binary::restrict::Verified","value":"","parent":null,"children":[],"decl_id":null,"docs":" Verified data that can be operated on\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1318},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/restrict.rs","byte_start":483009,"byte_end":483013,"line_start":84,"line_end":84,"column_start":12,"column_end":16},"name":"then","qualname":"<Verified>::then","value":"fn <R, F> (&self, f: F) -> Result<R, &T>","parent":null,"children":[],"decl_id":null,"docs":" Perform some operation on the data, and return a result.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/restrict.rs","byte_start":482988,"byte_end":482997,"line_start":83,"line_end":83,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1321},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/restrict.rs","byte_start":483250,"byte_end":483258,"line_start":93,"line_end":93,"column_start":12,"column_end":20},"name":"is_valid","qualname":"<Verified>::is_valid","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this valid\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/restrict.rs","byte_start":483229,"byte_end":483238,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":1331},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/restrict.rs","byte_start":483593,"byte_end":483607,"line_start":108,"line_end":108,"column_start":11,"column_end":25},"name":"RestrictedMath","qualname":"::serialize::binary::restrict::RestrictedMath","value":"RestrictedMath","parent":null,"children":[{"krate":0,"index":1332},{"krate":0,"index":1333},{"krate":0,"index":1334},{"krate":0,"index":1335},{"krate":0,"index":1336}],"decl_id":null,"docs":" Common checked math operations for the Restrict type\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1332},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/restrict.rs","byte_start":483660,"byte_end":483663,"line_start":110,"line_end":110,"column_start":10,"column_end":13},"name":"Arg","qualname":"::serialize::binary::restrict::RestrictedMath::Arg","value":"type Arg: 'static + Sized + Copy;","parent":{"krate":0,"index":1331},"children":[],"decl_id":null,"docs":" Argument for the math operations\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1333},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/restrict.rs","byte_start":483746,"byte_end":483751,"line_start":112,"line_end":112,"column_start":10,"column_end":15},"name":"Value","qualname":"::serialize::binary::restrict::RestrictedMath::Value","value":"type Value: 'static + Sized + Copy;","parent":{"krate":0,"index":1331},"children":[],"decl_id":null,"docs":" Return value, generally the same as Arg\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1334},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/restrict.rs","byte_start":483836,"byte_end":483847,"line_start":115,"line_end":115,"column_start":8,"column_end":19},"name":"checked_add","qualname":"::serialize::binary::restrict::RestrictedMath::checked_add","value":"fn (&self, arg: Self::Arg) -> Result<Restrict<Self::Value>, Self::Arg>","parent":{"krate":0,"index":1331},"children":[],"decl_id":null,"docs":" Checked addition, see `usize::checked_add`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1335},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/restrict.rs","byte_start":483977,"byte_end":483988,"line_start":117,"line_end":117,"column_start":8,"column_end":19},"name":"checked_sub","qualname":"::serialize::binary::restrict::RestrictedMath::checked_sub","value":"fn (&self, arg: Self::Arg) -> Result<Restrict<Self::Value>, Self::Arg>","parent":{"krate":0,"index":1331},"children":[],"decl_id":null,"docs":" Checked subtraction, see `usize::checked_sub`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1336},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/restrict.rs","byte_start":484121,"byte_end":484132,"line_start":119,"line_end":119,"column_start":8,"column_end":19},"name":"checked_mul","qualname":"::serialize::binary::restrict::RestrictedMath::checked_mul","value":"fn (&self, arg: Self::Arg) -> Result<Restrict<Self::Value>, Self::Arg>","parent":{"krate":0,"index":1331},"children":[],"decl_id":null,"docs":" Checked multiplication, see `usize::checked_mul`\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1380},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/mod.rs","byte_start":450340,"byte_end":450352,"line_start":34,"line_end":34,"column_start":11,"column_end":23},"name":"BinEncodable","qualname":"::serialize::binary::BinEncodable","value":"BinEncodable","parent":null,"children":[{"krate":0,"index":1381},{"krate":0,"index":1382}],"decl_id":null,"docs":" A type which can be encoded into a DNS binary format\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1381},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/mod.rs","byte_start":450399,"byte_end":450403,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"emit","qualname":"::serialize::binary::BinEncodable::emit","value":"fn (&self, encoder: &mut BinEncoder) -> ProtoResult<()>","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":" Write the type to the stream\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1382},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/mod.rs","byte_start":450507,"byte_end":450515,"line_start":39,"line_end":39,"column_start":8,"column_end":16},"name":"to_bytes","qualname":"::serialize::binary::BinEncodable::to_bytes","value":"fn (&self) -> ProtoResult<Vec<u8>>","parent":{"krate":0,"index":1380},"children":[],"decl_id":null,"docs":" Returns the object in binary form\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1383},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/mod.rs","byte_start":450822,"byte_end":450834,"line_start":51,"line_end":51,"column_start":11,"column_end":23},"name":"BinDecodable","qualname":"::serialize::binary::BinDecodable","value":"BinDecodable<'r>: Sized","parent":null,"children":[{"krate":0,"index":1385},{"krate":0,"index":1386}],"decl_id":null,"docs":" A trait for types which are serializable to and from DNS binary formats\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1385},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/mod.rs","byte_start":450893,"byte_end":450897,"line_start":53,"line_end":53,"column_start":8,"column_end":12},"name":"read","qualname":"::serialize::binary::BinDecodable::read","value":"fn (decoder: &mut BinDecoder<'r>) -> ProtoResult<Self>","parent":{"krate":0,"index":1383},"children":[],"decl_id":null,"docs":" Read the type from the stream\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1386},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/mod.rs","byte_start":451000,"byte_end":451010,"line_start":56,"line_end":56,"column_start":8,"column_end":18},"name":"from_bytes","qualname":"::serialize::binary::BinDecodable::from_bytes","value":"fn (bytes: &'r [u8]) -> ProtoResult<Self>","parent":{"krate":0,"index":1383},"children":[],"decl_id":null,"docs":" Returns the object in binary form\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1404},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tcp","qualname":"::tcp","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/mod.rs","parent":null,"children":[{"krate":0,"index":1405},{"krate":0,"index":1466},{"krate":0,"index":1550},{"krate":0,"index":1553}],"decl_id":null,"docs":" TCP protocol related components for DNS\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1436},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_client_stream.rs","byte_start":489658,"byte_end":489673,"line_start":29,"line_end":29,"column_start":12,"column_end":27},"name":"TcpClientStream","qualname":"::tcp::tcp_client_stream::TcpClientStream","value":"TcpClientStream {  }","parent":null,"children":[{"krate":0,"index":1438}],"decl_id":null,"docs":" Tcp client stream","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_client_stream.rs","byte_start":489598,"byte_end":489646,"line_start":28,"line_end":28,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1441},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_client_stream.rs","byte_start":490050,"byte_end":490053,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<TcpClientStream<S>>::new","value":"fn (name_server: SocketAddr) -> (TcpClientConnect<S::Transport>, Box<dyn DnsStreamHandle + Send>)","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new TcpStream for a client to the specified SocketAddr.","sig":null,"attributes":[{"value":"allow(clippy :: new_ret_no_self)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_client_stream.rs","byte_start":490005,"byte_end":490038,"line_start":41,"line_end":41,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1442},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_client_stream.rs","byte_start":490498,"byte_end":490510,"line_start":57,"line_end":57,"column_start":12,"column_end":24},"name":"with_timeout","qualname":"<TcpClientStream<S>>::with_timeout","value":"fn (name_server: SocketAddr, timeout: Duration) -> (TcpClientConnect<S::Transport>, Box<dyn DnsStreamHandle + Send>)","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new TcpStream for a client to the specified SocketAddr.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1446},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_client_stream.rs","byte_start":491206,"byte_end":491217,"line_start":80,"line_end":80,"column_start":12,"column_end":23},"name":"from_stream","qualname":"<TcpClientStream<S>>::from_stream","value":"fn (tcp_stream: TcpStream<S>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the TcpStream in TcpClientStream\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1457},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_client_stream.rs","byte_start":492459,"byte_end":492475,"line_start":116,"line_end":116,"column_start":12,"column_end":28},"name":"TcpClientConnect","qualname":"::tcp::tcp_client_stream::TcpClientConnect","value":"","parent":null,"children":[],"decl_id":null,"docs":" A future that resolves to an TcpClientStream\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3620},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_stream.rs","byte_start":498439,"byte_end":498446,"line_start":28,"line_end":28,"column_start":11,"column_end":18},"name":"Connect","qualname":"::tcp::tcp_stream::Connect","value":"Connect","parent":null,"children":[{"krate":0,"index":3621},{"krate":0,"index":3622}],"decl_id":null,"docs":" Trait for TCP connection\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3621},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_stream.rs","byte_start":498498,"byte_end":498507,"line_start":33,"line_end":33,"column_start":10,"column_end":19},"name":"Transport","qualname":"::tcp::tcp_stream::Connect::Transport","value":"type Transport: tokio::io::AsyncRead + tokio::io::AsyncWrite + Send;","parent":{"krate":0,"index":3620},"children":[],"decl_id":null,"docs":" TcpSteam\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3622},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_stream.rs","byte_start":498599,"byte_end":498606,"line_start":36,"line_end":36,"column_start":14,"column_end":21},"name":"connect","qualname":"::tcp::tcp_stream::Connect::connect","value":"fn <'life0, 'async_trait> (addr: &'life0 SocketAddr) -> ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n                     io::Result<Self::Transport>> + ::core::marker::Send +\n                     'async_trait>>","parent":{"krate":0,"index":3620},"children":[],"decl_id":null,"docs":" connect to tcp\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1513},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_stream.rs","byte_start":499963,"byte_end":499972,"line_start":81,"line_end":81,"column_start":12,"column_end":21},"name":"TcpStream","qualname":"::tcp::tcp_stream::TcpStream","value":"TcpStream {  }","parent":null,"children":[{"krate":0,"index":1515},{"krate":0,"index":1516},{"krate":0,"index":1517},{"krate":0,"index":1518},{"krate":0,"index":1519}],"decl_id":null,"docs":" A Stream used for sending data to and from a remote DNS endpoint (client or server).\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_stream.rs","byte_start":499903,"byte_end":499951,"line_start":80,"line_end":80,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1522},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_stream.rs","byte_start":500251,"byte_end":500260,"line_start":91,"line_end":91,"column_start":12,"column_end":21},"name":"peer_addr","qualname":"<TcpStream<S>>::peer_addr","value":"fn (&self) -> SocketAddr","parent":null,"children":[],"decl_id":null,"docs":" Returns the address of the peer connection.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1526},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_stream.rs","byte_start":501054,"byte_end":501057,"line_start":121,"line_end":121,"column_start":12,"column_end":15},"name":"new","qualname":"<TcpStream<S>>::new","value":"fn <E> (name_server: SocketAddr) -> (impl Future<Output = Result<TcpStream<S::Transport>, io::Error>> + Send,\n BufStreamHandle)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future of the eventually establish a IO stream connection or fail trying.","sig":null,"attributes":[{"value":"allow(clippy :: new_ret_no_self, clippy :: type_complexity)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_stream.rs","byte_start":500984,"byte_end":501042,"line_start":120,"line_end":120,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1529},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_stream.rs","byte_start":501627,"byte_end":501639,"line_start":140,"line_end":140,"column_start":12,"column_end":24},"name":"with_timeout","qualname":"<TcpStream<S>>::with_timeout","value":"fn (name_server: SocketAddr, timeout: Duration) -> (impl Future<Output = Result<TcpStream<S::Transport>, io::Error>> + Send,\n BufStreamHandle)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future of the eventually establish a IO stream connection or fail trying","sig":null,"attributes":[{"value":"allow(clippy :: type_complexity)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_stream.rs","byte_start":501582,"byte_end":501615,"line_start":139,"line_end":139,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1541},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_stream.rs","byte_start":504058,"byte_end":504069,"line_start":202,"line_end":202,"column_start":12,"column_end":23},"name":"from_stream","qualname":"<TcpStream<S>>::from_stream","value":"fn (stream: S, peer_addr: SocketAddr) -> (Self, BufStreamHandle)","parent":null,"children":[],"decl_id":null,"docs":" Initializes a TcpStream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1542},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_stream.rs","byte_start":504489,"byte_end":504514,"line_start":212,"line_end":212,"column_start":12,"column_end":37},"name":"from_stream_with_receiver","qualname":"<TcpStream<S>>::from_stream_with_receiver","value":"fn (stream: S, peer_addr: SocketAddr, receiver: UnboundedReceiver<SerialMessage>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps a stream where a sender and receiver have already been established\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1556},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"udp","qualname":"::udp","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/mod.rs","parent":null,"children":[{"krate":0,"index":1557},{"krate":0,"index":1667},{"krate":0,"index":1734},{"krate":0,"index":1738}],"decl_id":null,"docs":" UDP protocol related components for DNS\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1593},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_client_stream.rs","byte_start":521611,"byte_end":521626,"line_start":32,"line_end":32,"column_start":12,"column_end":27},"name":"UdpClientStream","qualname":"::udp::udp_client_stream::UdpClientStream","value":"UdpClientStream {  }","parent":null,"children":[{"krate":0,"index":1596},{"krate":0,"index":1597},{"krate":0,"index":1598},{"krate":0,"index":1599},{"krate":0,"index":1600}],"decl_id":null,"docs":" A UDP client stream of DNS binary packets","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_client_stream.rs","byte_start":521551,"byte_end":521599,"line_start":31,"line_end":31,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1603},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_client_stream.rs","byte_start":522351,"byte_end":522354,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"new","qualname":"<UdpClientStream<S, NoopMessageFinalizer>>::new","value":"fn (name_server: SocketAddr) -> UdpClientConnect<S, NoopMessageFinalizer>","parent":null,"children":[],"decl_id":null,"docs":" it is expected that the resolver wrapper will be responsible for creating and managing\n  new UdpClients such that each new client would have a random port (reduce chance of cache\n  poisoning)","sig":null,"attributes":[{"value":"allow(clippy :: new_ret_no_self)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_client_stream.rs","byte_start":522306,"byte_end":522339,"line_start":53,"line_end":53,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1604},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_client_stream.rs","byte_start":522737,"byte_end":522749,"line_start":64,"line_end":64,"column_start":12,"column_end":24},"name":"with_timeout","qualname":"<UdpClientStream<S, NoopMessageFinalizer>>::with_timeout","value":"fn (name_server: SocketAddr, timeout: Duration) -> UdpClientConnect<S, NoopMessageFinalizer>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new UdpStream for a client to the specified SocketAddr.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1608},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_client_stream.rs","byte_start":523239,"byte_end":523262,"line_start":79,"line_end":79,"column_start":12,"column_end":35},"name":"with_timeout_and_signer","qualname":"<UdpClientStream<S, MF>>::with_timeout_and_signer","value":"fn (name_server: SocketAddr, timeout: Duration, signer: Option<Arc<MF>>) -> UdpClientConnect<S, MF>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new TcpStream for a client to the specified SocketAddr.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1631},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_client_stream.rs","byte_start":526722,"byte_end":526733,"line_start":192,"line_end":192,"column_start":12,"column_end":23},"name":"UdpResponse","qualname":"::udp::udp_client_stream::UdpResponse","value":"","parent":null,"children":[],"decl_id":null,"docs":" A future that resolves to\n","sig":null,"attributes":[{"value":"allow(clippy :: type_complexity)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_client_stream.rs","byte_start":526677,"byte_end":526710,"line_start":191,"line_end":191,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1644},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_client_stream.rs","byte_start":528054,"byte_end":528070,"line_start":236,"line_end":236,"column_start":12,"column_end":28},"name":"UdpClientConnect","qualname":"::udp::udp_client_stream::UdpClientConnect","value":"UdpClientConnect {  }","parent":null,"children":[{"krate":0,"index":1647},{"krate":0,"index":1648},{"krate":0,"index":1649},{"krate":0,"index":1650}],"decl_id":null,"docs":" A future that resolves to an UdpClientStream\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3625},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_stream.rs","byte_start":538332,"byte_end":538341,"line_start":26,"line_end":26,"column_start":11,"column_end":20},"name":"UdpSocket","qualname":"::udp::udp_stream::UdpSocket","value":"UdpSocket","parent":null,"children":[{"krate":0,"index":3626},{"krate":0,"index":3629},{"krate":0,"index":3633}],"decl_id":null,"docs":" Trait for UdpSocket\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3626},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_stream.rs","byte_start":538406,"byte_end":538410,"line_start":31,"line_end":31,"column_start":14,"column_end":18},"name":"bind","qualname":"::udp::udp_stream::UdpSocket::bind","value":"fn <'life0, 'async_trait> (addr: &'life0 SocketAddr) -> ::core::pin::Pin<Box<dyn ::core::future::Future<Output = io::Result<Self>> +\n                     ::core::marker::Send + 'async_trait>>","parent":{"krate":0,"index":3625},"children":[],"decl_id":null,"docs":" UdpSocket\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3629},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_stream.rs","byte_start":538599,"byte_end":538608,"line_start":34,"line_end":34,"column_start":14,"column_end":23},"name":"recv_from","qualname":"::udp::udp_stream::UdpSocket::recv_from","value":"fn <'life0, 'life1, 'async_trait> (&'life0 mut self, buf: &'life1 mut [u8]) -> ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n                     io::Result<(usize, SocketAddr)>> + ::core::marker::Send +\n                     'async_trait>>","parent":{"krate":0,"index":3625},"children":[],"decl_id":null,"docs":" Receive data from the socket and returns the number of bytes read and the address from\n where the data came on success.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3633},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_stream.rs","byte_start":538725,"byte_end":538732,"line_start":36,"line_end":36,"column_start":14,"column_end":21},"name":"send_to","qualname":"::udp::udp_stream::UdpSocket::send_to","value":"fn <'life0, 'life1, 'life2, 'async_trait> (&'life0 mut self, buf: &'life1 [u8], target: &'life2 SocketAddr) -> ::core::pin::Pin<Box<dyn ::core::future::Future<Output = io::Result<usize>> +\n                     ::core::marker::Send + 'async_trait>>","parent":{"krate":0,"index":3625},"children":[],"decl_id":null,"docs":" Send data to the given address.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1701},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_stream.rs","byte_start":538901,"byte_end":538910,"line_start":41,"line_end":41,"column_start":12,"column_end":21},"name":"UdpStream","qualname":"::udp::udp_stream::UdpStream","value":"UdpStream {  }","parent":null,"children":[{"krate":0,"index":1703},{"krate":0,"index":1704}],"decl_id":null,"docs":" A UDP stream of DNS binary packets\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_stream.rs","byte_start":538841,"byte_end":538889,"line_start":40,"line_end":40,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1707},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_stream.rs","byte_start":539819,"byte_end":539822,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"new","qualname":"<UdpStream<S>>::new","value":"fn (name_server: SocketAddr) -> (Box<dyn Future<Output = Result<UdpStream<S>, io::Error>> + Send + Unpin>,\n BufStreamHandle)","parent":null,"children":[],"decl_id":null,"docs":" This method is intended for client connections, see `with_bound` for a method better for\n  straight listening. It is expected that the resolver wrapper will be responsible for\n  creating and managing new UdpStreams such that each new client would have a random port\n  (reduce chance of cache poisoning). This will return a randomly assigned local port.","sig":null,"attributes":[{"value":"allow(clippy :: type_complexity)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_stream.rs","byte_start":539774,"byte_end":539807,"line_start":60,"line_end":60,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1709},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_stream.rs","byte_start":541321,"byte_end":541331,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"with_bound","qualname":"<UdpStream<S>>::with_bound","value":"fn (socket: S) -> (Self, BufStreamHandle)","parent":null,"children":[],"decl_id":null,"docs":" Initialize the Stream with an already bound socket. Generally this should be only used for\n  server listening sockets. See `new` for a client oriented socket. Specifically, this there\n  is already a bound socket in this context, whereas `new` makes sure to randomize ports\n  for additional cache poison prevention.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1739},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"xfer","qualname":"::xfer","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","parent":null,"children":[{"krate":0,"index":1740},{"krate":0,"index":1743},{"krate":0,"index":1744},{"krate":0,"index":1745},{"krate":0,"index":1748},{"krate":0,"index":1751},{"krate":0,"index":1755},{"krate":0,"index":1759},{"krate":0,"index":1762},{"krate":0,"index":1763},{"krate":0,"index":1764},{"krate":0,"index":1840},{"krate":0,"index":1887},{"krate":0,"index":2028},{"krate":0,"index":2044},{"krate":0,"index":2071},{"krate":0,"index":2102},{"krate":0,"index":2115},{"krate":0,"index":2118},{"krate":0,"index":2123},{"krate":0,"index":2127},{"krate":0,"index":2130},{"krate":0,"index":2131},{"krate":0,"index":2132},{"krate":0,"index":2133},{"krate":0,"index":2136},{"krate":0,"index":3690},{"krate":0,"index":3692},{"krate":0,"index":2138},{"krate":0,"index":2141},{"krate":0,"index":2142},{"krate":0,"index":2145},{"krate":0,"index":2147},{"krate":0,"index":2150},{"krate":0,"index":2153},{"krate":0,"index":2157},{"krate":0,"index":2160},{"krate":0,"index":2166},{"krate":0,"index":2169},{"krate":0,"index":2172},{"krate":0,"index":2175},{"krate":0,"index":2176},{"krate":0,"index":2181},{"krate":0,"index":2185},{"krate":0,"index":2189},{"krate":0,"index":2193},{"krate":0,"index":2196},{"krate":0,"index":2207}],"decl_id":null,"docs":" DNS high level transit implimentations.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1789},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_exchange.rs","byte_start":562949,"byte_end":562960,"line_start":27,"line_end":27,"column_start":12,"column_end":23},"name":"DnsExchange","qualname":"::xfer::dns_exchange::DnsExchange","value":"DnsExchange {  }","parent":null,"children":[{"krate":0,"index":1792},{"krate":0,"index":1793}],"decl_id":null,"docs":" This is a generic Exchange implemented over multiplexed DNS connection providers.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_exchange.rs","byte_start":562889,"byte_end":562937,"line_start":26,"line_end":26,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1797},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_exchange.rs","byte_start":563618,"byte_end":563629,"line_start":48,"line_end":48,"column_start":12,"column_end":23},"name":"from_stream","qualname":"<DnsExchange<S, R>>::from_stream","value":"fn (stream: S) -> (Self, DnsRequestStreamHandle<R>)","parent":null,"children":[],"decl_id":null,"docs":" Initializes a TcpStream with an existing tcp::TcpStream.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1798},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_exchange.rs","byte_start":564037,"byte_end":564062,"line_start":58,"line_end":58,"column_start":12,"column_end":37},"name":"from_stream_with_receiver","qualname":"<DnsExchange<S, R>>::from_stream_with_receiver","value":"fn (stream: S, receiver: UnboundedReceiver<OneshotDnsRequest<R>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps a stream where a sender and receiver have already been established\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1799},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_exchange.rs","byte_start":564426,"byte_end":564433,"line_start":71,"line_end":71,"column_start":12,"column_end":19},"name":"connect","qualname":"<DnsExchange<S, R>>::connect","value":"fn <F> (connect_future: F) -> (DnsExchangeConnect<F, S, R>, DnsRequestStreamHandle<R>)","parent":null,"children":[],"decl_id":null,"docs":" Returns a future, which itself wraps a future which is awaiting connection.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1807},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_exchange.rs","byte_start":568317,"byte_end":568335,"line_start":166,"line_end":166,"column_start":12,"column_end":30},"name":"DnsExchangeConnect","qualname":"::xfer::dns_exchange::DnsExchangeConnect","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper for a future DnsExchange connection\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1840},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_handle.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dns_handle","qualname":"::xfer::dns_handle","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_handle.rs","parent":null,"children":[{"krate":0,"index":1841},{"krate":0,"index":1842},{"krate":0,"index":1843},{"krate":0,"index":1844},{"krate":0,"index":1848},{"krate":0,"index":1849},{"krate":0,"index":1850},{"krate":0,"index":1851},{"krate":0,"index":1856},{"krate":0,"index":1862},{"krate":0,"index":1863},{"krate":0,"index":1865},{"krate":0,"index":1867},{"krate":0,"index":1869},{"krate":0,"index":3660},{"krate":0,"index":3662},{"krate":0,"index":1872},{"krate":0,"index":1874},{"krate":0,"index":1881}],"decl_id":null,"docs":" `DnsHandle` types perform conversions of the raw DNS messages before sending the messages on the specified streams.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1863},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_handle.rs","byte_start":573728,"byte_end":573740,"line_start":25,"line_end":25,"column_start":12,"column_end":24},"name":"StreamHandle","qualname":"::xfer::dns_handle::StreamHandle","value":"StreamHandle {  }","parent":null,"children":[{"krate":0,"index":1864}],"decl_id":null,"docs":" The StreamHandle is the general interface for communicating with the DnsMultiplexer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1866},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_handle.rs","byte_start":573877,"byte_end":573880,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"new","qualname":"<StreamHandle>::new","value":"fn (sender: UnboundedSender<Vec<u8>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new StreamHandle for wrapping the sender\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1867},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_handle.rs","byte_start":574030,"byte_end":574045,"line_start":37,"line_end":37,"column_start":11,"column_end":26},"name":"DnsStreamHandle","qualname":"::xfer::dns_handle::DnsStreamHandle","value":"DnsStreamHandle: 'static + Send","parent":null,"children":[{"krate":0,"index":1868}],"decl_id":null,"docs":" Implementations of Sinks for sending DNS messages\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1868},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_handle.rs","byte_start":574137,"byte_end":574141,"line_start":39,"line_end":39,"column_start":8,"column_end":12},"name":"send","qualname":"::xfer::dns_handle::DnsStreamHandle::send","value":"fn (&mut self, buffer: SerialMessage) -> Result<(), ProtoError>","parent":{"krate":0,"index":1867},"children":[],"decl_id":null,"docs":" Sends a message to the Handle for delivery to the server.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3660},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_handle.rs","byte_start":574705,"byte_end":574719,"line_start":54,"line_end":54,"column_start":12,"column_end":26},"name":"BasicDnsHandle","qualname":"::xfer::dns_handle::BasicDnsHandle","value":"BasicDnsHandle {  }","parent":null,"children":[{"krate":0,"index":3661}],"decl_id":null,"docs":" Root DnsHandle implementation returned by DnsMultiplexer","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1873},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_handle.rs","byte_start":574926,"byte_end":574929,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"new","qualname":"<BasicDnsHandle>::new","value":"fn (message_sender:\n    UnboundedSender<(DnsRequest,\n                     oneshot::Sender<Result<DnsResponse, ProtoError>>)>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new BasicDnsHandle wrapping the `message_sender`\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1881},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_handle.rs","byte_start":576308,"byte_end":576317,"line_start":101,"line_end":101,"column_start":11,"column_end":20},"name":"DnsHandle","qualname":"::xfer::dns_handle::DnsHandle","value":"DnsHandle: 'static + Clone + Send + Unpin","parent":null,"children":[{"krate":0,"index":1882},{"krate":0,"index":1883},{"krate":0,"index":1884},{"krate":0,"index":1886}],"decl_id":null,"docs":" A trait for implementing high level functions of DNS.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1882},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_handle.rs","byte_start":576463,"byte_end":576471,"line_start":103,"line_end":103,"column_start":10,"column_end":18},"name":"Response","qualname":"::xfer::dns_handle::DnsHandle::Response","value":"type Response: Future<Output = Result<DnsResponse, ProtoError>> + 'static + Send + Unpin;","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":" The associated response from the response future, this should resolve to the Response message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1883},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_handle.rs","byte_start":576775,"byte_end":576794,"line_start":108,"line_end":108,"column_start":8,"column_end":27},"name":"is_verifying_dnssec","qualname":"::xfer::dns_handle::DnsHandle::is_verifying_dnssec","value":"fn (&self) -> bool","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":" Only returns true if and only if this DNS handle is validating DNSSec.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1884},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_handle.rs","byte_start":577157,"byte_end":577161,"line_start":119,"line_end":119,"column_start":8,"column_end":12},"name":"send","qualname":"::xfer::dns_handle::DnsHandle::send","value":"fn <R> (&mut self, request: R) -> Self::Response","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":" Send a message via the channel in the client","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1886},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_handle.rs","byte_start":577446,"byte_end":577452,"line_start":128,"line_end":128,"column_start":8,"column_end":14},"name":"lookup","qualname":"::xfer::dns_handle::DnsHandle::lookup","value":"fn (&mut self, query: Query, options: DnsRequestOptions) -> Self::Response","parent":{"krate":0,"index":1881},"children":[],"decl_id":null,"docs":" A *classic* DNS query","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1887},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_multiplexer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dns_multiplexer","qualname":"::xfer::dns_multiplexer","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_multiplexer.rs","parent":null,"children":[{"krate":0,"index":1888},{"krate":0,"index":1889},{"krate":0,"index":1890},{"krate":0,"index":1891},{"krate":0,"index":1894},{"krate":0,"index":1895},{"krate":0,"index":1896},{"krate":0,"index":1899},{"krate":0,"index":1903},{"krate":0,"index":1904},{"krate":0,"index":1907},{"krate":0,"index":1911},{"krate":0,"index":1914},{"krate":0,"index":1915},{"krate":0,"index":1918},{"krate":0,"index":1919},{"krate":0,"index":1922},{"krate":0,"index":1923},{"krate":0,"index":1927},{"krate":0,"index":1935},{"krate":0,"index":1936},{"krate":0,"index":1937},{"krate":0,"index":1944},{"krate":0,"index":1953},{"krate":0,"index":1963},{"krate":0,"index":1973},{"krate":0,"index":1981},{"krate":0,"index":1987},{"krate":0,"index":1991},{"krate":0,"index":2000},{"krate":0,"index":2005},{"krate":0,"index":2008},{"krate":0,"index":2010},{"krate":0,"index":2013},{"krate":0,"index":2015},{"krate":0,"index":2022}],"decl_id":null,"docs":" `DnsMultiplexer` and associated types implement the state machines for sending DNS messages while using the underlying streams.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1953},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_multiplexer.rs","byte_start":582388,"byte_end":582402,"line_start":117,"line_end":117,"column_start":12,"column_end":26},"name":"DnsMultiplexer","qualname":"::xfer::dns_multiplexer::DnsMultiplexer","value":"DnsMultiplexer {  }","parent":null,"children":[{"krate":0,"index":1957},{"krate":0,"index":1958},{"krate":0,"index":1959},{"krate":0,"index":1960},{"krate":0,"index":1961},{"krate":0,"index":1962}],"decl_id":null,"docs":" A DNS Client implemented over futures-rs.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_multiplexer.rs","byte_start":582328,"byte_end":582376,"line_start":116,"line_end":116,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1966},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_multiplexer.rs","byte_start":583374,"byte_end":583377,"line_start":145,"line_end":145,"column_start":12,"column_end":15},"name":"new","qualname":"<DnsMultiplexer<S, MF, Box<DnsStreamHandle>>>::new","value":"fn <F> (stream: F, stream_handle: Box<dyn DnsStreamHandle>, signer: Option<Arc<MF>>) -> DnsMultiplexerConnect<F, S, MF>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a new DnsMultiplexer Stream. This uses a default timeout of 5 seconds for all requests.","sig":null,"attributes":[{"value":"allow(clippy :: new_ret_no_self)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_multiplexer.rs","byte_start":583329,"byte_end":583362,"line_start":144,"line_end":144,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1968},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_multiplexer.rs","byte_start":584320,"byte_end":584332,"line_start":166,"line_end":166,"column_start":12,"column_end":24},"name":"with_timeout","qualname":"<DnsMultiplexer<S, MF, Box<DnsStreamHandle>>>::with_timeout","value":"fn <F> (stream: F, stream_handle: Box<dyn DnsStreamHandle>, timeout_duration: Duration, signer: Option<Arc<MF>>) -> DnsMultiplexerConnect<F, S, MF>","parent":null,"children":[],"decl_id":null,"docs":" Spawns a new DnsMultiplexer Stream.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1973},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_multiplexer.rs","byte_start":587500,"byte_end":587521,"line_start":257,"line_end":257,"column_start":12,"column_end":33},"name":"DnsMultiplexerConnect","qualname":"::xfer::dns_multiplexer::DnsMultiplexerConnect","value":"DnsMultiplexerConnect {  }","parent":null,"children":[{"krate":0,"index":1977},{"krate":0,"index":1978},{"krate":0,"index":1979},{"krate":0,"index":1980}],"decl_id":null,"docs":" A wrapper for a future DnsExchange connection\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_multiplexer.rs","byte_start":587440,"byte_end":587488,"line_start":256,"line_end":256,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":2005},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_multiplexer.rs","byte_start":595836,"byte_end":595864,"line_start":475,"line_end":475,"column_start":12,"column_end":40},"name":"DnsMultiplexerSerialResponse","qualname":"::xfer::dns_multiplexer::DnsMultiplexerSerialResponse","value":"","parent":null,"children":[],"decl_id":null,"docs":" A future that resolves into a DnsResponse\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_multiplexer.rs","byte_start":595776,"byte_end":595824,"line_start":474,"line_end":474,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2009},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_multiplexer.rs","byte_start":596006,"byte_end":596016,"line_start":479,"line_end":479,"column_start":12,"column_end":22},"name":"completion","qualname":"<DnsMultiplexerSerialResponse>::completion","value":"fn (complete: oneshot::Receiver<ProtoResult<DnsResponse>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new future with the oneshot completion\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2028},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_request.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dns_request","qualname":"::xfer::dns_request","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_request.rs","parent":null,"children":[{"krate":0,"index":2029},{"krate":0,"index":2032},{"krate":0,"index":3664},{"krate":0,"index":3668},{"krate":0,"index":3666},{"krate":0,"index":3670},{"krate":0,"index":3673},{"krate":0,"index":2033},{"krate":0,"index":2037},{"krate":0,"index":2040},{"krate":0,"index":2042}],"decl_id":null,"docs":" `DnsRequest` wraps a `Message` and associates a set of `DnsRequestOptions` for specifying different transfer options.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3664},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_request.rs","byte_start":598194,"byte_end":598211,"line_start":16,"line_end":16,"column_start":12,"column_end":29},"name":"DnsRequestOptions","qualname":"::xfer::dns_request::DnsRequestOptions","value":"DnsRequestOptions { expects_multiple_responses }","parent":null,"children":[{"krate":0,"index":3665}],"decl_id":null,"docs":" A set of options for expressing options to how requests should be treated\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3665},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_request.rs","byte_start":598442,"byte_end":598468,"line_start":20,"line_end":20,"column_start":9,"column_end":35},"name":"expects_multiple_responses","qualname":"::xfer::dns_request::DnsRequestOptions::expects_multiple_responses","value":"bool","parent":{"krate":0,"index":3664},"children":[],"decl_id":null,"docs":" When true, the underlying DNS protocols will not return on the first response received.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3670},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_request.rs","byte_start":598875,"byte_end":598885,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"DnsRequest","qualname":"::xfer::dns_request::DnsRequest","value":"DnsRequest {  }","parent":null,"children":[{"krate":0,"index":3671},{"krate":0,"index":3672}],"decl_id":null,"docs":" A DNS request object","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2034},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_request.rs","byte_start":599014,"byte_end":599017,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"new","qualname":"<DnsRequest>::new","value":"fn (message: Message, options: DnsRequestOptions) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a new DnsRequest object\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2035},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_request.rs","byte_start":599200,"byte_end":599207,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"options","qualname":"<DnsRequest>::options","value":"fn (&self) -> &DnsRequestOptions","parent":null,"children":[],"decl_id":null,"docs":" Get the set of request options associated with this request\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2036},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_request.rs","byte_start":599311,"byte_end":599317,"line_start":47,"line_end":47,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<DnsRequest>::unwrap","value":"fn (self) -> (Message, DnsRequestOptions)","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the raw message\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2044},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_response.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dns_response","qualname":"::xfer::dns_response","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_response.rs","parent":null,"children":[{"krate":0,"index":2045},{"krate":0,"index":2048},{"krate":0,"index":2051},{"krate":0,"index":2052},{"krate":0,"index":3675},{"krate":0,"index":3681},{"krate":0,"index":3679},{"krate":0,"index":2053},{"krate":0,"index":2058},{"krate":0,"index":2061},{"krate":0,"index":2063},{"krate":0,"index":2065},{"krate":0,"index":2067}],"decl_id":null,"docs":" `DnsResponse` wraps a `Message` and any associated connection details\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3675},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_response.rs","byte_start":600682,"byte_end":600693,"line_start":23,"line_end":23,"column_start":12,"column_end":23},"name":"DnsResponse","qualname":"::xfer::dns_response::DnsResponse","value":"","parent":null,"children":[],"decl_id":null,"docs":" A DNS response object","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2054},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_response.rs","byte_start":600892,"byte_end":600900,"line_start":28,"line_end":28,"column_start":12,"column_end":20},"name":"messages","qualname":"<DnsResponse>::messages","value":"fn (&self) -> Iter<Message>","parent":null,"children":[],"decl_id":null,"docs":" Get all the messages in the Response\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2055},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_response.rs","byte_start":601023,"byte_end":601035,"line_start":33,"line_end":33,"column_start":12,"column_end":24},"name":"messages_mut","qualname":"<DnsResponse>::messages_mut","value":"fn (&mut self) -> IterMut<Message>","parent":null,"children":[],"decl_id":null,"docs":" Get all the messages in the Response\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2056},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_response.rs","byte_start":601183,"byte_end":601186,"line_start":38,"line_end":38,"column_start":12,"column_end":15},"name":"len","qualname":"<DnsResponse>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" returns the number of messages in the response\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2057},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_response.rs","byte_start":601299,"byte_end":601307,"line_start":43,"line_end":43,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<DnsResponse>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" returns the number of messages in the response\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2071},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/retry_dns_handle.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"retry_dns_handle","qualname":"::xfer::retry_dns_handle","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/retry_dns_handle.rs","parent":null,"children":[{"krate":0,"index":2072},{"krate":0,"index":2073},{"krate":0,"index":2076},{"krate":0,"index":2079},{"krate":0,"index":2080},{"krate":0,"index":2083},{"krate":0,"index":3683},{"krate":0,"index":3687},{"krate":0,"index":2084},{"krate":0,"index":2087},{"krate":0,"index":2092},{"krate":0,"index":2098}],"decl_id":null,"docs":" `RetryDnsHandle` allows for DnsQueries to be reattempted on failure\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3683},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/retry_dns_handle.rs","byte_start":602983,"byte_end":602997,"line_start":24,"line_end":24,"column_start":12,"column_end":26},"name":"RetryDnsHandle","qualname":"::xfer::retry_dns_handle::RetryDnsHandle","value":"RetryDnsHandle {  }","parent":null,"children":[{"krate":0,"index":3685},{"krate":0,"index":3686}],"decl_id":null,"docs":" Can be used to reattempt a queries if they fail","sig":null,"attributes":[{"value":"must_use = \"queries can only be sent through a ClientHandle\"","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/retry_dns_handle.rs","byte_start":602908,"byte_end":602971,"line_start":23,"line_end":23,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2086},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/retry_dns_handle.rs","byte_start":603345,"byte_end":603348,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<RetryDnsHandle<H>>::new","value":"fn (handle: H, attempts: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Client handler for reattempting requests on failures.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2106},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/serial_message.rs","byte_start":607608,"byte_end":607621,"line_start":14,"line_end":14,"column_start":12,"column_end":25},"name":"SerialMessage","qualname":"::xfer::serial_message::SerialMessage","value":"SerialMessage {  }","parent":null,"children":[{"krate":0,"index":2107},{"krate":0,"index":2108}],"decl_id":null,"docs":" A DNS message in serialized form, with either the target address or source address\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2110},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/serial_message.rs","byte_start":607870,"byte_end":607873,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"new","qualname":"<SerialMessage>::new","value":"fn (message: Vec<u8>, addr: SocketAddr) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new SerialMessage and the source or destination address\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2111},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/serial_message.rs","byte_start":608015,"byte_end":608020,"line_start":27,"line_end":27,"column_start":12,"column_end":17},"name":"bytes","qualname":"<SerialMessage>::bytes","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the bytes\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2112},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/serial_message.rs","byte_start":608145,"byte_end":608149,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"addr","qualname":"<SerialMessage>::addr","value":"fn (&self) -> SocketAddr","parent":null,"children":[],"decl_id":null,"docs":" Get the source or destination address (context dependent)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2113},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/serial_message.rs","byte_start":608246,"byte_end":608252,"line_start":37,"line_end":37,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<SerialMessage>::unwrap","value":"fn (self) -> (Vec<u8>, SocketAddr)","parent":null,"children":[],"decl_id":null,"docs":" Unwrap the Bytes and address\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2114},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/serial_message.rs","byte_start":608389,"byte_end":608399,"line_start":42,"line_end":42,"column_start":12,"column_end":22},"name":"to_message","qualname":"<SerialMessage>::to_message","value":"fn (&self) -> ProtoResult<Message>","parent":null,"children":[],"decl_id":null,"docs":" Deserializes the inner data into a Message\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2136},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":552865,"byte_end":552880,"line_start":50,"line_end":50,"column_start":11,"column_end":26},"name":"DnsClientStream","qualname":"::xfer::DnsClientStream","value":"DnsClientStream: Stream<Item = Result<SerialMessage, ProtoError>> + Display + Send","parent":null,"children":[{"krate":0,"index":2137}],"decl_id":null,"docs":" A non-multiplexed stream of Serialized DNS messages\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2137},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":553000,"byte_end":553016,"line_start":54,"line_end":54,"column_start":8,"column_end":24},"name":"name_server_addr","qualname":"::xfer::DnsClientStream::name_server_addr","value":"fn (&self) -> SocketAddr","parent":{"krate":0,"index":2136},"children":[],"decl_id":null,"docs":" The remote name server address\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3690},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":553152,"byte_end":553167,"line_start":60,"line_end":60,"column_start":12,"column_end":27},"name":"BufStreamHandle","qualname":"::xfer::BufStreamHandle","value":"BufStreamHandle {  }","parent":null,"children":[{"krate":0,"index":3691}],"decl_id":null,"docs":" A sender to which serialized DNS Messages can be sent\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2139},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":553323,"byte_end":553326,"line_start":66,"line_end":66,"column_start":12,"column_end":15},"name":"new","qualname":"<BufStreamHandle>::new","value":"fn (sender: UnboundedSender<SerialMessage>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new BufStreamHandle with the associated ProtoError\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2140},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":553483,"byte_end":553497,"line_start":71,"line_end":71,"column_start":12,"column_end":26},"name":"unbounded_send","qualname":"<BufStreamHandle>::unbounded_send","value":"fn (&self, msg: SerialMessage) -> Result<(), TrySendError<SerialMessage>>","parent":null,"children":[],"decl_id":null,"docs":" see [`futures::sync::mpsc::UnboundedSender`]\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2141},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":553696,"byte_end":553715,"line_start":78,"line_end":78,"column_start":10,"column_end":29},"name":"MessageStreamHandle","qualname":"::xfer::MessageStreamHandle","value":"UnboundedSender<Message>","parent":null,"children":[],"decl_id":null,"docs":" A sender to which a Message can be sent\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2142},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":553803,"byte_end":553821,"line_start":81,"line_end":81,"column_start":12,"column_end":30},"name":"BufDnsStreamHandle","qualname":"::xfer::BufDnsStreamHandle","value":"BufDnsStreamHandle {  }","parent":null,"children":[{"krate":0,"index":2143},{"krate":0,"index":2144}],"decl_id":null,"docs":" A buffering stream bound to a `SocketAddr`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2146},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":554172,"byte_end":554175,"line_start":93,"line_end":93,"column_start":12,"column_end":15},"name":"new","qualname":"<BufDnsStreamHandle>::new","value":"fn (name_server: SocketAddr, sender: BufStreamHandle) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new Buffered Stream Handle, used for sending data to the DNS peer.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2150},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":554863,"byte_end":554885,"line_start":114,"line_end":114,"column_start":12,"column_end":34},"name":"DnsRequestStreamHandle","qualname":"::xfer::DnsRequestStreamHandle","value":"DnsRequestStreamHandle {  }","parent":null,"children":[{"krate":0,"index":2152}],"decl_id":null,"docs":" A sender to which serialized DNS Messages can be sent\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2155},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":555204,"byte_end":555207,"line_start":126,"line_end":126,"column_start":12,"column_end":15},"name":"new","qualname":"<DnsRequestStreamHandle<F>>::new","value":"fn (sender: UnboundedSender<OneshotDnsRequest<F>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new BufStreamHandle with the associated ProtoError\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2156},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":555378,"byte_end":555392,"line_start":131,"line_end":131,"column_start":12,"column_end":26},"name":"unbounded_send","qualname":"<DnsRequestStreamHandle<F>>::unbounded_send","value":"fn (&self, msg: OneshotDnsRequest<F>) -> Result<(), TrySendError<OneshotDnsRequest<F>>>","parent":null,"children":[],"decl_id":null,"docs":" see [`futures::sync::mpsc::UnboundedSender`]\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2160},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":556140,"byte_end":556156,"line_start":155,"line_end":155,"column_start":11,"column_end":27},"name":"DnsRequestSender","qualname":"::xfer::DnsRequestSender","value":"DnsRequestSender: Stream<Item = Result<(), ProtoError>> + 'static + Display + Send + Unpin","parent":null,"children":[{"krate":0,"index":2161},{"krate":0,"index":2162},{"krate":0,"index":2163},{"krate":0,"index":2164},{"krate":0,"index":2165}],"decl_id":null,"docs":" Types that implement this are capable of sending a serialized DNS message on a stream","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2161},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":556306,"byte_end":556323,"line_start":159,"line_end":159,"column_start":10,"column_end":27},"name":"DnsResponseFuture","qualname":"::xfer::DnsRequestSender::DnsResponseFuture","value":"type DnsResponseFuture: Future<Output = Result<DnsResponse, ProtoError>>\n        + 'static\n        + Send\n        + Unpin;","parent":{"krate":0,"index":2160},"children":[],"decl_id":null,"docs":" A future that resolves to a response serial message\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2162},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":556589,"byte_end":556601,"line_start":169,"line_end":169,"column_start":8,"column_end":20},"name":"send_message","qualname":"::xfer::DnsRequestSender::send_message","value":"fn (&mut self, message: DnsRequest, cx: &mut Context) -> Self::DnsResponseFuture","parent":{"krate":0,"index":2160},"children":[],"decl_id":null,"docs":" Send a message, and return a future of the response","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2163},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":556725,"byte_end":556739,"line_start":172,"line_end":172,"column_start":8,"column_end":22},"name":"error_response","qualname":"::xfer::DnsRequestSender::error_response","value":"fn (error: ProtoError) -> Self::DnsResponseFuture","parent":{"krate":0,"index":2160},"children":[],"decl_id":null,"docs":" Constructs an error response\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2164},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":557172,"byte_end":557180,"line_start":177,"line_end":177,"column_start":8,"column_end":16},"name":"shutdown","qualname":"::xfer::DnsRequestSender::shutdown","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":2160},"children":[],"decl_id":null,"docs":" Allows the upstream user to inform the underling stream that it should shutdown.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2165},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":557270,"byte_end":557281,"line_start":180,"line_end":180,"column_start":8,"column_end":19},"name":"is_shutdown","qualname":"::xfer::DnsRequestSender::is_shutdown","value":"fn (&self) -> bool","parent":{"krate":0,"index":2160},"children":[],"decl_id":null,"docs":" Returns true if the stream has been shutdown with `shutdown`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2166},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":557379,"byte_end":557404,"line_start":184,"line_end":184,"column_start":12,"column_end":37},"name":"BufDnsRequestStreamHandle","qualname":"::xfer::BufDnsRequestStreamHandle","value":"BufDnsRequestStreamHandle {  }","parent":null,"children":[{"krate":0,"index":2168}],"decl_id":null,"docs":" Used for associating a name_server to a DnsRequestStreamHandle\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2171},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":557692,"byte_end":557695,"line_start":196,"line_end":196,"column_start":12,"column_end":15},"name":"new","qualname":"<BufDnsRequestStreamHandle<F>>::new","value":"fn (sender: DnsRequestStreamHandle<F>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new BufDnsRequestStreamHandle\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2181},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":559244,"byte_end":559261,"line_start":250,"line_end":250,"column_start":12,"column_end":29},"name":"OneshotDnsRequest","qualname":"::xfer::OneshotDnsRequest","value":"OneshotDnsRequest {  }","parent":null,"children":[{"krate":0,"index":2183},{"krate":0,"index":2184}],"decl_id":null,"docs":" A OneshotDnsRequest creates a channel for a response to message\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2198},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":560557,"byte_end":560565,"line_start":301,"line_end":301,"column_start":5,"column_end":13},"name":"Receiver","qualname":"::xfer::OneshotDnsResponseReceiver::Receiver","value":"OneshotDnsResponseReceiver::Receiver(Receiver<F>)","parent":{"krate":0,"index":2196},"children":[],"decl_id":null,"docs":" The receiver\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2201},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":560617,"byte_end":560625,"line_start":303,"line_end":303,"column_start":5,"column_end":13},"name":"Received","qualname":"::xfer::OneshotDnsResponseReceiver::Received","value":"OneshotDnsResponseReceiver::Received(F)","parent":{"krate":0,"index":2196},"children":[],"decl_id":null,"docs":" The future once received\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2204},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":560674,"byte_end":560677,"line_start":305,"line_end":305,"column_start":5,"column_end":8},"name":"Err","qualname":"::xfer::OneshotDnsResponseReceiver::Err","value":"OneshotDnsResponseReceiver::Err(Option<ProtoError>)","parent":{"krate":0,"index":2196},"children":[],"decl_id":null,"docs":" Error during the send operation\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2196},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":560422,"byte_end":560448,"line_start":296,"line_end":296,"column_start":10,"column_end":36},"name":"OneshotDnsResponseReceiver","qualname":"::xfer::OneshotDnsResponseReceiver","value":"OneshotDnsResponseReceiver::{Receiver, Received, Err}","parent":null,"children":[{"krate":0,"index":2198},{"krate":0,"index":2201},{"krate":0,"index":2204}],"decl_id":null,"docs":" A Future that wraps a oneshot::Receiver and resolves to the final value\n","sig":null,"attributes":[]}],"impls":[{"id":2,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":7269,"byte_end":7279,"line_start":197,"line_end":197,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":7417,"byte_end":7427,"line_start":204,"line_end":204,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":7581,"byte_end":7591,"line_start":212,"line_end":212,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":7781,"byte_end":7791,"line_start":222,"line_end":222,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":7934,"byte_end":7944,"line_start":228,"line_end":228,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":8115,"byte_end":8125,"line_start":236,"line_end":236,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":8254,"byte_end":8264,"line_start":242,"line_end":242,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":8389,"byte_end":8399,"line_start":248,"line_end":248,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":8517,"byte_end":8527,"line_start":254,"line_end":254,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":8792,"byte_end":8802,"line_start":263,"line_end":263,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":8949,"byte_end":8959,"line_start":269,"line_end":269,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":9091,"byte_end":9101,"line_start":275,"line_end":275,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":47}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":9231,"byte_end":9241,"line_start":281,"line_end":281,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":49}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":9367,"byte_end":9377,"line_start":287,"line_end":287,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":9512,"byte_end":9522,"line_start":293,"line_end":293,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":9674,"byte_end":9684,"line_start":299,"line_end":299,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":10013,"byte_end":10026,"line_start":314,"line_end":314,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":10180,"byte_end":10193,"line_start":320,"line_end":320,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":10511,"byte_end":10522,"line_start":336,"line_end":336,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":10676,"byte_end":10687,"line_start":342,"line_end":342,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":10818,"byte_end":10823,"line_start":349,"line_end":349,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":11093,"byte_end":11099,"line_start":358,"line_end":358,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":11185,"byte_end":11199,"line_start":364,"line_end":364,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":13520,"byte_end":13521,"line_start":415,"line_end":415,"column_start":28,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/edns.rs","byte_start":16197,"byte_end":16201,"line_start":43,"line_end":43,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/edns.rs","byte_start":16418,"byte_end":16422,"line_start":55,"line_end":55,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/edns.rs","byte_start":18110,"byte_end":18114,"line_start":118,"line_end":118,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/edns.rs","byte_start":19265,"byte_end":19271,"line_start":151,"line_end":151,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/edns.rs","byte_start":20308,"byte_end":20312,"line_start":180,"line_end":180,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/header.rs","byte_start":24706,"byte_end":24712,"line_start":85,"line_end":85,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/header.rs","byte_start":25254,"byte_end":25260,"line_start":106,"line_end":106,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/header.rs","byte_start":35422,"byte_end":35428,"line_start":377,"line_end":377,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/header.rs","byte_start":36928,"byte_end":36934,"line_start":424,"line_end":424,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":45794,"byte_end":45801,"line_start":122,"line_end":122,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":63476,"byte_end":63483,"line_start":653,"line_end":653,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":64710,"byte_end":64730,"line_start":684,"line_end":684,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":64849,"byte_end":64869,"line_start":691,"line_end":691,"column_start":27,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":65729,"byte_end":65730,"line_start":714,"line_end":714,"column_start":76,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":67816,"byte_end":67823,"line_start":776,"line_end":776,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":68233,"byte_end":68240,"line_start":791,"line_end":791,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/op_code.rs","byte_start":75352,"byte_end":75358,"line_start":91,"line_end":91,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/query.rs","byte_start":77891,"byte_end":77896,"line_start":59,"line_end":59,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/query.rs","byte_start":78170,"byte_end":78175,"line_start":70,"line_end":70,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/query.rs","byte_start":80314,"byte_end":80319,"line_start":134,"line_end":134,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/query.rs","byte_start":80558,"byte_end":80563,"line_start":144,"line_end":144,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/query.rs","byte_start":80901,"byte_end":80906,"line_start":158,"line_end":158,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/response_code.rs","byte_start":86690,"byte_end":86702,"line_start":131,"line_end":131,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/response_code.rs","byte_start":89958,"byte_end":89970,"line_start":174,"line_end":174,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/response_code.rs","byte_start":93102,"byte_end":93114,"line_start":236,"line_end":236,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/dns_class.rs","byte_start":97831,"byte_end":97839,"line_start":38,"line_end":38,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":355},{"krate":0,"index":356}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/dns_class.rs","byte_start":98517,"byte_end":98525,"line_start":62,"line_end":62,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/dns_class.rs","byte_start":99363,"byte_end":99371,"line_start":90,"line_end":90,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":361}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/dns_class.rs","byte_start":99520,"byte_end":99528,"line_start":96,"line_end":96,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/dns_class.rs","byte_start":100910,"byte_end":100918,"line_start":149,"line_end":149,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/dns_class.rs","byte_start":101039,"byte_end":101047,"line_start":155,"line_end":155,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/dns_class.rs","byte_start":101171,"byte_end":101179,"line_start":161,"line_end":161,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":103338,"byte_end":103343,"line_start":34,"line_end":34,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":108864,"byte_end":108869,"line_start":202,"line_end":202,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":108951,"byte_end":108956,"line_start":208,"line_end":208,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":109486,"byte_end":109491,"line_start":226,"line_end":226,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":110534,"byte_end":110539,"line_start":256,"line_end":256,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":110730,"byte_end":110735,"line_start":263,"line_end":263,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":110856,"byte_end":110861,"line_start":269,"line_end":269,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":110979,"byte_end":110984,"line_start":275,"line_end":275,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":111106,"byte_end":111111,"line_start":281,"line_end":281,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":111585,"byte_end":111598,"line_start":301,"line_end":301,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":111761,"byte_end":111776,"line_start":310,"line_end":310,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":112177,"byte_end":112182,"line_start":328,"line_end":328,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":112411,"byte_end":112417,"line_start":340,"line_end":340,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":112667,"byte_end":112670,"line_start":352,"line_end":352,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":118465,"byte_end":118469,"line_start":34,"line_end":34,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":503},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":515},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":521},{"krate":0,"index":523},{"krate":0,"index":526},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":145374,"byte_end":145387,"line_start":812,"line_end":812,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":553},{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":145641,"byte_end":145653,"line_start":823,"line_end":823,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":559},{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":145973,"byte_end":145982,"line_start":836,"line_end":836,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":568},{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":146145,"byte_end":146154,"line_start":844,"line_end":844,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":146195,"byte_end":146204,"line_start":845,"line_end":845,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":146512,"byte_end":146516,"line_start":860,"line_end":860,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":581}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":146701,"byte_end":146705,"line_start":869,"line_end":869,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":147584,"byte_end":147588,"line_start":897,"line_end":897,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":149288,"byte_end":149292,"line_start":940,"line_end":940,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":149428,"byte_end":149432,"line_start":946,"line_end":946,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":149793,"byte_end":149797,"line_start":964,"line_end":964,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":150028,"byte_end":150032,"line_start":971,"line_end":971,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":155791,"byte_end":155795,"line_start":1108,"line_end":1108,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":155949,"byte_end":155953,"line_start":1114,"line_end":1114,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":620},{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":156093,"byte_end":156097,"line_start":1122,"line_end":1122,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":623}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":156214,"byte_end":156218,"line_start":1128,"line_end":1128,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":158249,"byte_end":158253,"line_start":1177,"line_end":1177,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":636},{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":158848,"byte_end":158854,"line_start":1199,"line_end":1199,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":644}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":159046,"byte_end":159047,"line_start":1206,"line_end":1206,"column_start":22,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/try_parse_ip.rs","byte_start":173965,"byte_end":173969,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":192235,"byte_end":192244,"line_start":395,"line_end":395,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":196247,"byte_end":196256,"line_start":559,"line_end":559,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":695},{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","byte_start":211810,"byte_end":211813,"line_start":139,"line_end":139,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","byte_start":215738,"byte_end":215746,"line_start":241,"line_end":241,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","byte_start":216811,"byte_end":216819,"line_start":288,"line_end":288,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","byte_start":217740,"byte_end":217745,"line_start":321,"line_end":321,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":742}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","byte_start":229982,"byte_end":229990,"line_start":658,"line_end":658,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":762},{"krate":0,"index":765},{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/mx.rs","byte_start":245614,"byte_end":245616,"line_start":46,"line_end":46,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":785}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/naptr.rs","byte_start":254041,"byte_end":254046,"line_start":53,"line_end":53,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/null.rs","byte_start":265313,"byte_end":265317,"line_start":44,"line_end":44,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":819}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/openpgpkey.rs","byte_start":267916,"byte_end":267926,"line_start":25,"line_end":25,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":828},{"krate":0,"index":829}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/opt.rs","byte_start":276630,"byte_end":276633,"line_start":170,"line_end":170,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":838},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":841}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/opt.rs","byte_start":282277,"byte_end":282285,"line_start":334,"line_end":334,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":849}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/opt.rs","byte_start":284438,"byte_end":284448,"line_start":401,"line_end":401,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":853},{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/opt.rs","byte_start":285300,"byte_end":285310,"line_start":425,"line_end":425,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":856}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/opt.rs","byte_start":285834,"byte_end":285844,"line_start":438,"line_end":438,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":859}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/opt.rs","byte_start":286356,"byte_end":286359,"line_start":452,"line_end":452,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":862}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/opt.rs","byte_start":286791,"byte_end":286799,"line_start":464,"line_end":464,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":865}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/soa.rs","byte_start":291172,"byte_end":291175,"line_start":78,"line_end":78,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":871},{"krate":0,"index":872},{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/srv.rs","byte_start":301071,"byte_end":301074,"line_start":91,"line_end":91,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":891}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/sshfp.rs","byte_start":309353,"byte_end":309358,"line_start":46,"line_end":46,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/sshfp.rs","byte_start":311078,"byte_end":311087,"line_start":121,"line_end":121,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":903}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/sshfp.rs","byte_start":312719,"byte_end":312734,"line_start":183,"line_end":183,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":907}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/tlsa.rs","byte_start":323363,"byte_end":323372,"line_start":132,"line_end":132,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":918}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/tlsa.rs","byte_start":325097,"byte_end":325105,"line_start":191,"line_end":191,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/tlsa.rs","byte_start":326721,"byte_end":326729,"line_start":252,"line_end":252,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":926}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/tlsa.rs","byte_start":327321,"byte_end":327325,"line_start":276,"line_end":276,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":934}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/txt.rs","byte_start":335815,"byte_end":335818,"line_start":42,"line_end":42,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":944},{"krate":0,"index":946},{"krate":0,"index":947}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_data.rs","byte_start":365235,"byte_end":365240,"line_start":600,"line_end":600,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":990},{"krate":0,"index":992},{"krate":0,"index":997},{"krate":0,"index":1005},{"krate":0,"index":1006}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_data.rs","byte_start":376918,"byte_end":376923,"line_start":869,"line_end":869,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1008}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_data.rs","byte_start":377041,"byte_end":377046,"line_start":875,"line_end":875,"column_start":14,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1010}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":389428,"byte_end":389438,"line_start":109,"line_end":109,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1022},{"krate":0,"index":1023},{"krate":0,"index":1024},{"krate":0,"index":1025}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":390066,"byte_end":390076,"line_start":138,"line_end":138,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1027},{"krate":0,"index":1028}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":391595,"byte_end":391605,"line_start":180,"line_end":180,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1030}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":393114,"byte_end":393124,"line_start":227,"line_end":227,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1032}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":393273,"byte_end":393283,"line_start":233,"line_end":233,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1035}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":396370,"byte_end":396380,"line_start":331,"line_end":331,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1041}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":396581,"byte_end":396591,"line_start":338,"line_end":338,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1043}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":396715,"byte_end":396725,"line_start":344,"line_end":344,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1045}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/resource.rs","byte_start":402008,"byte_end":402014,"line_start":74,"line_end":74,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1058}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/resource.rs","byte_start":402332,"byte_end":402338,"line_start":87,"line_end":87,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1060},{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1063},{"krate":0,"index":1064},{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1070},{"krate":0,"index":1071},{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1076}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/resource.rs","byte_start":407095,"byte_end":407101,"line_start":235,"line_end":235,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1078}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/resource.rs","byte_start":407209,"byte_end":407215,"line_start":241,"line_end":241,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1080}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/resource.rs","byte_start":407867,"byte_end":407873,"line_start":265,"line_end":265,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1083}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/resource.rs","byte_start":411102,"byte_end":411108,"line_start":334,"line_end":334,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/resource.rs","byte_start":412323,"byte_end":412329,"line_start":366,"line_end":366,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1090}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rr_set.rs","byte_start":417666,"byte_end":417675,"line_start":30,"line_end":30,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1103},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1113},{"krate":0,"index":1114},{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1125}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rr_set.rs","byte_start":432342,"byte_end":432351,"line_start":433,"line_end":433,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1129}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rr_set.rs","byte_start":432948,"byte_end":432957,"line_start":455,"line_end":455,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1133}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rr_set.rs","byte_start":433043,"byte_end":433052,"line_start":461,"line_end":461,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1135},{"krate":0,"index":1136},{"krate":0,"index":1137}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rr_set.rs","byte_start":435373,"byte_end":435385,"line_start":538,"line_end":538,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1140}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rr_set.rs","byte_start":435603,"byte_end":435615,"line_start":548,"line_end":548,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1143},{"krate":0,"index":1144}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/decoder.rs","byte_start":453406,"byte_end":453416,"line_start":32,"line_end":32,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1172},{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1176},{"krate":0,"index":1177},{"krate":0,"index":1178},{"krate":0,"index":1182},{"krate":0,"index":1184},{"krate":0,"index":1186},{"krate":0,"index":1187},{"krate":0,"index":1188},{"krate":0,"index":1190},{"krate":0,"index":1192}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":461874,"byte_end":461884,"line_start":33,"line_end":33,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1213},{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1218}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":463831,"byte_end":463841,"line_start":98,"line_end":98,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1234},{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1238},{"krate":0,"index":1239},{"krate":0,"index":1240},{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1251},{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1260},{"krate":0,"index":1261},{"krate":0,"index":1265},{"krate":0,"index":1270},{"krate":0,"index":1275},{"krate":0,"index":1278},{"krate":0,"index":1280},{"krate":0,"index":1282}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":475820,"byte_end":475826,"line_start":465,"line_end":465,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1288}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":476072,"byte_end":476077,"line_start":478,"line_end":478,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1291},{"krate":0,"index":1292}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":476384,"byte_end":476392,"line_start":493,"line_end":493,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1296}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/restrict.rs","byte_start":480658,"byte_end":480666,"line_start":7,"line_end":7,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1304},{"krate":0,"index":1306},{"krate":0,"index":1307}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/restrict.rs","byte_start":482901,"byte_end":482909,"line_start":81,"line_end":81,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1318},{"krate":0,"index":1321}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/restrict.rs","byte_start":484228,"byte_end":484236,"line_start":122,"line_end":122,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1338},{"krate":0,"index":1339},{"krate":0,"index":1340},{"krate":0,"index":1342},{"krate":0,"index":1344}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/restrict.rs","byte_start":484797,"byte_end":484805,"line_start":137,"line_end":137,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1347},{"krate":0,"index":1348},{"krate":0,"index":1349},{"krate":0,"index":1351},{"krate":0,"index":1353}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/restrict.rs","byte_start":485357,"byte_end":485365,"line_start":152,"line_end":152,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1356},{"krate":0,"index":1357},{"krate":0,"index":1358},{"krate":0,"index":1360},{"krate":0,"index":1362}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/restrict.rs","byte_start":485926,"byte_end":485932,"line_start":167,"line_end":167,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1367},{"krate":0,"index":1368},{"krate":0,"index":1369},{"krate":0,"index":1370},{"krate":0,"index":1371}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/mod.rs","byte_start":452046,"byte_end":452049,"line_start":98,"line_end":98,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1403}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_client_stream.rs","byte_start":489746,"byte_end":489761,"line_start":33,"line_end":33,"column_start":35,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1441},{"krate":0,"index":1442}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_client_stream.rs","byte_start":491127,"byte_end":491142,"line_start":78,"line_end":78,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1446}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_client_stream.rs","byte_start":491353,"byte_end":491368,"line_start":85,"line_end":85,"column_start":52,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1449}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_client_stream.rs","byte_start":491594,"byte_end":491609,"line_start":91,"line_end":91,"column_start":68,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":1452}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_client_stream.rs","byte_start":491765,"byte_end":491780,"line_start":97,"line_end":97,"column_start":59,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":1455},{"krate":0,"index":1456}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_client_stream.rs","byte_start":492595,"byte_end":492611,"line_start":120,"line_end":120,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1463},{"krate":0,"index":1464}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_client_stream.rs","byte_start":492942,"byte_end":492956,"line_start":133,"line_end":133,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3613},{"krate":0,"index":3614}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_stream.rs","byte_start":500173,"byte_end":500182,"line_start":89,"line_end":89,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1522},{"krate":0,"index":1523}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_stream.rs","byte_start":500712,"byte_end":500721,"line_start":112,"line_end":112,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1526},{"krate":0,"index":1529},{"krate":0,"index":1531}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_stream.rs","byte_start":503770,"byte_end":503779,"line_start":193,"line_end":193,"column_start":55,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1541},{"krate":0,"index":1542}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_stream.rs","byte_start":505007,"byte_end":505016,"line_start":230,"line_end":230,"column_start":74,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":1546},{"krate":0,"index":1547}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_client_stream.rs","byte_start":521853,"byte_end":521868,"line_start":44,"line_end":44,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1603},{"krate":0,"index":1604}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_client_stream.rs","byte_start":522975,"byte_end":522990,"line_start":72,"line_end":72,"column_start":37,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1608}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_client_stream.rs","byte_start":523609,"byte_end":523624,"line_start":93,"line_end":93,"column_start":49,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":1612}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_client_stream.rs","byte_start":524100,"byte_end":524115,"line_start":108,"line_end":108,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1620},{"krate":0,"index":1621},{"krate":0,"index":1623},{"krate":0,"index":1624},{"krate":0,"index":1625}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_client_stream.rs","byte_start":526295,"byte_end":526310,"line_start":177,"line_end":177,"column_start":48,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1629},{"krate":0,"index":1630}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_client_stream.rs","byte_start":526836,"byte_end":526847,"line_start":196,"line_end":196,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1635},{"krate":0,"index":1637}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_client_stream.rs","byte_start":527701,"byte_end":527712,"line_start":223,"line_end":223,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1640},{"krate":0,"index":1641}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_client_stream.rs","byte_start":528323,"byte_end":528339,"line_start":247,"line_end":247,"column_start":56,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":1654},{"krate":0,"index":1655}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_client_stream.rs","byte_start":528943,"byte_end":528961,"line_start":267,"line_end":267,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1659},{"krate":0,"index":1664}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_stream.rs","byte_start":539049,"byte_end":539058,"line_start":46,"line_end":46,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1707},{"krate":0,"index":1709},{"krate":0,"index":1710}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_stream.rs","byte_start":541964,"byte_end":541973,"line_start":121,"line_end":121,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1713}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_stream.rs","byte_start":542269,"byte_end":542278,"line_start":133,"line_end":133,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1716},{"krate":0,"index":1717}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_stream.rs","byte_start":544191,"byte_end":544210,"line_start":184,"line_end":184,"column_start":20,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1725},{"krate":0,"index":1726}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_stream.rs","byte_start":544868,"byte_end":544887,"line_start":203,"line_end":203,"column_start":31,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1731},{"krate":0,"index":1732}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_stream.rs","byte_start":547181,"byte_end":547190,"line_start":272,"line_end":272,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3639},{"krate":0,"index":3645},{"krate":0,"index":3652}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_exchange.rs","byte_start":563211,"byte_end":563222,"line_start":36,"line_end":36,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1797},{"krate":0,"index":1798},{"krate":0,"index":1799},{"krate":0,"index":1801}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_exchange.rs","byte_start":565067,"byte_end":565078,"line_start":92,"line_end":92,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1805},{"krate":0,"index":1806}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_exchange.rs","byte_start":568602,"byte_end":568620,"line_start":172,"line_end":172,"column_start":15,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1817}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_exchange.rs","byte_start":569161,"byte_end":569179,"line_start":189,"line_end":189,"column_start":26,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1822},{"krate":0,"index":1823}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_exchange.rs","byte_start":570087,"byte_end":570110,"line_start":218,"line_end":218,"column_start":26,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1838},{"krate":0,"index":1839}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_handle.rs","byte_start":573789,"byte_end":573801,"line_start":29,"line_end":29,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1866}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_handle.rs","byte_start":574231,"byte_end":574243,"line_start":42,"line_end":42,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1870}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_handle.rs","byte_start":574831,"byte_end":574845,"line_start":58,"line_end":58,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1873}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_handle.rs","byte_start":575157,"byte_end":575171,"line_start":70,"line_end":70,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1875},{"krate":0,"index":1876}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_multiplexer.rs","byte_start":580274,"byte_end":580287,"line_start":51,"line_end":51,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1945},{"krate":0,"index":1946},{"krate":0,"index":1947},{"krate":0,"index":1948},{"krate":0,"index":1949},{"krate":0,"index":1950},{"krate":0,"index":1951},{"krate":0,"index":1952}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_multiplexer.rs","byte_start":582717,"byte_end":582731,"line_start":131,"line_end":131,"column_start":13,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1966},{"krate":0,"index":1968},{"krate":0,"index":1970},{"krate":0,"index":1971},{"krate":0,"index":1972}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_multiplexer.rs","byte_start":587885,"byte_end":587906,"line_start":269,"line_end":269,"column_start":27,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1985},{"krate":0,"index":1986}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_multiplexer.rs","byte_start":588739,"byte_end":588753,"line_start":294,"line_end":294,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1990}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_multiplexer.rs","byte_start":589018,"byte_end":589032,"line_start":304,"line_end":304,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1994},{"krate":0,"index":1995},{"krate":0,"index":1997},{"krate":0,"index":1998},{"krate":0,"index":1999}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_multiplexer.rs","byte_start":592617,"byte_end":592631,"line_start":401,"line_end":401,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2003},{"krate":0,"index":2004}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_multiplexer.rs","byte_start":595907,"byte_end":595935,"line_start":477,"line_end":477,"column_start":6,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2009}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_multiplexer.rs","byte_start":596178,"byte_end":596206,"line_start":484,"line_end":484,"column_start":17,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2011},{"krate":0,"index":2012}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_multiplexer.rs","byte_start":596429,"byte_end":596457,"line_start":492,"line_end":492,"column_start":50,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":2014}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_multiplexer.rs","byte_start":596727,"byte_end":596760,"line_start":503,"line_end":503,"column_start":17,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2023},{"krate":0,"index":2024}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_request.rs","byte_start":598950,"byte_end":598960,"line_start":35,"line_end":35,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2034},{"krate":0,"index":2035},{"krate":0,"index":2036}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_request.rs","byte_start":599419,"byte_end":599429,"line_start":52,"line_end":52,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2038},{"krate":0,"index":2039}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_request.rs","byte_start":599547,"byte_end":599557,"line_start":59,"line_end":59,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2041}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_request.rs","byte_start":599672,"byte_end":599679,"line_start":65,"line_end":65,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2043}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_response.rs","byte_start":600822,"byte_end":600833,"line_start":26,"line_end":26,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2054},{"krate":0,"index":2055},{"krate":0,"index":2056},{"krate":0,"index":2057}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_response.rs","byte_start":601375,"byte_end":601386,"line_start":48,"line_end":48,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2059},{"krate":0,"index":2060}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_response.rs","byte_start":601502,"byte_end":601513,"line_start":56,"line_end":56,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2062}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_response.rs","byte_start":601626,"byte_end":601633,"line_start":62,"line_end":62,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2064}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_response.rs","byte_start":601749,"byte_end":601760,"line_start":68,"line_end":68,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2066}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_response.rs","byte_start":601904,"byte_end":601915,"line_start":74,"line_end":74,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2069}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/retry_dns_handle.rs","byte_start":603095,"byte_end":603109,"line_start":29,"line_end":29,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2086}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/retry_dns_handle.rs","byte_start":603462,"byte_end":603476,"line_start":41,"line_end":41,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2089},{"krate":0,"index":2090}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/retry_dns_handle.rs","byte_start":604401,"byte_end":604416,"line_start":71,"line_end":71,"column_start":39,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2100},{"krate":0,"index":2101}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/serial_message.rs","byte_start":607767,"byte_end":607780,"line_start":20,"line_end":20,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2110},{"krate":0,"index":2111},{"krate":0,"index":2112},{"krate":0,"index":2113},{"krate":0,"index":2114}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":553222,"byte_end":553237,"line_start":64,"line_end":64,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2139},{"krate":0,"index":2140}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":553890,"byte_end":553908,"line_start":86,"line_end":86,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2146}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":554354,"byte_end":554372,"line_start":101,"line_end":101,"column_start":26,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2148}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":555023,"byte_end":555045,"line_start":121,"line_end":121,"column_start":9,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2155},{"krate":0,"index":2156}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":555569,"byte_end":555591,"line_start":139,"line_end":139,"column_start":19,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2159}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":557530,"byte_end":557555,"line_start":191,"line_end":191,"column_start":9,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2171}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":557813,"byte_end":557838,"line_start":201,"line_end":201,"column_start":19,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2174}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":558402,"byte_end":558427,"line_start":228,"line_end":228,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2178},{"krate":0,"index":2179}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":559413,"byte_end":559430,"line_start":258,"line_end":258,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2187},{"krate":0,"index":2188}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":560131,"byte_end":560149,"line_start":286,"line_end":286,"column_start":9,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2195}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":560721,"byte_end":560747,"line_start":308,"line_end":308,"column_start":20,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2209},{"krate":0,"index":2210}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/lib.rs","byte_start":892,"byte_end":897,"line_start":30,"line_end":30,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":4}},{"kind":"Mod","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/lib.rs","byte_start":951,"byte_end":953,"line_start":33,"line_end":33,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":78}},{"kind":"Mod","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/mod.rs","byte_start":14376,"byte_end":14382,"line_start":21,"line_end":21,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":118}},{"kind":"Mod","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/mod.rs","byte_start":14392,"byte_end":14399,"line_start":22,"line_end":22,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":162}},{"kind":"Mod","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/mod.rs","byte_start":14409,"byte_end":14416,"line_start":23,"line_end":23,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":282}},{"kind":"Mod","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/mod.rs","byte_start":14426,"byte_end":14431,"line_start":24,"line_end":24,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":289}},{"kind":"Mod","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/mod.rs","byte_start":14441,"byte_end":14454,"line_start":25,"line_end":25,"column_start":9,"column_end":22},"ref_id":{"krate":0,"index":317}},{"kind":"Mod","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/lib.rs","byte_start":963,"byte_end":965,"line_start":34,"line_end":34,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":343}},{"kind":"Mod","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/mod.rs","byte_start":96297,"byte_end":96306,"line_start":19,"line_end":19,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":344}},{"kind":"Mod","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/mod.rs","byte_start":96382,"byte_end":96388,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":375}},{"kind":"Mod","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/mod.rs","byte_start":102147,"byte_end":102152,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":664}},{"kind":"Mod","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/mod.rs","byte_start":96398,"byte_end":96403,"line_start":24,"line_end":24,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":704}},{"kind":"Mod","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/mod.rs","byte_start":197301,"byte_end":197302,"line_start":22,"line_end":22,"column_start":9,"column_end":10},"ref_id":{"krate":0,"index":705}},{"kind":"Mod","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/mod.rs","byte_start":197312,"byte_end":197316,"line_start":23,"line_end":23,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":711}},{"kind":"Mod","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/mod.rs","byte_start":197326,"byte_end":197329,"line_start":24,"line_end":24,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":717}},{"kind":"Mod","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/mod.rs","byte_start":197339,"byte_end":197341,"line_start":25,"line_end":25,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":778}},{"kind":"Mod","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/mod.rs","byte_start":197351,"byte_end":197355,"line_start":26,"line_end":26,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":788}},{"kind":"Mod","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/mod.rs","byte_start":197365,"byte_end":197370,"line_start":27,"line_end":27,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":794}},{"kind":"Mod","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/mod.rs","byte_start":197380,"byte_end":197384,"line_start":28,"line_end":28,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":813}},{"kind":"Mod","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/mod.rs","byte_start":197394,"byte_end":197404,"line_start":29,"line_end":29,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":824}},{"kind":"Mod","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/mod.rs","byte_start":197414,"byte_end":197417,"line_start":30,"line_end":30,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":832}},{"kind":"Mod","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/mod.rs","byte_start":197427,"byte_end":197430,"line_start":31,"line_end":31,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":866}},{"kind":"Mod","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/mod.rs","byte_start":197440,"byte_end":197443,"line_start":32,"line_end":32,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":882}},{"kind":"Mod","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/mod.rs","byte_start":197453,"byte_end":197458,"line_start":33,"line_end":33,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":894}},{"kind":"Mod","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/mod.rs","byte_start":197468,"byte_end":197472,"line_start":34,"line_end":34,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":914}},{"kind":"Mod","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/mod.rs","byte_start":197482,"byte_end":197485,"line_start":35,"line_end":35,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":939}},{"kind":"Mod","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/mod.rs","byte_start":96413,"byte_end":96424,"line_start":25,"line_end":25,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":962}},{"kind":"Mod","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/mod.rs","byte_start":96434,"byte_end":96445,"line_start":26,"line_end":26,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":1011}},{"kind":"Mod","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/mod.rs","byte_start":96455,"byte_end":96463,"line_start":27,"line_end":27,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1046}},{"kind":"Mod","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/lib.rs","byte_start":975,"byte_end":984,"line_start":35,"line_end":35,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":1156}},{"kind":"Mod","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/mod.rs","byte_start":449346,"byte_end":449352,"line_start":19,"line_end":19,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1157}},{"kind":"Mod","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/lib.rs","byte_start":994,"byte_end":997,"line_start":36,"line_end":36,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1404}},{"kind":"Mod","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/lib.rs","byte_start":1007,"byte_end":1010,"line_start":37,"line_end":37,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1556}},{"kind":"Mod","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/lib.rs","byte_start":1020,"byte_end":1024,"line_start":38,"line_end":38,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1739}},{"kind":"Mod","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":551849,"byte_end":551859,"line_start":21,"line_end":21,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":1840}},{"kind":"Mod","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":551869,"byte_end":551884,"line_start":22,"line_end":22,"column_start":9,"column_end":24},"ref_id":{"krate":0,"index":1887}},{"kind":"Mod","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":551894,"byte_end":551905,"line_start":23,"line_end":23,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":2028}},{"kind":"Mod","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":551915,"byte_end":551927,"line_start":24,"line_end":24,"column_start":9,"column_end":21},"ref_id":{"krate":0,"index":2044}},{"kind":"Mod","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":551937,"byte_end":551953,"line_start":25,"line_end":25,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":2071}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":7269,"byte_end":7279,"line_start":197,"line_end":197,"column_start":6,"column_end":16},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2320},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":7417,"byte_end":7427,"line_start":204,"line_end":204,"column_start":16,"column_end":26},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":2320},"to":{"krate":2,"index":2181}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":7581,"byte_end":7591,"line_start":212,"line_end":212,"column_start":15,"column_end":25},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":2320},"to":{"krate":15,"index":92}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":7781,"byte_end":7791,"line_start":222,"line_end":222,"column_start":23,"column_end":33},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2320},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":7934,"byte_end":7944,"line_start":228,"line_end":228,"column_start":31,"column_end":41},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2320},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":8115,"byte_end":8125,"line_start":236,"line_end":236,"column_start":40,"column_end":50},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2320},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":8254,"byte_end":8264,"line_start":242,"line_end":242,"column_start":29,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2320},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":8389,"byte_end":8399,"line_start":248,"line_end":248,"column_start":23,"column_end":33},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2320},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":8517,"byte_end":8527,"line_start":254,"line_end":254,"column_start":26,"column_end":36},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2320},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":8792,"byte_end":8802,"line_start":263,"line_end":263,"column_start":40,"column_end":50},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2320},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":8949,"byte_end":8959,"line_start":269,"line_end":269,"column_start":28,"column_end":38},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2320},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":9091,"byte_end":9101,"line_start":275,"line_end":275,"column_start":30,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":2320},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":9231,"byte_end":9241,"line_start":281,"line_end":281,"column_start":27,"column_end":37},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":2320},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":9367,"byte_end":9377,"line_start":287,"line_end":287,"column_start":24,"column_end":34},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2320},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":9512,"byte_end":9522,"line_start":293,"line_end":293,"column_start":34,"column_end":44},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":2320},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":9674,"byte_end":9684,"line_start":299,"line_end":299,"column_start":38,"column_end":48},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":2320},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":10013,"byte_end":10026,"line_start":314,"line_end":314,"column_start":32,"column_end":45},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":2324},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":10180,"byte_end":10193,"line_start":320,"line_end":320,"column_start":32,"column_end":45},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":2324},"to":{"krate":1,"index":1616}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":10511,"byte_end":10522,"line_start":336,"line_end":336,"column_start":32,"column_end":43},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":2328},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":10676,"byte_end":10687,"line_start":342,"line_end":342,"column_start":32,"column_end":43},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":2328},"to":{"krate":1,"index":1616}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":10818,"byte_end":10823,"line_start":349,"line_end":349,"column_start":31,"column_end":36},"kind":{"Impl":{"id":22}},"from":{"krate":1,"index":2469},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":11093,"byte_end":11099,"line_start":358,"line_end":358,"column_start":27,"column_end":33},"kind":{"Impl":{"id":23}},"from":{"krate":5,"index":4497},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":11185,"byte_end":11199,"line_start":364,"line_end":364,"column_start":16,"column_end":30},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":2222},"to":{"krate":2,"index":2181}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":13457,"byte_end":13461,"line_start":413,"line_end":413,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2258},"to":{"krate":0,"index":75}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":13476,"byte_end":13480,"line_start":413,"line_end":413,"column_start":46,"column_end":50},"kind":"SuperTrait","from":{"krate":15,"index":92},"to":{"krate":0,"index":75}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":13483,"byte_end":13488,"line_start":413,"line_end":413,"column_start":53,"column_end":58},"kind":"SuperTrait","from":{"krate":2,"index":2181},"to":{"krate":0,"index":75}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/error.rs","byte_start":13520,"byte_end":13521,"line_start":415,"line_end":415,"column_start":28,"column_end":29},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":77},"to":{"krate":0,"index":75}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/edns.rs","byte_start":16197,"byte_end":16201,"line_start":43,"line_end":43,"column_start":18,"column_end":22},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":2332},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/edns.rs","byte_start":16418,"byte_end":16422,"line_start":55,"line_end":55,"column_start":6,"column_end":10},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":2332},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/edns.rs","byte_start":18110,"byte_end":18114,"line_start":118,"line_end":118,"column_start":31,"column_end":35},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":2332},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/edns.rs","byte_start":19265,"byte_end":19271,"line_start":151,"line_end":151,"column_start":29,"column_end":35},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":3541},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/edns.rs","byte_start":20308,"byte_end":20312,"line_start":180,"line_end":180,"column_start":23,"column_end":27},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":2332},"to":{"krate":0,"index":1380}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/header.rs","byte_start":24706,"byte_end":24712,"line_start":85,"line_end":85,"column_start":18,"column_end":24},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":2346},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/header.rs","byte_start":25254,"byte_end":25260,"line_start":106,"line_end":106,"column_start":6,"column_end":12},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":2346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/header.rs","byte_start":35422,"byte_end":35428,"line_start":377,"line_end":377,"column_start":23,"column_end":29},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":2346},"to":{"krate":0,"index":1380}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/header.rs","byte_start":36928,"byte_end":36934,"line_start":424,"line_end":424,"column_start":31,"column_end":37},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":2346},"to":{"krate":0,"index":1383}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":45794,"byte_end":45801,"line_start":122,"line_end":122,"column_start":6,"column_end":13},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":2442},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":63476,"byte_end":63483,"line_start":653,"line_end":653,"column_start":16,"column_end":23},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":2442},"to":{"krate":2,"index":1704}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":63847,"byte_end":63851,"line_start":664,"line_end":664,"column_start":29,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":1533},"to":{"krate":0,"index":254}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":63854,"byte_end":63858,"line_start":664,"line_end":664,"column_start":36,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":1545},"to":{"krate":0,"index":254}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":64710,"byte_end":64730,"line_start":684,"line_end":684,"column_start":6,"column_end":26},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":256},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":64849,"byte_end":64869,"line_start":691,"line_end":691,"column_start":27,"column_end":47},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":256},"to":{"krate":0,"index":254}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":65729,"byte_end":65730,"line_start":714,"line_end":714,"column_start":76,"column_end":77},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":269},"to":{"krate":0,"index":265}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":67816,"byte_end":67823,"line_start":776,"line_end":776,"column_start":23,"column_end":30},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":2442},"to":{"krate":0,"index":1380}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/message.rs","byte_start":68233,"byte_end":68240,"line_start":791,"line_end":791,"column_start":31,"column_end":38},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":2442},"to":{"krate":0,"index":1383}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/op_code.rs","byte_start":75352,"byte_end":75358,"line_start":91,"line_end":91,"column_start":6,"column_end":12},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":2460},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/query.rs","byte_start":77891,"byte_end":77896,"line_start":59,"line_end":59,"column_start":18,"column_end":23},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":2479},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/query.rs","byte_start":78170,"byte_end":78175,"line_start":70,"line_end":70,"column_start":6,"column_end":11},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":2479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/query.rs","byte_start":80314,"byte_end":80319,"line_start":134,"line_end":134,"column_start":23,"column_end":28},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":2479},"to":{"krate":0,"index":1380}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/query.rs","byte_start":80558,"byte_end":80563,"line_start":144,"line_end":144,"column_start":31,"column_end":36},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":2479},"to":{"krate":0,"index":1383}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/query.rs","byte_start":80901,"byte_end":80906,"line_start":158,"line_end":158,"column_start":18,"column_end":23},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":2479},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/response_code.rs","byte_start":86690,"byte_end":86702,"line_start":131,"line_end":131,"column_start":6,"column_end":18},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":2497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/response_code.rs","byte_start":89958,"byte_end":89970,"line_start":174,"line_end":174,"column_start":18,"column_end":30},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":2497},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/op/response_code.rs","byte_start":93102,"byte_end":93114,"line_start":236,"line_end":236,"column_start":20,"column_end":32},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":2497},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/dns_class.rs","byte_start":97831,"byte_end":97839,"line_start":38,"line_end":38,"column_start":18,"column_end":26},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":2551},"to":{"krate":2,"index":6808}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/dns_class.rs","byte_start":98517,"byte_end":98525,"line_start":62,"line_end":62,"column_start":6,"column_end":14},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":2551},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/dns_class.rs","byte_start":99363,"byte_end":99371,"line_start":90,"line_end":90,"column_start":23,"column_end":31},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":2551},"to":{"krate":0,"index":1380}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/dns_class.rs","byte_start":99520,"byte_end":99528,"line_start":96,"line_end":96,"column_start":31,"column_end":39},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":2551},"to":{"krate":0,"index":1383}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/dns_class.rs","byte_start":100910,"byte_end":100918,"line_start":149,"line_end":149,"column_start":31,"column_end":39},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":2551},"to":{"krate":2,"index":2077}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/dns_class.rs","byte_start":101039,"byte_end":101047,"line_start":155,"line_end":155,"column_start":14,"column_end":22},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":2551},"to":{"krate":2,"index":2066}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/dns_class.rs","byte_start":101171,"byte_end":101179,"line_start":161,"line_end":161,"column_start":18,"column_end":26},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":2551},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":103338,"byte_end":103343,"line_start":34,"line_end":34,"column_start":6,"column_end":11},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":2580},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":108864,"byte_end":108869,"line_start":202,"line_end":202,"column_start":22,"column_end":27},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":2580},"to":{"krate":2,"index":2249}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":108951,"byte_end":108956,"line_start":208,"line_end":208,"column_start":23,"column_end":28},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":2580},"to":{"krate":2,"index":2325}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":109486,"byte_end":109491,"line_start":226,"line_end":226,"column_start":18,"column_end":23},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":2580},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":110534,"byte_end":110539,"line_start":256,"line_end":256,"column_start":16,"column_end":21},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":2580},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":110730,"byte_end":110735,"line_start":263,"line_end":263,"column_start":27,"column_end":32},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":2580},"to":{"krate":2,"index":2040}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":110856,"byte_end":110861,"line_start":269,"line_end":269,"column_start":28,"column_end":33},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":2580},"to":{"krate":2,"index":2077}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":110979,"byte_end":110984,"line_start":275,"line_end":275,"column_start":14,"column_end":19},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":2580},"to":{"krate":2,"index":2066}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":111106,"byte_end":111111,"line_start":281,"line_end":281,"column_start":15,"column_end":20},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":2580},"to":{"krate":2,"index":7278}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":111585,"byte_end":111598,"line_start":301,"line_end":301,"column_start":19,"column_end":32},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":441},"to":{"krate":0,"index":439}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":111761,"byte_end":111776,"line_start":310,"line_end":310,"column_start":19,"column_end":34},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":445},"to":{"krate":0,"index":439}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":111939,"byte_end":111944,"line_start":317,"line_end":317,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":1538},"to":{"krate":0,"index":449}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":112177,"byte_end":112182,"line_start":328,"line_end":328,"column_start":20,"column_end":25},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2580},"to":{"krate":0,"index":449}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":112411,"byte_end":112417,"line_start":340,"line_end":340,"column_start":20,"column_end":26},"kind":{"Impl":{"id":73}},"from":{"krate":5,"index":4497},"to":{"krate":0,"index":449}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/label.rs","byte_start":112667,"byte_end":112670,"line_start":352,"line_end":352,"column_start":20,"column_end":23},"kind":{"Impl":{"id":74}},"from":{"krate":5,"index":3846},"to":{"krate":0,"index":449}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":118465,"byte_end":118469,"line_start":34,"line_end":34,"column_start":6,"column_end":10},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":2588},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":145374,"byte_end":145387,"line_start":812,"line_end":812,"column_start":19,"column_end":32},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":550},"to":{"krate":0,"index":546}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":145641,"byte_end":145653,"line_start":823,"line_end":823,"column_start":19,"column_end":31},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":556},"to":{"krate":0,"index":546}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":145973,"byte_end":145982,"line_start":836,"line_end":836,"column_start":23,"column_end":32},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":562},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":146145,"byte_end":146154,"line_start":844,"line_end":844,"column_start":32,"column_end":41},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":562},"to":{"krate":2,"index":3939}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":146195,"byte_end":146204,"line_start":845,"line_end":845,"column_start":34,"column_end":43},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":562},"to":{"krate":2,"index":3910}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":146512,"byte_end":146516,"line_start":860,"line_end":860,"column_start":23,"column_end":27},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":2588},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":146701,"byte_end":146705,"line_start":869,"line_end":869,"column_start":25,"column_end":29},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2588},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":147584,"byte_end":147588,"line_start":897,"line_end":897,"column_start":25,"column_end":29},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":2588},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":149288,"byte_end":149292,"line_start":940,"line_end":940,"column_start":26,"column_end":30},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2588},"to":{"krate":2,"index":2040}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":149428,"byte_end":149432,"line_start":946,"line_end":946,"column_start":15,"column_end":19},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2588},"to":{"krate":2,"index":7278}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":149793,"byte_end":149797,"line_start":964,"line_end":964,"column_start":23,"column_end":27},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2588},"to":{"krate":0,"index":1380}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":150028,"byte_end":150032,"line_start":971,"line_end":971,"column_start":31,"column_end":35},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2588},"to":{"krate":0,"index":1383}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":155791,"byte_end":155795,"line_start":1108,"line_end":1108,"column_start":23,"column_end":27},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2588},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":155949,"byte_end":155953,"line_start":1114,"line_end":1114,"column_start":23,"column_end":27},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2588},"to":{"krate":2,"index":1780}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":156093,"byte_end":156097,"line_start":1122,"line_end":1122,"column_start":27,"column_end":31},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2588},"to":{"krate":2,"index":2077}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":156214,"byte_end":156218,"line_start":1128,"line_end":1128,"column_start":14,"column_end":18},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2588},"to":{"krate":2,"index":2066}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":158249,"byte_end":158253,"line_start":1177,"line_end":1177,"column_start":18,"column_end":22},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2588},"to":{"krate":2,"index":6808}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":158546,"byte_end":158551,"line_start":1187,"line_end":1187,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":1538},"to":{"krate":0,"index":638}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":158848,"byte_end":158854,"line_start":1199,"line_end":1199,"column_start":19,"column_end":25},"kind":{"Impl":{"id":93}},"from":{"krate":5,"index":4497},"to":{"krate":0,"index":638}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/name.rs","byte_start":159046,"byte_end":159047,"line_start":1206,"line_end":1206,"column_start":22,"column_end":23},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":646},"to":{"krate":0,"index":638}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/try_parse_ip.rs","byte_start":173965,"byte_end":173969,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2588},"to":{"krate":0,"index":654}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":192235,"byte_end":192244,"line_start":395,"line_end":395,"column_start":6,"column_end":15},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":668},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/domain/usage.rs","byte_start":196247,"byte_end":196256,"line_start":559,"line_end":559,"column_start":16,"column_end":25},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":668},"to":{"krate":2,"index":1704}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","byte_start":211810,"byte_end":211813,"line_start":139,"line_end":139,"column_start":6,"column_end":9},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2863},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","byte_start":215738,"byte_end":215746,"line_start":241,"line_end":241,"column_start":6,"column_end":14},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2881},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","byte_start":216811,"byte_end":216819,"line_start":288,"line_end":288,"column_start":23,"column_end":31},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2881},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","byte_start":217740,"byte_end":217745,"line_start":321,"line_end":321,"column_start":6,"column_end":11},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2905},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/caa.rs","byte_start":229982,"byte_end":229990,"line_start":658,"line_end":658,"column_start":6,"column_end":14},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2930},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/mx.rs","byte_start":245614,"byte_end":245616,"line_start":46,"line_end":46,"column_start":6,"column_end":8},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2947},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/naptr.rs","byte_start":254041,"byte_end":254046,"line_start":53,"line_end":53,"column_start":6,"column_end":11},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2964},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/null.rs","byte_start":265313,"byte_end":265317,"line_start":44,"line_end":44,"column_start":6,"column_end":10},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2985},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/openpgpkey.rs","byte_start":267916,"byte_end":267926,"line_start":25,"line_end":25,"column_start":6,"column_end":16},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":3003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/opt.rs","byte_start":276630,"byte_end":276633,"line_start":170,"line_end":170,"column_start":6,"column_end":9},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":3019},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/opt.rs","byte_start":282277,"byte_end":282285,"line_start":334,"line_end":334,"column_start":20,"column_end":28},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":3052},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/opt.rs","byte_start":284438,"byte_end":284448,"line_start":401,"line_end":401,"column_start":6,"column_end":16},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":3097},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/opt.rs","byte_start":285300,"byte_end":285310,"line_start":425,"line_end":425,"column_start":23,"column_end":33},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":3097},"to":{"krate":0,"index":1380}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/opt.rs","byte_start":285834,"byte_end":285844,"line_start":438,"line_end":438,"column_start":41,"column_end":51},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":3097},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/opt.rs","byte_start":286356,"byte_end":286359,"line_start":452,"line_end":452,"column_start":35,"column_end":38},"kind":{"Impl":{"id":114}},"from":{"krate":5,"index":3846},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/opt.rs","byte_start":286791,"byte_end":286799,"line_start":464,"line_end":464,"column_start":35,"column_end":43},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":3052},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/soa.rs","byte_start":291172,"byte_end":291175,"line_start":78,"line_end":78,"column_start":6,"column_end":9},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":3126},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/srv.rs","byte_start":301071,"byte_end":301074,"line_start":91,"line_end":91,"column_start":6,"column_end":9},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":3148},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/sshfp.rs","byte_start":309353,"byte_end":309358,"line_start":46,"line_end":46,"column_start":6,"column_end":11},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":3167},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/sshfp.rs","byte_start":311078,"byte_end":311087,"line_start":121,"line_end":121,"column_start":19,"column_end":28},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":3185},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/sshfp.rs","byte_start":312719,"byte_end":312734,"line_start":183,"line_end":183,"column_start":19,"column_end":34},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":3214},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/tlsa.rs","byte_start":323363,"byte_end":323372,"line_start":132,"line_end":132,"column_start":19,"column_end":28},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":3258},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/tlsa.rs","byte_start":325097,"byte_end":325105,"line_start":191,"line_end":191,"column_start":19,"column_end":27},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":3287},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/tlsa.rs","byte_start":326721,"byte_end":326729,"line_start":252,"line_end":252,"column_start":19,"column_end":27},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":3312},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/tlsa.rs","byte_start":327321,"byte_end":327325,"line_start":276,"line_end":276,"column_start":6,"column_end":10},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":3239},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rdata/txt.rs","byte_start":335815,"byte_end":335818,"line_start":42,"line_end":42,"column_start":6,"column_end":9},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":3339},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_data.rs","byte_start":365235,"byte_end":365240,"line_start":600,"line_end":600,"column_start":6,"column_end":11},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":3355},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_data.rs","byte_start":376918,"byte_end":376923,"line_start":869,"line_end":869,"column_start":28,"column_end":33},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":3355},"to":{"krate":2,"index":2077}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_data.rs","byte_start":377041,"byte_end":377046,"line_start":875,"line_end":875,"column_start":14,"column_end":19},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":3355},"to":{"krate":2,"index":2066}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":389428,"byte_end":389438,"line_start":109,"line_end":109,"column_start":6,"column_end":16},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":3480},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":390066,"byte_end":390076,"line_start":138,"line_end":138,"column_start":18,"column_end":28},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":3480},"to":{"krate":2,"index":6808}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":391595,"byte_end":391605,"line_start":180,"line_end":180,"column_start":20,"column_end":30},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":3480},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":393114,"byte_end":393124,"line_start":227,"line_end":227,"column_start":23,"column_end":33},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":3480},"to":{"krate":0,"index":1380}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":393273,"byte_end":393283,"line_start":233,"line_end":233,"column_start":31,"column_end":41},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":3480},"to":{"krate":0,"index":1383}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":396370,"byte_end":396380,"line_start":331,"line_end":331,"column_start":33,"column_end":43},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":3480},"to":{"krate":2,"index":2077}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":396581,"byte_end":396591,"line_start":338,"line_end":338,"column_start":14,"column_end":24},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":3480},"to":{"krate":2,"index":2066}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/record_type.rs","byte_start":396715,"byte_end":396725,"line_start":344,"line_end":344,"column_start":18,"column_end":28},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":3480},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/resource.rs","byte_start":402008,"byte_end":402014,"line_start":74,"line_end":74,"column_start":18,"column_end":24},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":3541},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/resource.rs","byte_start":402332,"byte_end":402338,"line_start":87,"line_end":87,"column_start":6,"column_end":12},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":3541},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/resource.rs","byte_start":407095,"byte_end":407101,"line_start":235,"line_end":235,"column_start":24,"column_end":30},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":3541},"to":{"krate":0,"index":1130}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/resource.rs","byte_start":407209,"byte_end":407215,"line_start":241,"line_end":241,"column_start":23,"column_end":29},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":3541},"to":{"krate":0,"index":1380}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/resource.rs","byte_start":407867,"byte_end":407873,"line_start":265,"line_end":265,"column_start":31,"column_end":37},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":3541},"to":{"krate":0,"index":1383}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/resource.rs","byte_start":411102,"byte_end":411108,"line_start":334,"line_end":334,"column_start":20,"column_end":26},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":3541},"to":{"krate":2,"index":2040}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/resource.rs","byte_start":412323,"byte_end":412329,"line_start":366,"line_end":366,"column_start":29,"column_end":35},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":3541},"to":{"krate":2,"index":2077}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rr_set.rs","byte_start":417666,"byte_end":417675,"line_start":30,"line_end":30,"column_start":6,"column_end":15},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":3556},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rr_set.rs","byte_start":432342,"byte_end":432351,"line_start":433,"line_end":433,"column_start":23,"column_end":32},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":3556},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rr_set.rs","byte_start":432803,"byte_end":432808,"line_start":449,"line_end":449,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1538},"to":{"krate":0,"index":1130}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rr_set.rs","byte_start":432948,"byte_end":432957,"line_start":455,"line_end":455,"column_start":24,"column_end":33},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":3556},"to":{"krate":0,"index":1130}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rr_set.rs","byte_start":433043,"byte_end":433052,"line_start":461,"line_end":461,"column_start":23,"column_end":32},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":3556},"to":{"krate":2,"index":3951}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rr_set.rs","byte_start":435373,"byte_end":435385,"line_start":538,"line_end":538,"column_start":10,"column_end":22},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":3572},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/rr/rr_set.rs","byte_start":435603,"byte_end":435615,"line_start":548,"line_end":548,"column_start":23,"column_end":35},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":3572},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/decoder.rs","byte_start":453406,"byte_end":453416,"line_start":32,"line_end":32,"column_start":10,"column_end":20},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":1164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":461874,"byte_end":461884,"line_start":33,"line_end":33,"column_start":14,"column_end":24},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":1205},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":463831,"byte_end":463841,"line_start":98,"line_end":98,"column_start":10,"column_end":20},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":1219},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":475640,"byte_end":475652,"line_start":454,"line_end":454,"column_start":24,"column_end":36},"kind":"SuperTrait","from":{"krate":0,"index":1380},"to":{"krate":0,"index":1283}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":475820,"byte_end":475826,"line_start":465,"line_end":465,"column_start":22,"column_end":28},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":2346},"to":{"krate":0,"index":1283}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":476072,"byte_end":476077,"line_start":478,"line_end":478,"column_start":22,"column_end":27},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":3582},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/encoder.rs","byte_start":476384,"byte_end":476392,"line_start":493,"line_end":493,"column_start":6,"column_end":14},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":1293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/restrict.rs","byte_start":480658,"byte_end":480666,"line_start":7,"line_end":7,"column_start":9,"column_end":17},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":3603},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/restrict.rs","byte_start":482901,"byte_end":482909,"line_start":81,"line_end":81,"column_start":13,"column_end":21},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":1310},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/restrict.rs","byte_start":484228,"byte_end":484236,"line_start":122,"line_end":122,"column_start":25,"column_end":33},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":3603},"to":{"krate":0,"index":1331}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/restrict.rs","byte_start":484797,"byte_end":484805,"line_start":137,"line_end":137,"column_start":25,"column_end":33},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":3603},"to":{"krate":0,"index":1331}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/restrict.rs","byte_start":485357,"byte_end":485365,"line_start":152,"line_end":152,"column_start":25,"column_end":33},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":3603},"to":{"krate":0,"index":1331}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/restrict.rs","byte_start":485926,"byte_end":485932,"line_start":167,"line_end":167,"column_start":31,"column_end":37},"kind":{"Impl":{"id":169}},"from":{"krate":2,"index":29578},"to":{"krate":0,"index":1331}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/mod.rs","byte_start":450840,"byte_end":450845,"line_start":51,"line_end":51,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":1538},"to":{"krate":0,"index":1383}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/serialize/binary/mod.rs","byte_start":452046,"byte_end":452049,"line_start":98,"line_end":98,"column_start":23,"column_end":26},"kind":{"Impl":{"id":176}},"from":{"krate":5,"index":3846},"to":{"krate":0,"index":1380}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_client_stream.rs","byte_start":489746,"byte_end":489761,"line_start":33,"line_end":33,"column_start":35,"column_end":50},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":1436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_client_stream.rs","byte_start":491127,"byte_end":491142,"line_start":78,"line_end":78,"column_start":40,"column_end":55},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":1436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_client_stream.rs","byte_start":491353,"byte_end":491368,"line_start":85,"line_end":85,"column_start":52,"column_end":67},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":1436},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_client_stream.rs","byte_start":491594,"byte_end":491609,"line_start":91,"line_end":91,"column_start":68,"column_end":83},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":1436},"to":{"krate":0,"index":2136}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_client_stream.rs","byte_start":491765,"byte_end":491780,"line_start":97,"line_end":97,"column_start":59,"column_end":74},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":1436},"to":{"krate":25,"index":68}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_client_stream.rs","byte_start":492595,"byte_end":492611,"line_start":120,"line_end":120,"column_start":20,"column_end":36},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":1457},"to":{"krate":2,"index":7931}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_client_stream.rs","byte_start":492942,"byte_end":492956,"line_start":133,"line_end":133,"column_start":18,"column_end":32},"kind":{"Impl":{"id":183}},"from":{"krate":22,"index":2388},"to":{"krate":0,"index":3620}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_stream.rs","byte_start":500173,"byte_end":500182,"line_start":89,"line_end":89,"column_start":9,"column_end":18},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":1513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_stream.rs","byte_start":500712,"byte_end":500721,"line_start":112,"line_end":112,"column_start":28,"column_end":37},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":1513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_stream.rs","byte_start":503770,"byte_end":503779,"line_start":193,"line_end":193,"column_start":55,"column_end":64},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":1513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/tcp/tcp_stream.rs","byte_start":505007,"byte_end":505016,"line_start":230,"line_end":230,"column_start":74,"column_end":83},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":1513},"to":{"krate":25,"index":68}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_client_stream.rs","byte_start":521853,"byte_end":521868,"line_start":44,"line_end":44,"column_start":15,"column_end":30},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":1593},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_client_stream.rs","byte_start":522975,"byte_end":522990,"line_start":72,"line_end":72,"column_start":37,"column_end":52},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":1593},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_client_stream.rs","byte_start":523609,"byte_end":523624,"line_start":93,"line_end":93,"column_start":49,"column_end":64},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":1593},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_client_stream.rs","byte_start":524100,"byte_end":524115,"line_start":108,"line_end":108,"column_start":9,"column_end":24},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":1593},"to":{"krate":0,"index":2160}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_client_stream.rs","byte_start":526295,"byte_end":526310,"line_start":177,"line_end":177,"column_start":48,"column_end":63},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":1593},"to":{"krate":25,"index":68}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_client_stream.rs","byte_start":526836,"byte_end":526847,"line_start":196,"line_end":196,"column_start":6,"column_end":17},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":1631},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_client_stream.rs","byte_start":527701,"byte_end":527712,"line_start":223,"line_end":223,"column_start":17,"column_end":28},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":1631},"to":{"krate":2,"index":7931}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_client_stream.rs","byte_start":528323,"byte_end":528339,"line_start":247,"line_end":247,"column_start":56,"column_end":72},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":1644},"to":{"krate":2,"index":7931}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_client_stream.rs","byte_start":528943,"byte_end":528961,"line_start":267,"line_end":267,"column_start":6,"column_end":24},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":1656},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_stream.rs","byte_start":539049,"byte_end":539058,"line_start":46,"line_end":46,"column_start":37,"column_end":46},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":1701},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_stream.rs","byte_start":541964,"byte_end":541973,"line_start":121,"line_end":121,"column_start":15,"column_end":24},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":1701},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_stream.rs","byte_start":542269,"byte_end":542278,"line_start":133,"line_end":133,"column_start":48,"column_end":57},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":1701},"to":{"krate":25,"index":68}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_stream.rs","byte_start":544191,"byte_end":544210,"line_start":184,"line_end":184,"column_start":20,"column_end":39},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":1719},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_stream.rs","byte_start":544868,"byte_end":544887,"line_start":203,"line_end":203,"column_start":31,"column_end":50},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":1719},"to":{"krate":2,"index":7931}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/udp/udp_stream.rs","byte_start":547181,"byte_end":547190,"line_start":272,"line_end":272,"column_start":25,"column_end":34},"kind":{"Impl":{"id":202}},"from":{"krate":22,"index":2517},"to":{"krate":0,"index":3625}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_exchange.rs","byte_start":563211,"byte_end":563222,"line_start":36,"line_end":36,"column_start":12,"column_end":23},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":1789},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_exchange.rs","byte_start":565067,"byte_end":565078,"line_start":92,"line_end":92,"column_start":23,"column_end":34},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":1789},"to":{"krate":2,"index":7931}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_exchange.rs","byte_start":568602,"byte_end":568620,"line_start":172,"line_end":172,"column_start":15,"column_end":33},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":1807},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_exchange.rs","byte_start":569161,"byte_end":569179,"line_start":189,"line_end":189,"column_start":26,"column_end":44},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":1807},"to":{"krate":2,"index":7931}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_exchange.rs","byte_start":570087,"byte_end":570110,"line_start":218,"line_end":218,"column_start":26,"column_end":49},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":1824},"to":{"krate":2,"index":7931}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_handle.rs","byte_start":573789,"byte_end":573801,"line_start":29,"line_end":29,"column_start":6,"column_end":18},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":1863},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_handle.rs","byte_start":574057,"byte_end":574061,"line_start":37,"line_end":37,"column_start":38,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":1533},"to":{"krate":0,"index":1867}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_handle.rs","byte_start":574231,"byte_end":574243,"line_start":42,"line_end":42,"column_start":26,"column_end":38},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":1863},"to":{"krate":0,"index":1867}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_handle.rs","byte_start":574831,"byte_end":574845,"line_start":58,"line_end":58,"column_start":6,"column_end":20},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":3660},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_handle.rs","byte_start":575157,"byte_end":575171,"line_start":70,"line_end":70,"column_start":20,"column_end":34},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":3660},"to":{"krate":0,"index":1881}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_handle.rs","byte_start":576329,"byte_end":576334,"line_start":101,"line_end":101,"column_start":32,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":2181},"to":{"krate":0,"index":1881}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_handle.rs","byte_start":576337,"byte_end":576341,"line_start":101,"line_end":101,"column_start":40,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":1533},"to":{"krate":0,"index":1881}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_handle.rs","byte_start":576344,"byte_end":576349,"line_start":101,"line_end":101,"column_start":47,"column_end":52},"kind":"SuperTrait","from":{"krate":2,"index":1572},"to":{"krate":0,"index":1881}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_multiplexer.rs","byte_start":580274,"byte_end":580287,"line_start":51,"line_end":51,"column_start":6,"column_end":19},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":1937},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_multiplexer.rs","byte_start":582717,"byte_end":582731,"line_start":131,"line_end":131,"column_start":13,"column_end":27},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":1953},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_multiplexer.rs","byte_start":587885,"byte_end":587906,"line_start":269,"line_end":269,"column_start":27,"column_end":48},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":1973},"to":{"krate":2,"index":7931}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_multiplexer.rs","byte_start":588739,"byte_end":588753,"line_start":294,"line_end":294,"column_start":25,"column_end":39},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":1953},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_multiplexer.rs","byte_start":589018,"byte_end":589032,"line_start":304,"line_end":304,"column_start":34,"column_end":48},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":1953},"to":{"krate":0,"index":2160}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_multiplexer.rs","byte_start":592617,"byte_end":592631,"line_start":401,"line_end":401,"column_start":24,"column_end":38},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":1953},"to":{"krate":25,"index":68}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_multiplexer.rs","byte_start":595907,"byte_end":595935,"line_start":477,"line_end":477,"column_start":6,"column_end":34},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":2005},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_multiplexer.rs","byte_start":596178,"byte_end":596206,"line_start":484,"line_end":484,"column_start":17,"column_end":45},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":2005},"to":{"krate":2,"index":7931}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_multiplexer.rs","byte_start":596429,"byte_end":596457,"line_start":492,"line_end":492,"column_start":50,"column_end":78},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":2005},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_multiplexer.rs","byte_start":596727,"byte_end":596760,"line_start":503,"line_end":503,"column_start":17,"column_end":50},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":2015},"to":{"krate":2,"index":7931}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_request.rs","byte_start":598950,"byte_end":598960,"line_start":35,"line_end":35,"column_start":6,"column_end":16},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":3670},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_request.rs","byte_start":599419,"byte_end":599429,"line_start":52,"line_end":52,"column_start":16,"column_end":26},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":3670},"to":{"krate":2,"index":1704}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_request.rs","byte_start":599547,"byte_end":599557,"line_start":59,"line_end":59,"column_start":19,"column_end":29},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":3670},"to":{"krate":2,"index":1715}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_request.rs","byte_start":599672,"byte_end":599679,"line_start":65,"line_end":65,"column_start":27,"column_end":34},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":2442},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_response.rs","byte_start":600822,"byte_end":600833,"line_start":26,"line_end":26,"column_start":6,"column_end":17},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":3675},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_response.rs","byte_start":601375,"byte_end":601386,"line_start":48,"line_end":48,"column_start":16,"column_end":27},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":3675},"to":{"krate":2,"index":1704}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_response.rs","byte_start":601502,"byte_end":601513,"line_start":56,"line_end":56,"column_start":19,"column_end":30},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":3675},"to":{"krate":2,"index":1715}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_response.rs","byte_start":601626,"byte_end":601633,"line_start":62,"line_end":62,"column_start":28,"column_end":35},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":2442},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_response.rs","byte_start":601749,"byte_end":601760,"line_start":68,"line_end":68,"column_start":24,"column_end":35},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":3675},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/dns_response.rs","byte_start":601904,"byte_end":601915,"line_start":74,"line_end":74,"column_start":39,"column_end":50},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":3675},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/retry_dns_handle.rs","byte_start":603095,"byte_end":603109,"line_start":29,"line_end":29,"column_start":28,"column_end":42},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":3683},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/retry_dns_handle.rs","byte_start":603462,"byte_end":603476,"line_start":41,"line_end":41,"column_start":23,"column_end":37},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":3683},"to":{"krate":0,"index":1881}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/retry_dns_handle.rs","byte_start":604401,"byte_end":604416,"line_start":71,"line_end":71,"column_start":39,"column_end":54},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":2092},"to":{"krate":2,"index":7931}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/serial_message.rs","byte_start":607767,"byte_end":607780,"line_start":20,"line_end":20,"column_start":6,"column_end":19},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":2106},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":552886,"byte_end":552892,"line_start":51,"line_end":51,"column_start":5,"column_end":11},"kind":"SuperTrait","from":{"krate":25,"index":68},"to":{"krate":0,"index":2136}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":552937,"byte_end":552944,"line_start":51,"line_end":51,"column_start":56,"column_end":63},"kind":"SuperTrait","from":{"krate":2,"index":7641},"to":{"krate":0,"index":2136}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":552947,"byte_end":552951,"line_start":51,"line_end":51,"column_start":66,"column_end":70},"kind":"SuperTrait","from":{"krate":2,"index":1533},"to":{"krate":0,"index":2136}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":553222,"byte_end":553237,"line_start":64,"line_end":64,"column_start":6,"column_end":21},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":3690},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":553890,"byte_end":553908,"line_start":86,"line_end":86,"column_start":6,"column_end":24},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":2142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":554354,"byte_end":554372,"line_start":101,"line_end":101,"column_start":26,"column_end":44},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":2142},"to":{"krate":0,"index":1867}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":555023,"byte_end":555045,"line_start":121,"line_end":121,"column_start":9,"column_end":31},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":2150},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":555569,"byte_end":555591,"line_start":139,"line_end":139,"column_start":19,"column_end":41},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":2150},"to":{"krate":2,"index":2181}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":556162,"byte_end":556168,"line_start":156,"line_end":156,"column_start":5,"column_end":11},"kind":"SuperTrait","from":{"krate":25,"index":68},"to":{"krate":0,"index":2160}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":556212,"byte_end":556219,"line_start":156,"line_end":156,"column_start":55,"column_end":62},"kind":"SuperTrait","from":{"krate":2,"index":7641},"to":{"krate":0,"index":2160}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":556222,"byte_end":556226,"line_start":156,"line_end":156,"column_start":65,"column_end":69},"kind":"SuperTrait","from":{"krate":2,"index":1533},"to":{"krate":0,"index":2160}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":556229,"byte_end":556234,"line_start":156,"line_end":156,"column_start":72,"column_end":77},"kind":"SuperTrait","from":{"krate":2,"index":1572},"to":{"krate":0,"index":2160}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":557530,"byte_end":557555,"line_start":191,"line_end":191,"column_start":9,"column_end":34},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":2166},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":557813,"byte_end":557838,"line_start":201,"line_end":201,"column_start":19,"column_end":44},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":2166},"to":{"krate":2,"index":2181}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":558402,"byte_end":558427,"line_start":228,"line_end":228,"column_start":23,"column_end":48},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":2166},"to":{"krate":0,"index":1881}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":559413,"byte_end":559430,"line_start":258,"line_end":258,"column_start":9,"column_end":26},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":2181},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":560131,"byte_end":560149,"line_start":286,"line_end":286,"column_start":9,"column_end":27},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":2189},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/trust-dns-proto-0.18.0-alpha.2/src/xfer/mod.rs","byte_start":560721,"byte_end":560747,"line_start":308,"line_end":308,"column_start":20,"column_end":46},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":2196},"to":{"krate":2,"index":7931}}]}