{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4","program":"/Users/rosehsu/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","regex","/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"aho-corasick\"","--cfg","feature=\"default\"","--cfg","feature=\"memchr\"","--cfg","feature=\"perf\"","--cfg","feature=\"perf-cache\"","--cfg","feature=\"perf-dfa\"","--cfg","feature=\"perf-inline\"","--cfg","feature=\"perf-literal\"","--cfg","feature=\"std\"","--cfg","feature=\"thread_local\"","--cfg","feature=\"unicode\"","--cfg","feature=\"unicode-age\"","--cfg","feature=\"unicode-bool\"","--cfg","feature=\"unicode-case\"","--cfg","feature=\"unicode-gencat\"","--cfg","feature=\"unicode-perl\"","--cfg","feature=\"unicode-script\"","--cfg","feature=\"unicode-segment\"","-C","metadata=b82aeb707e5a8eb5","-C","extra-filename=-b82aeb707e5a8eb5","--out-dir","/Users/rosehsu/rust_learning/functionPrac/target/rls/debug/deps","-L","dependency=/Users/rosehsu/rust_learning/functionPrac/target/rls/debug/deps","--extern","aho_corasick=/Users/rosehsu/rust_learning/functionPrac/target/rls/debug/deps/libaho_corasick-cd9045c927615824.rmeta","--extern","memchr=/Users/rosehsu/rust_learning/functionPrac/target/rls/debug/deps/libmemchr-619eb11f247b9bbc.rmeta","--extern","regex_syntax=/Users/rosehsu/rust_learning/functionPrac/target/rls/debug/deps/libregex_syntax-894689d49f11cb12.rmeta","--extern","thread_local=/Users/rosehsu/rust_learning/functionPrac/target/rls/debug/deps/libthread_local-bbf56f755624bc0f.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/rosehsu/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/rosehsu/rust_learning/functionPrac/target/rls/debug/deps/libregex-b82aeb707e5a8eb5.rmeta"},"prelude":{"crate_id":{"name":"regex","disambiguator":[17776895750859127487,2046120076990415712]},"crate_root":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src","external_crates":[{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15786589783347927115,14932276094748675792]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[10298575208133357036,8040858178392247411]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12346914022686079705,4940267238012603511]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[18114786932049689441,12972308710781110595]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3450676385096259377,17670937522874515785]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17577124700929205618,18199936732272738370]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[12559880231068804868,15252340553816167694]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[1187771448540952860,5203397268813630476]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[18283159763238190815,6626693072124271590]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[13458662043719537980,9570942752289014475]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[11980204761434995587,1127255387257643439]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[8467147480215253010,13194617755467267743]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8463084087322079994,16053869174229632260]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[16926090732921528503,7551031884587596916]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","num":15,"id":{"name":"aho_corasick","disambiguator":[1394049304344201695,3290132386842578881]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[2778318941797934219,3760727527117086112]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","num":17,"id":{"name":"regex_syntax","disambiguator":[4482783698599242738,532364250967613257]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","num":18,"id":{"name":"thread_local","disambiguator":[14342118014484872733,5133573049458705713]}},{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","num":19,"id":{"name":"lazy_static","disambiguator":[6216246046354924533,15913799639573233127]}}],"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","byte_start":0,"byte_end":28598,"line_start":1,"line_end":785,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1641},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","byte_start":23823,"byte_end":23828,"line_start":639,"line_end":639,"column_start":16,"column_end":21},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","byte_start":23887,"byte_end":23888,"line_start":641,"line_end":641,"column_start":34,"column_end":35},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","byte_start":23887,"byte_end":23888,"line_start":641,"line_end":641,"column_start":34,"column_end":35},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","byte_start":23887,"byte_end":23888,"line_start":641,"line_end":641,"column_start":34,"column_end":35},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1117},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","byte_start":24072,"byte_end":24078,"line_start":649,"line_end":649,"column_start":5,"column_end":11},"alias_span":null,"name":"escape","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2390},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","byte_start":24080,"byte_end":24096,"line_start":649,"line_end":649,"column_start":13,"column_end":29},"alias_span":null,"name":"CaptureLocations","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1280},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","byte_start":24098,"byte_end":24112,"line_start":649,"line_end":649,"column_start":31,"column_end":45},"alias_span":null,"name":"CaptureMatches","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1189},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","byte_start":24114,"byte_end":24126,"line_start":649,"line_end":649,"column_start":47,"column_end":59},"alias_span":null,"name":"CaptureNames","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1225},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","byte_start":24128,"byte_end":24136,"line_start":649,"line_end":649,"column_start":61,"column_end":69},"alias_span":null,"name":"Captures","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1220},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","byte_start":24142,"byte_end":24151,"line_start":650,"line_end":650,"column_start":5,"column_end":14},"alias_span":null,"name":"Locations","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2361},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","byte_start":24153,"byte_end":24158,"line_start":650,"line_end":650,"column_start":16,"column_end":21},"alias_span":null,"name":"Match","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1291},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","byte_start":24160,"byte_end":24167,"line_start":650,"line_end":650,"column_start":23,"column_end":30},"alias_span":null,"name":"Matches","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1321},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","byte_start":24169,"byte_end":24177,"line_start":650,"line_end":650,"column_start":32,"column_end":40},"alias_span":null,"name":"NoExpand","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2385},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","byte_start":24179,"byte_end":24184,"line_start":650,"line_end":650,"column_start":42,"column_end":47},"alias_span":null,"name":"Regex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1302},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","byte_start":24186,"byte_end":24194,"line_start":650,"line_end":650,"column_start":49,"column_end":57},"alias_span":null,"name":"Replacer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2397},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","byte_start":24196,"byte_end":24207,"line_start":650,"line_end":650,"column_start":59,"column_end":70},"alias_span":null,"name":"ReplacerRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1200},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","byte_start":24209,"byte_end":24214,"line_start":650,"line_end":650,"column_start":72,"column_end":77},"alias_span":null,"name":"Split","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1210},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","byte_start":24220,"byte_end":24226,"line_start":651,"line_end":651,"column_start":5,"column_end":11},"alias_span":null,"name":"SplitN","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1268},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","byte_start":24228,"byte_end":24245,"line_start":651,"line_end":651,"column_start":13,"column_end":30},"alias_span":null,"name":"SubCaptureMatches","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","byte_start":23887,"byte_end":23888,"line_start":641,"line_end":641,"column_start":34,"column_end":35},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":27}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","byte_start":23887,"byte_end":23888,"line_start":641,"line_end":641,"column_start":34,"column_end":35},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":27}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","byte_start":23887,"byte_end":23888,"line_start":641,"line_end":641,"column_start":34,"column_end":35},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":27}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","byte_start":23887,"byte_end":23888,"line_start":641,"line_end":641,"column_start":34,"column_end":35},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":27}},{"kind":"Use","ref_id":{"krate":0,"index":103},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","byte_start":28398,"byte_end":28406,"line_start":780,"line_end":780,"column_start":22,"column_end":30},"alias_span":null,"name":"Compiler","value":"","parent":{"krate":0,"index":1361}},{"kind":"Use","ref_id":{"krate":0,"index":372},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","byte_start":28427,"byte_end":28431,"line_start":781,"line_end":781,"column_start":20,"column_end":24},"alias_span":null,"name":"Exec","value":"","parent":{"krate":0,"index":1361}},{"kind":"Use","ref_id":{"krate":0,"index":379},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","byte_start":28433,"byte_end":28444,"line_start":781,"line_end":781,"column_start":26,"column_end":37},"alias_span":null,"name":"ExecBuilder","value":"","parent":{"krate":0,"index":1361}},{"kind":"Use","ref_id":{"krate":0,"index":1818},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","byte_start":28467,"byte_end":28471,"line_start":782,"line_end":782,"column_start":21,"column_end":25},"alias_span":null,"name":"Char","value":"","parent":{"krate":0,"index":1361}},{"kind":"Use","ref_id":{"krate":0,"index":1794},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","byte_start":28473,"byte_end":28482,"line_start":782,"line_end":782,"column_start":27,"column_end":36},"alias_span":null,"name":"CharInput","value":"","parent":{"krate":0,"index":1361}},{"kind":"Use","ref_id":{"krate":0,"index":546},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","byte_start":28484,"byte_end":28489,"line_start":782,"line_end":782,"column_start":38,"column_end":43},"alias_span":null,"name":"Input","value":"","parent":{"krate":0,"index":1361}},{"kind":"Use","ref_id":{"krate":0,"index":1784},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","byte_start":28491,"byte_end":28498,"line_start":782,"line_end":782,"column_start":45,"column_end":52},"alias_span":null,"name":"InputAt","value":"","parent":{"krate":0,"index":1361}},{"kind":"Use","ref_id":{"krate":0,"index":1842},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","byte_start":28522,"byte_end":28537,"line_start":783,"line_end":783,"column_start":22,"column_end":37},"alias_span":null,"name":"LiteralSearcher","value":"","parent":{"krate":0,"index":1361}},{"kind":"Use","ref_id":{"krate":0,"index":2005},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","byte_start":28558,"byte_end":28567,"line_start":784,"line_end":784,"column_start":20,"column_end":29},"alias_span":null,"name":"EmptyLook","value":"","parent":{"krate":0,"index":1361}},{"kind":"Use","ref_id":{"krate":0,"index":1958},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","byte_start":28569,"byte_end":28573,"line_start":784,"line_end":784,"column_start":31,"column_end":35},"alias_span":null,"name":"Inst","value":"","parent":{"krate":0,"index":1361}},{"kind":"Use","ref_id":{"krate":0,"index":2040},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","byte_start":28575,"byte_end":28585,"line_start":784,"line_end":784,"column_start":37,"column_end":47},"alias_span":null,"name":"InstRanges","value":"","parent":{"krate":0,"index":1361}},{"kind":"Use","ref_id":{"krate":0,"index":1940},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","byte_start":28587,"byte_end":28594,"line_start":784,"line_end":784,"column_start":49,"column_end":56},"alias_span":null,"name":"Program","value":"","parent":{"krate":0,"index":1361}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","byte_start":0,"byte_end":28598,"line_start":1,"line_end":785,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":27},{"krate":0,"index":32},{"krate":0,"index":61},{"krate":0,"index":77},{"krate":0,"index":197},{"krate":0,"index":330},{"krate":0,"index":339},{"krate":0,"index":496},{"krate":0,"index":518},{"krate":0,"index":522},{"krate":0,"index":525},{"krate":0,"index":626},{"krate":0,"index":728},{"krate":0,"index":756},{"krate":0,"index":799},{"krate":0,"index":804},{"krate":0,"index":1036},{"krate":0,"index":1038},{"krate":0,"index":1096},{"krate":0,"index":1329},{"krate":0,"index":1348},{"krate":0,"index":1361}],"decl_id":null,"docs":"This crate provides a library for parsing, compiling, and executing regular\nexpressions. Its syntax is similar to Perl-style regular expressions, but lacks\na few features like look around and backreferences. In exchange, all searches\nexecute in linear time with respect to the size of the regular expression and\nsearch text.","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","byte_start":23179,"byte_end":23201,"line_start":615,"line_end":615,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":27},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","byte_start":27668,"byte_end":27673,"line_start":742,"line_end":742,"column_start":9,"column_end":14},"name":"bytes","qualname":"::bytes","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31}],"decl_id":null,"docs":"Match regular expressions on arbitrary bytes.","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","byte_start":27636,"byte_end":27659,"line_start":741,"line_end":741,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":103},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/compile.rs","byte_start":42993,"byte_end":43001,"line_start":27,"line_end":27,"column_start":12,"column_end":20},"name":"Compiler","qualname":"::compile::Compiler","value":"Compiler {  }","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111}],"decl_id":null,"docs":" A compiler translates a regular expression AST to a sequence of\n instructions. The sequence of instructions represents an NFA.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/compile.rs","byte_start":43412,"byte_end":43415,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<Compiler>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new regular expression compiler.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/compile.rs","byte_start":44010,"byte_end":44020,"line_start":58,"line_end":58,"column_start":12,"column_end":22},"name":"size_limit","qualname":"<Compiler>::size_limit","value":"fn (mut self, size_limit: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The size of the resulting program is limited by size_limit. If\n the program approximately exceeds the given size (in bytes), then\n compilation will stop and return an error.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/compile.rs","byte_start":44765,"byte_end":44770,"line_start":74,"line_end":74,"column_start":12,"column_end":17},"name":"bytes","qualname":"<Compiler>::bytes","value":"fn (mut self, yes: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" If bytes is true, then the program is compiled as a byte based\n automaton, which incorporates UTF-8 decoding into the machine. If it's\n false, then the automaton is Unicode scalar value based, e.g., an\n engine utilizing such an automaton is responsible for UTF-8 decoding.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/compile.rs","byte_start":45053,"byte_end":45062,"line_start":83,"line_end":83,"column_start":12,"column_end":21},"name":"only_utf8","qualname":"<Compiler>::only_utf8","value":"fn (mut self, yes: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" When disabled, the program compiled may match arbitrary bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/compile.rs","byte_start":45545,"byte_end":45548,"line_start":95,"line_end":95,"column_start":12,"column_end":15},"name":"dfa","qualname":"<Compiler>::dfa","value":"fn (mut self, yes: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" When set, the machine returned is suitable for use in the DFA matching\n engine.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/compile.rs","byte_start":45783,"byte_end":45790,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"reverse","qualname":"<Compiler>::reverse","value":"fn (mut self, yes: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" When set, the machine returned is suitable for matching text in\n reverse. In particular, all concatenations are flipped.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/compile.rs","byte_start":46144,"byte_end":46151,"line_start":112,"line_end":112,"column_start":12,"column_end":19},"name":"compile","qualname":"<Compiler>::compile","value":"fn (mut self, exprs: &[Hir]) -> result::Result<Program, Error>","parent":null,"children":[],"decl_id":null,"docs":" Compile a regular expression given its AST.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1642},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/error.rs","byte_start":157779,"byte_end":157785,"line_start":8,"line_end":8,"column_start":5,"column_end":11},"name":"Syntax","qualname":"::error::Error::Syntax","value":"Error::Syntax(String)","parent":{"krate":0,"index":1641},"children":[],"decl_id":null,"docs":" A syntax error.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1645},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/error.rs","byte_start":157905,"byte_end":157919,"line_start":11,"line_end":11,"column_start":5,"column_end":19},"name":"CompiledTooBig","qualname":"::error::Error::CompiledTooBig","value":"Error::CompiledTooBig(usize)","parent":{"krate":0,"index":1641},"children":[],"decl_id":null,"docs":" The compiled program exceeded the set size limit.\n The argument is the size limit imposed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1648},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/error.rs","byte_start":158206,"byte_end":158221,"line_start":18,"line_end":18,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::error::Error::__Nonexhaustive","value":"Error::__Nonexhaustive","parent":{"krate":0,"index":1641},"children":[],"decl_id":null,"docs":" Hints that destructuring should not be exhaustive.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1641},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/error.rs","byte_start":157743,"byte_end":157748,"line_start":6,"line_end":6,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"Error::{Syntax, CompiledTooBig, __Nonexhaustive}","parent":null,"children":[{"krate":0,"index":1642},{"krate":0,"index":1645},{"krate":0,"index":1648}],"decl_id":null,"docs":" An error that occurred during parsing or compiling a regular expression.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":372},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/exec.rs","byte_start":160860,"byte_end":160864,"line_start":33,"line_end":33,"column_start":12,"column_end":16},"name":"Exec","qualname":"::exec::Exec","value":"Exec {  }","parent":null,"children":[{"krate":0,"index":373},{"krate":0,"index":374}],"decl_id":null,"docs":" `Exec` manages the execution of a regular expression.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1656},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/exec.rs","byte_start":161224,"byte_end":161234,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"ExecNoSync","qualname":"::exec::ExecNoSync","value":"ExecNoSync {  }","parent":null,"children":[{"krate":0,"index":1658},{"krate":0,"index":1659}],"decl_id":null,"docs":" `ExecNoSync` is like `Exec`, except it embeds a reference to a cache. This\n means it is no longer Sync, but we can now avoid the overhead of\n synchronization to fetch the cache.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":375},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/exec.rs","byte_start":161486,"byte_end":161499,"line_start":52,"line_end":52,"column_start":12,"column_end":25},"name":"ExecNoSyncStr","qualname":"::exec::ExecNoSyncStr","value":"","parent":null,"children":[],"decl_id":null,"docs":" `ExecNoSyncStr` is like `ExecNoSync`, but matches on &str instead of &[u8].\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":379},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/exec.rs","byte_start":163773,"byte_end":163784,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"ExecBuilder","qualname":"::exec::ExecBuilder","value":"ExecBuilder {  }","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383}],"decl_id":null,"docs":" Facilitates the construction of an executor by exposing various knobs\n to control how a regex is executed and what kinds of resources it's\n permitted to use.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/exec.rs","byte_start":164385,"byte_end":164388,"line_start":122,"line_end":122,"column_start":12,"column_end":15},"name":"new","qualname":"<ExecBuilder>::new","value":"fn (re: &str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a regex execution builder.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/exec.rs","byte_start":164714,"byte_end":164722,"line_start":131,"line_end":131,"column_start":12,"column_end":20},"name":"new_many","qualname":"<ExecBuilder>::new_many","value":"fn <I, S> (res: I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Like new, but compiles the union of the given regular expressions.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/exec.rs","byte_start":165037,"byte_end":165048,"line_start":142,"line_end":142,"column_start":12,"column_end":23},"name":"new_options","qualname":"<ExecBuilder>::new_options","value":"fn (opts: RegexOptions) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a regex execution builder.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/exec.rs","byte_start":165546,"byte_end":165555,"line_start":158,"line_end":158,"column_start":12,"column_end":21},"name":"automatic","qualname":"<ExecBuilder>::automatic","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the matching engine to be automatically determined.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/exec.rs","byte_start":165870,"byte_end":165873,"line_start":168,"line_end":168,"column_start":12,"column_end":15},"name":"nfa","qualname":"<ExecBuilder>::nfa","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the matching engine to use the NFA algorithm no matter what\n optimizations are possible.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/exec.rs","byte_start":166364,"byte_end":166384,"line_start":181,"line_end":181,"column_start":12,"column_end":32},"name":"bounded_backtracking","qualname":"<ExecBuilder>::bounded_backtracking","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the matching engine to use a bounded backtracking engine no\n matter what optimizations are possible.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/exec.rs","byte_start":166952,"byte_end":166957,"line_start":195,"line_end":195,"column_start":12,"column_end":17},"name":"bytes","qualname":"<ExecBuilder>::bytes","value":"fn (mut self, yes: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Compiles byte based programs for use with the NFA matching engines.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/exec.rs","byte_start":167228,"byte_end":167237,"line_start":204,"line_end":204,"column_start":12,"column_end":21},"name":"only_utf8","qualname":"<ExecBuilder>::only_utf8","value":"fn (mut self, yes: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" When disabled, the program compiled may match arbitrary bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/exec.rs","byte_start":167360,"byte_end":167367,"line_start":210,"line_end":210,"column_start":12,"column_end":19},"name":"unicode","qualname":"<ExecBuilder>::unicode","value":"fn (mut self, yes: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the Unicode flag.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/exec.rs","byte_start":170592,"byte_end":170597,"line_start":286,"line_end":286,"column_start":12,"column_end":17},"name":"build","qualname":"<ExecBuilder>::build","value":"fn (self) -> Result<Exec, Error>","parent":null,"children":[],"decl_id":null,"docs":" Build an executor that can run a regular expression.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/exec.rs","byte_start":199502,"byte_end":199517,"line_start":1138,"line_end":1138,"column_start":12,"column_end":27},"name":"many_matches_at","qualname":"<ExecNoSync>::many_matches_at","value":"fn (&self, matches: &mut [bool], text: &[u8], start: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Finds which regular expressions match the given text.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/exec.rs","byte_start":202624,"byte_end":202640,"line_start":1237,"line_end":1237,"column_start":12,"column_end":28},"name":"capture_name_idx","qualname":"<ExecNoSync>::capture_name_idx","value":"fn (&self) -> &Arc<HashMap<String, usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/exec.rs","byte_start":202769,"byte_end":202785,"line_start":1243,"line_end":1243,"column_start":12,"column_end":28},"name":"capture_name_idx","qualname":"<ExecNoSyncStr>::capture_name_idx","value":"fn (&self) -> &Arc<HashMap<String, usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/exec.rs","byte_start":202990,"byte_end":202998,"line_start":1251,"line_end":1251,"column_start":12,"column_end":20},"name":"searcher","qualname":"<Exec>::searcher","value":"fn (&self) -> ExecNoSync","parent":null,"children":[],"decl_id":null,"docs":" Get a searcher that isn't Sync.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/exec.rs","byte_start":202962,"byte_end":202976,"line_start":1250,"line_end":1250,"column_start":41,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/exec.rs","byte_start":203385,"byte_end":203397,"line_start":1261,"line_end":1261,"column_start":12,"column_end":24},"name":"searcher_str","qualname":"<Exec>::searcher_str","value":"fn (&self) -> ExecNoSyncStr","parent":null,"children":[],"decl_id":null,"docs":" Get a searcher that isn't Sync and can match on &str.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/exec.rs","byte_start":203357,"byte_end":203371,"line_start":1260,"line_end":1260,"column_start":41,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/exec.rs","byte_start":203523,"byte_end":203533,"line_start":1266,"line_end":1266,"column_start":12,"column_end":22},"name":"into_regex","qualname":"<Exec>::into_regex","value":"fn (self) -> re_unicode::Regex","parent":null,"children":[],"decl_id":null,"docs":" Build a Regex from this executor.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/exec.rs","byte_start":203664,"byte_end":203678,"line_start":1271,"line_end":1271,"column_start":12,"column_end":26},"name":"into_regex_set","qualname":"<Exec>::into_regex_set","value":"fn (self) -> re_set::unicode::RegexSet","parent":null,"children":[],"decl_id":null,"docs":" Build a RegexSet from this executor.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/exec.rs","byte_start":203853,"byte_end":203868,"line_start":1276,"line_end":1276,"column_start":12,"column_end":27},"name":"into_byte_regex","qualname":"<Exec>::into_byte_regex","value":"fn (self) -> re_bytes::Regex","parent":null,"children":[],"decl_id":null,"docs":" Build a Regex from this executor that can match arbitrary bytes.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/exec.rs","byte_start":204026,"byte_end":204045,"line_start":1281,"line_end":1281,"column_start":12,"column_end":31},"name":"into_byte_regex_set","qualname":"<Exec>::into_byte_regex_set","value":"fn (self) -> re_set::bytes::RegexSet","parent":null,"children":[],"decl_id":null,"docs":" Build a RegexSet from this executor that can match arbitrary bytes.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/exec.rs","byte_start":204232,"byte_end":204245,"line_start":1287,"line_end":1287,"column_start":12,"column_end":25},"name":"regex_strings","qualname":"<Exec>::regex_strings","value":"fn (&self) -> &[String]","parent":null,"children":[],"decl_id":null,"docs":" The original regular expressions given by the caller that were\n compiled.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/exec.rs","byte_start":204402,"byte_end":204415,"line_start":1294,"line_end":1294,"column_start":12,"column_end":25},"name":"capture_names","qualname":"<Exec>::capture_names","value":"fn (&self) -> &[Option<String>]","parent":null,"children":[],"decl_id":null,"docs":" Return a slice of capture names.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/exec.rs","byte_start":204590,"byte_end":204606,"line_start":1300,"line_end":1300,"column_start":12,"column_end":28},"name":"capture_name_idx","qualname":"<Exec>::capture_name_idx","value":"fn (&self) -> &Arc<HashMap<String, usize>>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to named groups mapping (from group name to\n group position).\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1784},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":227790,"byte_end":227797,"line_start":15,"line_end":15,"column_start":12,"column_end":19},"name":"InputAt","qualname":"::input::InputAt","value":"InputAt {  }","parent":null,"children":[{"krate":0,"index":1785},{"krate":0,"index":1786},{"krate":0,"index":1787},{"krate":0,"index":1788}],"decl_id":null,"docs":" Represents a location in the input.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":227969,"byte_end":227977,"line_start":24,"line_end":24,"column_start":12,"column_end":20},"name":"is_start","qualname":"<InputAt>::is_start","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true iff this position is at the beginning of the input.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":228104,"byte_end":228110,"line_start":29,"line_end":29,"column_start":12,"column_end":18},"name":"is_end","qualname":"<InputAt>::is_end","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true iff this position is past the end of the input.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":228356,"byte_end":228360,"line_start":37,"line_end":37,"column_start":12,"column_end":16},"name":"char","qualname":"<InputAt>::char","value":"fn (&self) -> Char","parent":null,"children":[],"decl_id":null,"docs":" Returns the character at this position.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":228454,"byte_end":228458,"line_start":42,"line_end":42,"column_start":12,"column_end":16},"name":"byte","qualname":"<InputAt>::byte","value":"fn (&self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Returns the byte at this position.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":228585,"byte_end":228588,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"len","qualname":"<InputAt>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the UTF-8 width of the character at this position.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":543},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":228733,"byte_end":228741,"line_start":53,"line_end":53,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<InputAt>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the UTF-8 width of the character at this position\n is zero.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":228849,"byte_end":228852,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"pos","qualname":"<InputAt>::pos","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the byte offset of this position.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":228973,"byte_end":228981,"line_start":63,"line_end":63,"column_start":12,"column_end":20},"name":"next_pos","qualname":"<InputAt>::next_pos","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the byte offset of the next position in the input.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":546},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":229107,"byte_end":229112,"line_start":69,"line_end":69,"column_start":11,"column_end":16},"name":"Input","qualname":"::input::Input","value":"Input: fmt::Debug","parent":null,"children":[{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554}],"decl_id":null,"docs":" An abstraction over input used in the matching engines.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":229197,"byte_end":229199,"line_start":71,"line_end":71,"column_start":8,"column_end":10},"name":"at","qualname":"::input::Input::at","value":"fn (&self, i: usize) -> InputAt","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" Return an encoding of the position at byte offset `i`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":229376,"byte_end":229385,"line_start":76,"line_end":76,"column_start":8,"column_end":17},"name":"next_char","qualname":"::input::Input::next_char","value":"fn (&self, at: InputAt) -> Char","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" Return the Unicode character occurring next to `at`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":229566,"byte_end":229579,"line_start":81,"line_end":81,"column_start":8,"column_end":21},"name":"previous_char","qualname":"::input::Input::previous_char","value":"fn (&self, at: InputAt) -> Char","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" Return the Unicode character occurring previous to `at`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":229719,"byte_end":229733,"line_start":85,"line_end":85,"column_start":8,"column_end":22},"name":"is_empty_match","qualname":"::input::Input::is_empty_match","value":"fn (&self, at: InputAt, empty: &InstEmptyLook) -> bool","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" Return true if the given empty width instruction matches at the\n input position given.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":229840,"byte_end":229849,"line_start":88,"line_end":88,"column_start":8,"column_end":17},"name":"prefix_at","qualname":"::input::Input::prefix_at","value":"fn (&self, prefixes: &LiteralSearcher, at: InputAt) -> Option<InputAt>","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" Scan the input for a matching prefix.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":229999,"byte_end":230002,"line_start":95,"line_end":95,"column_start":8,"column_end":11},"name":"len","qualname":"::input::Input::len","value":"fn (&self) -> usize","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" The number of bytes in the input.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":230064,"byte_end":230072,"line_start":98,"line_end":98,"column_start":8,"column_end":16},"name":"is_empty","qualname":"::input::Input::is_empty","value":"fn (&self) -> bool","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" Whether the input is empty.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":230183,"byte_end":230191,"line_start":103,"line_end":103,"column_start":8,"column_end":16},"name":"as_bytes","qualname":"::input::Input::as_bytes","value":"fn (&self) -> &[u8]","parent":{"krate":0,"index":546},"children":[],"decl_id":null,"docs":" Return the given input as a sequence of bytes.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1794},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":230995,"byte_end":231004,"line_start":142,"line_end":142,"column_start":12,"column_end":21},"name":"CharInput","qualname":"::input::CharInput","value":"","parent":null,"children":[],"decl_id":null,"docs":" An input reader over characters.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":231123,"byte_end":231126,"line_start":146,"line_end":146,"column_start":12,"column_end":15},"name":"new","qualname":"<CharInput>::new","value":"fn (s: &'t [u8]) -> CharInput<'t>","parent":null,"children":[],"decl_id":null,"docs":" Return a new character input reader for the given string.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1818},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":237274,"byte_end":237278,"line_start":348,"line_end":348,"column_start":12,"column_end":16},"name":"Char","qualname":"::input::Char","value":"","parent":null,"children":[],"decl_id":null,"docs":" An inline representation of `Option<char>`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":237602,"byte_end":237609,"line_start":362,"line_end":362,"column_start":12,"column_end":19},"name":"is_none","qualname":"<Char>::is_none","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true iff the character is absent.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":237581,"byte_end":237590,"line_start":361,"line_end":361,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":237813,"byte_end":237821,"line_start":370,"line_end":370,"column_start":12,"column_end":20},"name":"len_utf8","qualname":"<Char>::len_utf8","value":"fn (self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of the character's UTF-8 encoding.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":237792,"byte_end":237801,"line_start":369,"line_end":369,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":238044,"byte_end":238056,"line_start":377,"line_end":377,"column_start":12,"column_end":24},"name":"is_word_char","qualname":"<Char>::is_word_char","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true iff the character is a word character.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":238550,"byte_end":238562,"line_start":388,"line_end":388,"column_start":12,"column_end":24},"name":"is_word_byte","qualname":"<Char>::is_word_byte","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true iff the byte is a word byte.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1842},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/literal/imp.rs","byte_start":241164,"byte_end":241179,"line_start":16,"line_end":16,"column_start":12,"column_end":27},"name":"LiteralSearcher","qualname":"::literal::imp::LiteralSearcher","value":"LiteralSearcher {  }","parent":null,"children":[{"krate":0,"index":1843},{"krate":0,"index":1844},{"krate":0,"index":1845},{"krate":0,"index":1846}],"decl_id":null,"docs":" A prefix extracted from a compiled regular expression.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/literal/imp.rs","byte_start":242235,"byte_end":242240,"line_start":46,"line_end":46,"column_start":12,"column_end":17},"name":"empty","qualname":"<LiteralSearcher>::empty","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a matcher that never matches and never advances the input.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/literal/imp.rs","byte_start":242391,"byte_end":242399,"line_start":51,"line_end":51,"column_start":12,"column_end":20},"name":"prefixes","qualname":"<LiteralSearcher>::prefixes","value":"fn (lits: Literals) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a matcher for literal prefixes from the given set.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/literal/imp.rs","byte_start":242592,"byte_end":242600,"line_start":57,"line_end":57,"column_start":12,"column_end":20},"name":"suffixes","qualname":"<LiteralSearcher>::suffixes","value":"fn (lits: Literals) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a matcher for literal suffixes from the given set.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":649},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/literal/imp.rs","byte_start":243461,"byte_end":243469,"line_start":78,"line_end":78,"column_start":12,"column_end":20},"name":"complete","qualname":"<LiteralSearcher>::complete","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if all matches comprise the entire regular expression.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/literal/imp.rs","byte_start":243671,"byte_end":243675,"line_start":84,"line_end":84,"column_start":12,"column_end":16},"name":"find","qualname":"<LiteralSearcher>::find","value":"fn (&self, haystack: &[u8]) -> Option<(usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Find the position of a literal in `haystack` if it exists.\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/literal/imp.rs","byte_start":243643,"byte_end":243657,"line_start":83,"line_end":83,"column_start":41,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/literal/imp.rs","byte_start":244364,"byte_end":244374,"line_start":101,"line_end":101,"column_start":12,"column_end":22},"name":"find_start","qualname":"<LiteralSearcher>::find_start","value":"fn (&self, haystack: &[u8]) -> Option<(usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Like find, except matches must start at index `0`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/literal/imp.rs","byte_start":244762,"byte_end":244770,"line_start":114,"line_end":114,"column_start":12,"column_end":20},"name":"find_end","qualname":"<LiteralSearcher>::find_end","value":"fn (&self, haystack: &[u8]) -> Option<(usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Like find, except matches must end at index `haystack.len()`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/literal/imp.rs","byte_start":245195,"byte_end":245199,"line_start":127,"line_end":127,"column_start":12,"column_end":16},"name":"iter","qualname":"<LiteralSearcher>::iter","value":"fn (&self) -> LiteralIter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all literals to be matched.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/literal/imp.rs","byte_start":245766,"byte_end":245769,"line_start":139,"line_end":139,"column_start":12,"column_end":15},"name":"lcp","qualname":"<LiteralSearcher>::lcp","value":"fn (&self) -> &FreqyPacked","parent":null,"children":[],"decl_id":null,"docs":" Returns a matcher for the longest common prefix of this matcher.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/literal/imp.rs","byte_start":245904,"byte_end":245907,"line_start":144,"line_end":144,"column_start":12,"column_end":15},"name":"lcs","qualname":"<LiteralSearcher>::lcs","value":"fn (&self) -> &FreqyPacked","parent":null,"children":[],"decl_id":null,"docs":" Returns a matcher for the longest common suffix of this matcher.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/literal/imp.rs","byte_start":246016,"byte_end":246024,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<LiteralSearcher>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true iff this prefix is empty.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/literal/imp.rs","byte_start":246140,"byte_end":246143,"line_start":154,"line_end":154,"column_start":12,"column_end":15},"name":"len","qualname":"<LiteralSearcher>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of prefixes in this machine.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/literal/imp.rs","byte_start":246555,"byte_end":246571,"line_start":167,"line_end":167,"column_start":12,"column_end":28},"name":"approximate_size","qualname":"<LiteralSearcher>::approximate_size","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the approximate heap usage of literals in bytes.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":673},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/literal/imp.rs","byte_start":249060,"byte_end":249065,"line_start":236,"line_end":236,"column_start":5,"column_end":10},"name":"Empty","qualname":"::literal::imp::LiteralIter::Empty","value":"LiteralIter::Empty","parent":{"krate":0,"index":671},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":675},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/literal/imp.rs","byte_start":249071,"byte_end":249076,"line_start":237,"line_end":237,"column_start":5,"column_end":10},"name":"Bytes","qualname":"::literal::imp::LiteralIter::Bytes","value":"LiteralIter::Bytes(&'a [u8])","parent":{"krate":0,"index":671},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":678},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/literal/imp.rs","byte_start":249092,"byte_end":249098,"line_start":238,"line_end":238,"column_start":5,"column_end":11},"name":"Single","qualname":"::literal::imp::LiteralIter::Single","value":"LiteralIter::Single(&'a [u8])","parent":{"krate":0,"index":671},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":681},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/literal/imp.rs","byte_start":249114,"byte_end":249116,"line_start":239,"line_end":239,"column_start":5,"column_end":7},"name":"AC","qualname":"::literal::imp::LiteralIter::AC","value":"LiteralIter::AC(&'a [Literal])","parent":{"krate":0,"index":671},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":684},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/literal/imp.rs","byte_start":249137,"byte_end":249143,"line_start":240,"line_end":240,"column_start":5,"column_end":11},"name":"Packed","qualname":"::literal::imp::LiteralIter::Packed","value":"LiteralIter::Packed(&'a [Literal])","parent":{"krate":0,"index":671},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":671},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/literal/imp.rs","byte_start":249038,"byte_end":249049,"line_start":235,"line_end":235,"column_start":10,"column_end":21},"name":"LiteralIter","qualname":"::literal::imp::LiteralIter","value":"LiteralIter::{Empty, Bytes, Single, AC, Packed}","parent":null,"children":[{"krate":0,"index":673},{"krate":0,"index":675},{"krate":0,"index":678},{"krate":0,"index":681},{"krate":0,"index":684}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1882},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/literal/imp.rs","byte_start":253461,"byte_end":253472,"line_start":380,"line_end":380,"column_start":12,"column_end":23},"name":"FreqyPacked","qualname":"::literal::imp::FreqyPacked","value":"FreqyPacked {  }","parent":null,"children":[{"krate":0,"index":1883},{"krate":0,"index":1884},{"krate":0,"index":1885},{"krate":0,"index":1886},{"krate":0,"index":1887},{"krate":0,"index":1888}],"decl_id":null,"docs":" Provides an implementation of fast subtring search using frequency\n analysis.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/literal/imp.rs","byte_start":255921,"byte_end":255925,"line_start":456,"line_end":456,"column_start":12,"column_end":16},"name":"find","qualname":"<FreqyPacked>::find","value":"fn (&self, haystack: &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/literal/imp.rs","byte_start":255893,"byte_end":255907,"line_start":455,"line_end":455,"column_start":41,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/literal/imp.rs","byte_start":256759,"byte_end":256768,"line_start":482,"line_end":482,"column_start":12,"column_end":21},"name":"is_suffix","qualname":"<FreqyPacked>::is_suffix","value":"fn (&self, text: &[u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/literal/imp.rs","byte_start":256731,"byte_end":256745,"line_start":481,"line_end":481,"column_start":41,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/literal/imp.rs","byte_start":256943,"byte_end":256946,"line_start":489,"line_end":489,"column_start":12,"column_end":15},"name":"len","qualname":"<FreqyPacked>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/literal/imp.rs","byte_start":257006,"byte_end":257014,"line_start":493,"line_end":493,"column_start":12,"column_end":20},"name":"char_len","qualname":"<FreqyPacked>::char_len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1940},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":292497,"byte_end":292504,"line_start":18,"line_end":18,"column_start":12,"column_end":19},"name":"Program","qualname":"::prog::Program","value":"Program { insts, matches, captures, capture_name_idx, start, byte_classes, only_utf8, is_bytes, is_dfa, is_reverse, is_anchored_start, is_anchored_end, has_unicode_word_boundary, prefixes, dfa_size_limit }","parent":null,"children":[{"krate":0,"index":1941},{"krate":0,"index":1942},{"krate":0,"index":1943},{"krate":0,"index":1944},{"krate":0,"index":1945},{"krate":0,"index":1946},{"krate":0,"index":1947},{"krate":0,"index":1948},{"krate":0,"index":1949},{"krate":0,"index":1950},{"krate":0,"index":1951},{"krate":0,"index":1952},{"krate":0,"index":1953},{"krate":0,"index":1954},{"krate":0,"index":1955}],"decl_id":null,"docs":" Program is a sequence of instructions and various facts about thos\n instructions.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1941},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":292574,"byte_end":292579,"line_start":20,"line_end":20,"column_start":9,"column_end":14},"name":"insts","qualname":"::prog::Program::insts","value":"std::vec::Vec<prog::Inst>","parent":{"krate":0,"index":1940},"children":[],"decl_id":null,"docs":" A sequence of instructions that represents an NFA.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1942},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":292744,"byte_end":292751,"line_start":24,"line_end":24,"column_start":9,"column_end":16},"name":"matches","qualname":"::prog::Program::matches","value":"std::vec::Vec<usize>","parent":{"krate":0,"index":1940},"children":[],"decl_id":null,"docs":" Pointers to each Match instruction in the sequence.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1943},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":292885,"byte_end":292893,"line_start":27,"line_end":27,"column_start":9,"column_end":17},"name":"captures","qualname":"::prog::Program::captures","value":"std::vec::Vec<std::option::Option<std::string::String>>","parent":{"krate":0,"index":1940},"children":[],"decl_id":null,"docs":" The ordered sequence of all capture groups extracted from the AST.\n Unnamed groups are `None`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1944},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":292986,"byte_end":293002,"line_start":29,"line_end":29,"column_start":9,"column_end":25},"name":"capture_name_idx","qualname":"::prog::Program::capture_name_idx","value":"std::sync::Arc<std::collections::HashMap<std::string::String, usize>>","parent":{"krate":0,"index":1940},"children":[],"decl_id":null,"docs":" Pointers to all named capture groups into `captures`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1945},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":293359,"byte_end":293364,"line_start":35,"line_end":35,"column_start":9,"column_end":14},"name":"start","qualname":"::prog::Program::start","value":"usize","parent":{"krate":0,"index":1940},"children":[],"decl_id":null,"docs":" A pointer to the start instruction. This can vary depending on how\n the program was compiled. For example, programs for use with the DFA\n engine have a `.*?` inserted at the beginning of unanchored regular\n expressions. The actual starting point of the program is after the\n `.*?`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1946},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":293478,"byte_end":293490,"line_start":38,"line_end":38,"column_start":9,"column_end":21},"name":"byte_classes","qualname":"::prog::Program::byte_classes","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":1940},"children":[],"decl_id":null,"docs":" A set of equivalence classes for discriminating bytes in the compiled\n program.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1947},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":293569,"byte_end":293578,"line_start":40,"line_end":40,"column_start":9,"column_end":18},"name":"only_utf8","qualname":"::prog::Program::only_utf8","value":"bool","parent":{"krate":0,"index":1940},"children":[],"decl_id":null,"docs":" When true, this program can only match valid UTF-8.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1948},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":293702,"byte_end":293710,"line_start":43,"line_end":43,"column_start":9,"column_end":17},"name":"is_bytes","qualname":"::prog::Program::is_bytes","value":"bool","parent":{"krate":0,"index":1940},"children":[],"decl_id":null,"docs":" When true, this program uses byte range instructions instead of Unicode\n range instructions.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1949},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":293899,"byte_end":293905,"line_start":47,"line_end":47,"column_start":9,"column_end":15},"name":"is_dfa","qualname":"::prog::Program::is_dfa","value":"bool","parent":{"krate":0,"index":1940},"children":[],"decl_id":null,"docs":" When true, the program is compiled for DFA matching. For example, this\n implies `is_bytes` and also inserts a preceding `.*?` for unanchored\n regexes.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1950},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":294011,"byte_end":294021,"line_start":50,"line_end":50,"column_start":9,"column_end":19},"name":"is_reverse","qualname":"::prog::Program::is_reverse","value":"bool","parent":{"krate":0,"index":1940},"children":[],"decl_id":null,"docs":" When true, the program matches text in reverse (for use only in the\n DFA).\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1951},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":294103,"byte_end":294120,"line_start":52,"line_end":52,"column_start":9,"column_end":26},"name":"is_anchored_start","qualname":"::prog::Program::is_anchored_start","value":"bool","parent":{"krate":0,"index":1940},"children":[],"decl_id":null,"docs":" Whether the regex must match from the start of the input.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1952},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":294198,"byte_end":294213,"line_start":54,"line_end":54,"column_start":9,"column_end":24},"name":"is_anchored_end","qualname":"::prog::Program::is_anchored_end","value":"bool","parent":{"krate":0,"index":1940},"children":[],"decl_id":null,"docs":" Whether the regex must match at the end of the input.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1953},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":294304,"byte_end":294329,"line_start":56,"line_end":56,"column_start":9,"column_end":34},"name":"has_unicode_word_boundary","qualname":"::prog::Program::has_unicode_word_boundary","value":"bool","parent":{"krate":0,"index":1940},"children":[],"decl_id":null,"docs":" Whether this program contains a Unicode word boundary instruction.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1954},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":294421,"byte_end":294429,"line_start":58,"line_end":58,"column_start":9,"column_end":17},"name":"prefixes","qualname":"::prog::Program::prefixes","value":"literal::imp::LiteralSearcher","parent":{"krate":0,"index":1940},"children":[],"decl_id":null,"docs":" A possibly empty machine for very quickly matching prefix literals.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1955},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":295256,"byte_end":295270,"line_start":74,"line_end":74,"column_start":9,"column_end":23},"name":"dfa_size_limit","qualname":"::prog::Program::dfa_size_limit","value":"usize","parent":{"krate":0,"index":1940},"children":[],"decl_id":null,"docs":" A limit on the size of the cache that the DFA is allowed to use while\n matching.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":295396,"byte_end":295399,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"new","qualname":"<Program>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty instruction sequence. Fields are given default\n values.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":769},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":296116,"byte_end":296120,"line_start":102,"line_end":102,"column_start":12,"column_end":16},"name":"skip","qualname":"<Program>::skip","value":"fn (&self, mut pc: usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" If pc is an index to a no-op instruction (like Save), then return the\n next pc that is not a no-op instruction.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":770},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":296434,"byte_end":296448,"line_start":113,"line_end":113,"column_start":12,"column_end":26},"name":"leads_to_match","qualname":"<Program>::leads_to_match","value":"fn (&self, pc: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if and only if an execution engine at instruction `pc` will\n always lead to a match.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":771},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":296974,"byte_end":296987,"line_start":128,"line_end":128,"column_start":12,"column_end":25},"name":"needs_dotstar","qualname":"<Program>::needs_dotstar","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the current configuration demands that an implicit\n `.*?` be prepended to the instruction sequence.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":772},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":297194,"byte_end":297204,"line_start":134,"line_end":134,"column_start":12,"column_end":22},"name":"uses_bytes","qualname":"<Program>::uses_bytes","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this program uses Byte instructions instead of\n Char/Range instructions.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":773},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":297439,"byte_end":297448,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"only_utf8","qualname":"<Program>::only_utf8","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this program exclusively matches valid UTF-8 bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":774},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":297596,"byte_end":297612,"line_start":147,"line_end":147,"column_start":12,"column_end":28},"name":"approximate_size","qualname":"<Program>::approximate_size","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the approximate heap usage of this instruction sequence in\n bytes.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1959},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":302555,"byte_end":302560,"line_start":276,"line_end":276,"column_start":5,"column_end":10},"name":"Match","qualname":"::prog::Inst::Match","value":"Inst::Match(usize)","parent":{"krate":0,"index":1958},"children":[],"decl_id":null,"docs":" Match indicates that the program has reached a match state.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1962},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":302690,"byte_end":302694,"line_start":279,"line_end":279,"column_start":5,"column_end":9},"name":"Save","qualname":"::prog::Inst::Save","value":"Inst::Save(InstSave)","parent":{"krate":0,"index":1958},"children":[],"decl_id":null,"docs":" Save causes the program to save the current location of the input in\n the slot indicated by InstSave.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1965},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":302829,"byte_end":302834,"line_start":282,"line_end":282,"column_start":5,"column_end":10},"name":"Split","qualname":"::prog::Inst::Split","value":"Inst::Split(InstSplit)","parent":{"krate":0,"index":1958},"children":[],"decl_id":null,"docs":" Split causes the program to diverge to one of two paths in the\n program, preferring goto1 in InstSplit.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1968},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":302994,"byte_end":303003,"line_start":285,"line_end":285,"column_start":5,"column_end":14},"name":"EmptyLook","qualname":"::prog::Inst::EmptyLook","value":"Inst::EmptyLook(InstEmptyLook)","parent":{"krate":0,"index":1958},"children":[],"decl_id":null,"docs":" EmptyLook represents a zero-width assertion in a regex program. A\n zero-width assertion does not consume any of the input text.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1971},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":303145,"byte_end":303149,"line_start":288,"line_end":288,"column_start":5,"column_end":9},"name":"Char","qualname":"::prog::Inst::Char","value":"Inst::Char(InstChar)","parent":{"krate":0,"index":1958},"children":[],"decl_id":null,"docs":" Char requires the regex program to match the character in InstChar at\n the current position in the input.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1974},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":303323,"byte_end":303329,"line_start":291,"line_end":291,"column_start":5,"column_end":11},"name":"Ranges","qualname":"::prog::Inst::Ranges","value":"Inst::Ranges(InstRanges)","parent":{"krate":0,"index":1958},"children":[],"decl_id":null,"docs":" Ranges requires the regex program to match the character at the current\n position in the input with one of the ranges specified in InstRanges.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1977},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":303527,"byte_end":303532,"line_start":295,"line_end":295,"column_start":5,"column_end":10},"name":"Bytes","qualname":"::prog::Inst::Bytes","value":"Inst::Bytes(InstBytes)","parent":{"krate":0,"index":1958},"children":[],"decl_id":null,"docs":" Bytes is like Ranges, except it expresses a single byte range. It is\n used in conjunction with Split instructions to implement multi-byte\n character classes.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1958},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":302126,"byte_end":302130,"line_start":268,"line_end":268,"column_start":10,"column_end":14},"name":"Inst","qualname":"::prog::Inst","value":"Inst::{Match, Save, Split, EmptyLook, Char, Ranges, Bytes}","parent":null,"children":[{"krate":0,"index":1959},{"krate":0,"index":1962},{"krate":0,"index":1965},{"krate":0,"index":1968},{"krate":0,"index":1971},{"krate":0,"index":1974},{"krate":0,"index":1977}],"decl_id":null,"docs":" Inst is an instruction code in a Regex program.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":303636,"byte_end":303644,"line_start":300,"line_end":300,"column_start":12,"column_end":20},"name":"is_match","qualname":"<Inst>::is_match","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if this is a match instruction.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1984},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":303842,"byte_end":303850,"line_start":310,"line_end":310,"column_start":12,"column_end":20},"name":"InstSave","qualname":"::prog::InstSave","value":"InstSave { goto, slot }","parent":null,"children":[{"krate":0,"index":1985},{"krate":0,"index":1986}],"decl_id":null,"docs":" Representation of the Save instruction.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1985},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":303914,"byte_end":303918,"line_start":312,"line_end":312,"column_start":9,"column_end":13},"name":"goto","qualname":"::prog::InstSave::goto","value":"usize","parent":{"krate":0,"index":1984},"children":[],"decl_id":null,"docs":" The next location to execute in the program.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1986},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":304073,"byte_end":304077,"line_start":315,"line_end":315,"column_start":9,"column_end":13},"name":"slot","qualname":"::prog::InstSave::slot","value":"usize","parent":{"krate":0,"index":1984},"children":[],"decl_id":null,"docs":" The capture slot (there are two slots for every capture in a regex,\n including the zeroth capture for the entire match).\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1991},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":304169,"byte_end":304178,"line_start":320,"line_end":320,"column_start":12,"column_end":21},"name":"InstSplit","qualname":"::prog::InstSplit","value":"InstSplit { goto1, goto2 }","parent":null,"children":[{"krate":0,"index":1992},{"krate":0,"index":1993}],"decl_id":null,"docs":" Representation of the Split instruction.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1992},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":304334,"byte_end":304339,"line_start":323,"line_end":323,"column_start":9,"column_end":14},"name":"goto1","qualname":"::prog::InstSplit::goto1","value":"usize","parent":{"krate":0,"index":1991},"children":[],"decl_id":null,"docs":" The first instruction to try. A match resulting from following goto1\n has precedence over a match resulting from following goto2.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1993},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":304504,"byte_end":304509,"line_start":326,"line_end":326,"column_start":9,"column_end":14},"name":"goto2","qualname":"::prog::InstSplit::goto2","value":"usize","parent":{"krate":0,"index":1991},"children":[],"decl_id":null,"docs":" The second instruction to try. A match resulting from following goto1\n has precedence over a match resulting from following goto2.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1998},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":304609,"byte_end":304622,"line_start":331,"line_end":331,"column_start":12,"column_end":25},"name":"InstEmptyLook","qualname":"::prog::InstEmptyLook","value":"InstEmptyLook { goto, look }","parent":null,"children":[{"krate":0,"index":1999},{"krate":0,"index":2000}],"decl_id":null,"docs":" Representation of the `EmptyLook` instruction.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1999},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":304723,"byte_end":304727,"line_start":334,"line_end":334,"column_start":9,"column_end":13},"name":"goto","qualname":"::prog::InstEmptyLook::goto","value":"usize","parent":{"krate":0,"index":1998},"children":[],"decl_id":null,"docs":" The next location to execute in the program if this instruction\n succeeds.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2000},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":304797,"byte_end":304801,"line_start":336,"line_end":336,"column_start":9,"column_end":13},"name":"look","qualname":"::prog::InstEmptyLook::look","value":"prog::EmptyLook","parent":{"krate":0,"index":1998},"children":[],"decl_id":null,"docs":" The type of zero-width assertion to check.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2006},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":304965,"byte_end":304974,"line_start":343,"line_end":343,"column_start":5,"column_end":14},"name":"StartLine","qualname":"::prog::EmptyLook::StartLine","value":"EmptyLook::StartLine","parent":{"krate":0,"index":2005},"children":[],"decl_id":null,"docs":" Start of line or input.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2008},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":305010,"byte_end":305017,"line_start":345,"line_end":345,"column_start":5,"column_end":12},"name":"EndLine","qualname":"::prog::EmptyLook::EndLine","value":"EmptyLook::EndLine","parent":{"krate":0,"index":2005},"children":[],"decl_id":null,"docs":" End of line or input.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2010},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":305047,"byte_end":305056,"line_start":347,"line_end":347,"column_start":5,"column_end":14},"name":"StartText","qualname":"::prog::EmptyLook::StartText","value":"EmptyLook::StartText","parent":{"krate":0,"index":2005},"children":[],"decl_id":null,"docs":" Start of input.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2012},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":305084,"byte_end":305091,"line_start":349,"line_end":349,"column_start":5,"column_end":12},"name":"EndText","qualname":"::prog::EmptyLook::EndText","value":"EmptyLook::EndText","parent":{"krate":0,"index":2005},"children":[],"decl_id":null,"docs":" End of input.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2014},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":305165,"byte_end":305177,"line_start":351,"line_end":351,"column_start":5,"column_end":17},"name":"WordBoundary","qualname":"::prog::EmptyLook::WordBoundary","value":"EmptyLook::WordBoundary","parent":{"krate":0,"index":2005},"children":[],"decl_id":null,"docs":" Word character on one side and non-word character on other.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2016},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":305257,"byte_end":305272,"line_start":353,"line_end":353,"column_start":5,"column_end":20},"name":"NotWordBoundary","qualname":"::prog::EmptyLook::NotWordBoundary","value":"EmptyLook::NotWordBoundary","parent":{"krate":0,"index":2005},"children":[],"decl_id":null,"docs":" Word character on both sides or non-word character on both sides.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2018},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":305307,"byte_end":305324,"line_start":355,"line_end":355,"column_start":5,"column_end":22},"name":"WordBoundaryAscii","qualname":"::prog::EmptyLook::WordBoundaryAscii","value":"EmptyLook::WordBoundaryAscii","parent":{"krate":0,"index":2005},"children":[],"decl_id":null,"docs":" ASCII word boundary.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2020},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":305363,"byte_end":305383,"line_start":357,"line_end":357,"column_start":5,"column_end":25},"name":"NotWordBoundaryAscii","qualname":"::prog::EmptyLook::NotWordBoundaryAscii","value":"EmptyLook::NotWordBoundaryAscii","parent":{"krate":0,"index":2005},"children":[],"decl_id":null,"docs":" Not ASCII word boundary.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2005},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":304917,"byte_end":304926,"line_start":341,"line_end":341,"column_start":10,"column_end":19},"name":"EmptyLook","qualname":"::prog::EmptyLook","value":"EmptyLook::{StartLine, EndLine, StartText, EndText, WordBoundary, NotWordBoundary, WordBoundaryAscii, NotWordBoundaryAscii}","parent":null,"children":[{"krate":0,"index":2006},{"krate":0,"index":2008},{"krate":0,"index":2010},{"krate":0,"index":2012},{"krate":0,"index":2014},{"krate":0,"index":2016},{"krate":0,"index":2018},{"krate":0,"index":2020}],"decl_id":null,"docs":" The set of zero-width match instructions.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2033},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":305467,"byte_end":305475,"line_start":362,"line_end":362,"column_start":12,"column_end":20},"name":"InstChar","qualname":"::prog::InstChar","value":"InstChar { goto, c }","parent":null,"children":[{"krate":0,"index":2034},{"krate":0,"index":2035}],"decl_id":null,"docs":" Representation of the Char instruction.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2034},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":305576,"byte_end":305580,"line_start":365,"line_end":365,"column_start":9,"column_end":13},"name":"goto","qualname":"::prog::InstChar::goto","value":"usize","parent":{"krate":0,"index":2033},"children":[],"decl_id":null,"docs":" The next location to execute in the program if this instruction\n succeeds.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2035},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":305630,"byte_end":305631,"line_start":367,"line_end":367,"column_start":9,"column_end":10},"name":"c","qualname":"::prog::InstChar::c","value":"char","parent":{"krate":0,"index":2033},"children":[],"decl_id":null,"docs":" The character to test.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2040},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":305723,"byte_end":305733,"line_start":372,"line_end":372,"column_start":12,"column_end":22},"name":"InstRanges","qualname":"::prog::InstRanges","value":"InstRanges { goto, ranges }","parent":null,"children":[{"krate":0,"index":2041},{"krate":0,"index":2042}],"decl_id":null,"docs":" Representation of the Ranges instruction.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2041},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":305834,"byte_end":305838,"line_start":375,"line_end":375,"column_start":9,"column_end":13},"name":"goto","qualname":"::prog::InstRanges::goto","value":"usize","parent":{"krate":0,"index":2040},"children":[],"decl_id":null,"docs":" The next location to execute in the program if this instruction\n succeeds.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2042},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":305913,"byte_end":305919,"line_start":377,"line_end":377,"column_start":9,"column_end":15},"name":"ranges","qualname":"::prog::InstRanges::ranges","value":"std::vec::Vec<(char, char)>","parent":{"krate":0,"index":2040},"children":[],"decl_id":null,"docs":" The set of Unicode scalar value ranges to test.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":793},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":306046,"byte_end":306053,"line_start":382,"line_end":382,"column_start":12,"column_end":19},"name":"matches","qualname":"<InstRanges>::matches","value":"fn (&self, c: Char) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether the given input character matches this instruction.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":795},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":306897,"byte_end":306906,"line_start":409,"line_end":409,"column_start":12,"column_end":21},"name":"num_chars","qualname":"<InstRanges>::num_chars","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of distinct characters represented by all of the\n ranges.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2047},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":307145,"byte_end":307154,"line_start":419,"line_end":419,"column_start":12,"column_end":21},"name":"InstBytes","qualname":"::prog::InstBytes","value":"InstBytes { goto, start, end }","parent":null,"children":[{"krate":0,"index":2048},{"krate":0,"index":2049},{"krate":0,"index":2050}],"decl_id":null,"docs":" Representation of the Bytes instruction.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2048},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":307255,"byte_end":307259,"line_start":422,"line_end":422,"column_start":9,"column_end":13},"name":"goto","qualname":"::prog::InstBytes::goto","value":"usize","parent":{"krate":0,"index":2047},"children":[],"decl_id":null,"docs":" The next location to execute in the program if this instruction\n succeeds.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2049},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":307328,"byte_end":307333,"line_start":424,"line_end":424,"column_start":9,"column_end":14},"name":"start","qualname":"::prog::InstBytes::start","value":"u8","parent":{"krate":0,"index":2047},"children":[],"decl_id":null,"docs":" The start (inclusive) of this byte range.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2050},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":307395,"byte_end":307398,"line_start":426,"line_end":426,"column_start":9,"column_end":12},"name":"end","qualname":"::prog::InstBytes::end","value":"u8","parent":{"krate":0,"index":2047},"children":[],"decl_id":null,"docs":" The end (inclusive) of this byte range.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":798},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":307504,"byte_end":307511,"line_start":431,"line_end":431,"column_start":12,"column_end":19},"name":"matches","qualname":"<InstBytes>::matches","value":"fn (&self, byte: u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if the given byte is in this range.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2055},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_builder.rs","byte_start":307730,"byte_end":307742,"line_start":4,"line_end":4,"column_start":12,"column_end":24},"name":"RegexOptions","qualname":"::re_builder::RegexOptions","value":"RegexOptions { pats, size_limit, dfa_size_limit, nest_limit, case_insensitive, multi_line, dot_matches_new_line, swap_greed, ignore_whitespace, unicode, octal }","parent":null,"children":[{"krate":0,"index":2056},{"krate":0,"index":2057},{"krate":0,"index":2058},{"krate":0,"index":2059},{"krate":0,"index":2060},{"krate":0,"index":2061},{"krate":0,"index":2062},{"krate":0,"index":2063},{"krate":0,"index":2064},{"krate":0,"index":2065},{"krate":0,"index":2066}],"decl_id":null,"docs":" The set of user configurable options for compiling zero or more regexes.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_builder.rs","byte_start":307696,"byte_end":307718,"line_start":3,"line_end":3,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":2056},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_builder.rs","byte_start":307753,"byte_end":307757,"line_start":5,"line_end":5,"column_start":9,"column_end":13},"name":"pats","qualname":"::re_builder::RegexOptions::pats","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":2055},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2057},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_builder.rs","byte_start":307780,"byte_end":307790,"line_start":6,"line_end":6,"column_start":9,"column_end":19},"name":"size_limit","qualname":"::re_builder::RegexOptions::size_limit","value":"usize","parent":{"krate":0,"index":2055},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2058},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_builder.rs","byte_start":307807,"byte_end":307821,"line_start":7,"line_end":7,"column_start":9,"column_end":23},"name":"dfa_size_limit","qualname":"::re_builder::RegexOptions::dfa_size_limit","value":"usize","parent":{"krate":0,"index":2055},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2059},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_builder.rs","byte_start":307838,"byte_end":307848,"line_start":8,"line_end":8,"column_start":9,"column_end":19},"name":"nest_limit","qualname":"::re_builder::RegexOptions::nest_limit","value":"u32","parent":{"krate":0,"index":2055},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2060},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_builder.rs","byte_start":307863,"byte_end":307879,"line_start":9,"line_end":9,"column_start":9,"column_end":25},"name":"case_insensitive","qualname":"::re_builder::RegexOptions::case_insensitive","value":"bool","parent":{"krate":0,"index":2055},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2061},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_builder.rs","byte_start":307895,"byte_end":307905,"line_start":10,"line_end":10,"column_start":9,"column_end":19},"name":"multi_line","qualname":"::re_builder::RegexOptions::multi_line","value":"bool","parent":{"krate":0,"index":2055},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2062},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_builder.rs","byte_start":307921,"byte_end":307941,"line_start":11,"line_end":11,"column_start":9,"column_end":29},"name":"dot_matches_new_line","qualname":"::re_builder::RegexOptions::dot_matches_new_line","value":"bool","parent":{"krate":0,"index":2055},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2063},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_builder.rs","byte_start":307957,"byte_end":307967,"line_start":12,"line_end":12,"column_start":9,"column_end":19},"name":"swap_greed","qualname":"::re_builder::RegexOptions::swap_greed","value":"bool","parent":{"krate":0,"index":2055},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2064},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_builder.rs","byte_start":307983,"byte_end":308000,"line_start":13,"line_end":13,"column_start":9,"column_end":26},"name":"ignore_whitespace","qualname":"::re_builder::RegexOptions::ignore_whitespace","value":"bool","parent":{"krate":0,"index":2055},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2065},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_builder.rs","byte_start":308016,"byte_end":308023,"line_start":14,"line_end":14,"column_start":9,"column_end":16},"name":"unicode","qualname":"::re_builder::RegexOptions::unicode","value":"bool","parent":{"krate":0,"index":2055},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2066},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_builder.rs","byte_start":308039,"byte_end":308044,"line_start":15,"line_end":15,"column_start":9,"column_end":14},"name":"octal","qualname":"::re_builder::RegexOptions::octal","value":"bool","parent":{"krate":0,"index":2055},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2159},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":326979,"byte_end":326984,"line_start":20,"line_end":20,"column_start":12,"column_end":17},"name":"Match","qualname":"::re_bytes::Match","value":"Match {  }","parent":null,"children":[{"krate":0,"index":2161},{"krate":0,"index":2162},{"krate":0,"index":2163}],"decl_id":null,"docs":" Match represents a single match of a regex in a haystack.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":327165,"byte_end":327170,"line_start":29,"line_end":29,"column_start":12,"column_end":17},"name":"start","qualname":"<Match>::start","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the starting byte offset of the match in the haystack.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":327144,"byte_end":327153,"line_start":28,"line_end":28,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":827},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":327309,"byte_end":327312,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"end","qualname":"<Match>::end","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the ending byte offset of the match in the haystack.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":327288,"byte_end":327297,"line_start":34,"line_end":34,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":327486,"byte_end":327491,"line_start":42,"line_end":42,"column_start":12,"column_end":17},"name":"range","qualname":"<Match>::range","value":"fn (&self) -> Range<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the range over the starting and ending byte offsets of the\n match in the haystack.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":327465,"byte_end":327474,"line_start":41,"line_end":41,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":829},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":327612,"byte_end":327620,"line_start":48,"line_end":48,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Match>::as_bytes","value":"fn (&self) -> &'t [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the matched text.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":327591,"byte_end":327600,"line_start":47,"line_end":47,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2183},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":328696,"byte_end":328701,"line_start":77,"line_end":77,"column_start":12,"column_end":17},"name":"Regex","qualname":"::re_bytes::Regex","value":"","parent":null,"children":[],"decl_id":null,"docs":" A compiled regular expression for matching arbitrary bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":329760,"byte_end":329763,"line_start":118,"line_end":118,"column_start":12,"column_end":15},"name":"new","qualname":"<Regex>::new","value":"fn (re: &str) -> Result<Regex, Error>","parent":null,"children":[],"decl_id":null,"docs":" Compiles a regular expression. Once compiled, it can be used repeatedly\n to search, split or replace text in a string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":330494,"byte_end":330502,"line_start":140,"line_end":140,"column_start":12,"column_end":20},"name":"is_match","qualname":"<Regex>::is_match","value":"fn (&self, text: &[u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if the regex matches the string given.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":846},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":331364,"byte_end":331368,"line_start":164,"line_end":164,"column_start":12,"column_end":16},"name":"find","qualname":"<Regex>::find","value":"fn <'t> (&self, text: &'t [u8]) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the start and end byte range of the leftmost-first match in\n `text`. If no match exists, then `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":332084,"byte_end":332093,"line_start":186,"line_end":186,"column_start":12,"column_end":21},"name":"find_iter","qualname":"<Regex>::find_iter","value":"fn <'r, 't> (&'r self, text: &'t [u8]) -> Matches<'r, 't>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator for each successive non-overlapping match in\n `text`, returning the start and end byte indices with respect to\n `text`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":335230,"byte_end":335238,"line_start":253,"line_end":253,"column_start":12,"column_end":20},"name":"captures","qualname":"<Regex>::captures","value":"fn <'t> (&self, text: &'t [u8]) -> Option<Captures<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the capture groups corresponding to the leftmost-first\n match in `text`. Capture group `0` always corresponds to the entire\n match. If no match is found, then `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":336683,"byte_end":336696,"line_start":288,"line_end":288,"column_start":12,"column_end":25},"name":"captures_iter","qualname":"<Regex>::captures_iter","value":"fn <'r, 't> (&'r self, text: &'t [u8]) -> CaptureMatches<'r, 't>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all the non-overlapping capture groups matched\n in `text`. This is operationally the same as `find_iter`, except it\n yields information about capturing group matches.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":857},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":337614,"byte_end":337619,"line_start":315,"line_end":315,"column_start":12,"column_end":17},"name":"split","qualname":"<Regex>::split","value":"fn <'r, 't> (&'r self, text: &'t [u8]) -> Split<'r, 't>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator of substrings of `text` delimited by a match of the\n regular expression. Namely, each element of the iterator corresponds to\n text that *isn't* matched by the regular expression.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":338602,"byte_end":338608,"line_start":339,"line_end":339,"column_start":12,"column_end":18},"name":"splitn","qualname":"<Regex>::splitn","value":"fn <'r, 't> (&'r self, text: &'t [u8], limit: usize) -> SplitN<'r, 't>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator of at most `limit` substrings of `text` delimited\n by a match of the regular expression. (A `limit` of `0` will return no\n substrings.) Namely, each element of the iterator corresponds to text\n that *isn't* matched by the regular expression. The remainder of the\n string that is not split will be the last element in the iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":343358,"byte_end":343365,"line_start":455,"line_end":455,"column_start":12,"column_end":19},"name":"replace","qualname":"<Regex>::replace","value":"fn <'t, R> (&self, text: &'t [u8], rep: R) -> Cow<'t, [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Replaces the leftmost-first match with the replacement provided. The\n replacement can be a regular byte string (where `$N` and `$name` are\n expanded to match capture groups) or a function that takes the matches'\n `Captures` and returns the replaced byte string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":343822,"byte_end":343833,"line_start":469,"line_end":469,"column_start":12,"column_end":23},"name":"replace_all","qualname":"<Regex>::replace_all","value":"fn <'t, R> (&self, text: &'t [u8], rep: R) -> Cow<'t, [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Replaces all non-overlapping matches in `text` with the replacement\n provided. This is the same as calling `replacen` with `limit` set to\n `0`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":869},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":344302,"byte_end":344310,"line_start":483,"line_end":483,"column_start":12,"column_end":20},"name":"replacen","qualname":"<Regex>::replacen","value":"fn <'t, R> (&self, text: &'t [u8], limit: usize, mut rep: R) -> Cow<'t, [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Replaces at most `limit` non-overlapping matches in `text` with the\n replacement provided. If `limit` is 0, then all non-overlapping matches\n are replaced.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":346787,"byte_end":346801,"line_start":554,"line_end":554,"column_start":12,"column_end":26},"name":"shortest_match","qualname":"<Regex>::shortest_match","value":"fn (&self, text: &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the end location of a match in the text given.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":874},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":347189,"byte_end":347206,"line_start":564,"line_end":564,"column_start":12,"column_end":29},"name":"shortest_match_at","qualname":"<Regex>::shortest_match_at","value":"fn (&self, text: &[u8], start: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same as shortest_match, but starts the search at the given\n offset.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":347650,"byte_end":347661,"line_start":578,"line_end":578,"column_start":12,"column_end":23},"name":"is_match_at","qualname":"<Regex>::is_match_at","value":"fn (&self, text: &[u8], start: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the same as is_match, but starts the search at the given\n offset.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":348058,"byte_end":348065,"line_start":588,"line_end":588,"column_start":12,"column_end":19},"name":"find_at","qualname":"<Regex>::find_at","value":"fn <'t> (&self, text: &'t [u8], start: usize) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same as find, but starts the search at the given\n offset.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":348739,"byte_end":348752,"line_start":609,"line_end":609,"column_start":12,"column_end":25},"name":"captures_read","qualname":"<Regex>::captures_read","value":"fn <'t> (&self, locs: &mut CaptureLocations, text: &'t [u8]) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":" This is like `captures`, but uses\n [`CaptureLocations`](struct.CaptureLocations.html)\n instead of\n [`Captures`](struct.Captures.html) in order to amortize allocations.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":881},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":349259,"byte_end":349275,"line_start":623,"line_end":623,"column_start":12,"column_end":28},"name":"captures_read_at","qualname":"<Regex>::captures_read_at","value":"fn <'t> (&self, locs: &mut CaptureLocations, text: &'t [u8], start: usize) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same as `captures_read`, but starts the search at the given\n offset and populates the capture locations given.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":349820,"byte_end":349836,"line_start":641,"line_end":641,"column_start":12,"column_end":28},"name":"read_captures_at","qualname":"<Regex>::read_captures_at","value":"fn <'t> (&self, locs: &mut CaptureLocations, text: &'t [u8], start: usize) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":" An undocumented alias for `captures_read_at`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":350125,"byte_end":350131,"line_start":654,"line_end":654,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Regex>::as_str","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the original string of this regex.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":350254,"byte_end":350267,"line_start":659,"line_end":659,"column_start":12,"column_end":25},"name":"capture_names","qualname":"<Regex>::capture_names","value":"fn (&self) -> CaptureNames","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the capture names.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":350403,"byte_end":350415,"line_start":664,"line_end":664,"column_start":12,"column_end":24},"name":"captures_len","qualname":"<Regex>::captures_len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of captures.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":890},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":350626,"byte_end":350643,"line_start":670,"line_end":670,"column_start":12,"column_end":29},"name":"capture_locations","qualname":"<Regex>::capture_locations","value":"fn (&self) -> CaptureLocations","parent":null,"children":[],"decl_id":null,"docs":" Returns an empty set of capture locations that can be reused in\n multiple calls to `captures_read` or `captures_read_at`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":350990,"byte_end":350999,"line_start":679,"line_end":679,"column_start":12,"column_end":21},"name":"locations","qualname":"<Regex>::locations","value":"fn (&self) -> CaptureLocations","parent":null,"children":[],"decl_id":null,"docs":" An alias for `capture_locations` to preserve backward compatibility.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":892},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":351489,"byte_end":351496,"line_start":692,"line_end":692,"column_start":12,"column_end":19},"name":"Matches","qualname":"::re_bytes::Matches","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over all non-overlapping matches for a particular string.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":903},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":352069,"byte_end":352083,"line_start":710,"line_end":710,"column_start":12,"column_end":26},"name":"CaptureMatches","qualname":"::re_bytes::CaptureMatches","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator that yields all non-overlapping capture groups matching a\n particular regular expression.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":914},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":352671,"byte_end":352676,"line_start":730,"line_end":730,"column_start":12,"column_end":17},"name":"Split","qualname":"::re_bytes::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":917},{"krate":0,"index":918}],"decl_id":null,"docs":" Yields all substrings delimited by a regular expression match.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":924},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":353692,"byte_end":353698,"line_start":765,"line_end":765,"column_start":12,"column_end":18},"name":"SplitN","qualname":"::re_bytes::SplitN","value":"SplitN {  }","parent":null,"children":[{"krate":0,"index":927},{"krate":0,"index":928}],"decl_id":null,"docs":" Yields at most `N` substrings delimited by a regular expression match.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":934},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":354596,"byte_end":354608,"line_start":800,"line_end":800,"column_start":12,"column_end":24},"name":"CaptureNames","qualname":"::re_bytes::CaptureNames","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over the names of all possible captures.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2188},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":355769,"byte_end":355785,"line_start":833,"line_end":833,"column_start":12,"column_end":28},"name":"CaptureLocations","qualname":"::re_bytes::CaptureLocations","value":"","parent":null,"children":[],"decl_id":null,"docs":" CaptureLocations is a low level representation of the raw offsets of each\n submatch.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":945},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":356107,"byte_end":356116,"line_start":841,"line_end":841,"column_start":10,"column_end":19},"name":"Locations","qualname":"::re_bytes::Locations","value":"CaptureLocations","parent":null,"children":[],"decl_id":null,"docs":" A type alias for `CaptureLocations` for backwards compatibility.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":947},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":356474,"byte_end":356477,"line_start":849,"line_end":849,"column_start":12,"column_end":15},"name":"get","qualname":"<CaptureLocations>::get","value":"fn (&self, i: usize) -> Option<(usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Returns the start and end positions of the Nth capture group. Returns\n `None` if `i` is not a valid capture group or if the capture group did\n not match anything. The positions returned are *always* byte indices\n with respect to the original string matched.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":356453,"byte_end":356462,"line_start":848,"line_end":848,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":948},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":356772,"byte_end":356775,"line_start":858,"line_end":858,"column_start":12,"column_end":15},"name":"len","qualname":"<CaptureLocations>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of capturing groups.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":356751,"byte_end":356760,"line_start":857,"line_end":857,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":949},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":357135,"byte_end":357138,"line_start":869,"line_end":869,"column_start":12,"column_end":15},"name":"pos","qualname":"<CaptureLocations>::pos","value":"fn (&self, i: usize) -> Option<(usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":" An alias for the `get` method for backwards compatibility.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":357114,"byte_end":357123,"line_start":868,"line_end":868,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":950},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":357772,"byte_end":357780,"line_start":885,"line_end":885,"column_start":12,"column_end":20},"name":"Captures","qualname":"::re_bytes::Captures","value":"Captures {  }","parent":null,"children":[{"krate":0,"index":952},{"krate":0,"index":953},{"krate":0,"index":954}],"decl_id":null,"docs":" Captures represents a group of captured byte strings for a single match.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":957},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":358715,"byte_end":358718,"line_start":911,"line_end":911,"column_start":12,"column_end":15},"name":"get","qualname":"<Captures>::get","value":"fn (&self, i: usize) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the match associated with the capture group at index `i`. If\n `i` does not correspond to a capture group, or if the capture group\n did not participate in the match, then `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":959},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":359003,"byte_end":359007,"line_start":917,"line_end":917,"column_start":12,"column_end":16},"name":"name","qualname":"<Captures>::name","value":"fn (&self, name: &str) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the match for the capture group named `name`. If `name` isn't a\n valid capture group or didn't match anything, then `None` is returned.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":359439,"byte_end":359443,"line_start":926,"line_end":926,"column_start":12,"column_end":16},"name":"iter","qualname":"<Captures>::iter","value":"fn <'c> (&'c self) -> SubCaptureMatches<'c, 't>","parent":null,"children":[],"decl_id":null,"docs":" An iterator that yields all capturing matches in the order in which\n they appear in the regex. If a particular capture group didn't\n participate in the match, then `None` is yielded for that capture.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":963},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":360454,"byte_end":360460,"line_start":946,"line_end":946,"column_start":12,"column_end":18},"name":"expand","qualname":"<Captures>::expand","value":"fn (&self, replacement: &[u8], dst: &mut Vec<u8>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Expands all instances of `$name` in `replacement` to the corresponding\n capture group `name`, and writes them to the `dst` buffer given.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":964},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":360771,"byte_end":360774,"line_start":955,"line_end":955,"column_start":12,"column_end":15},"name":"len","qualname":"<Captures>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of captured groups.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":360750,"byte_end":360759,"line_start":954,"line_end":954,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":996},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":363930,"byte_end":363947,"line_start":1054,"line_end":1054,"column_start":12,"column_end":29},"name":"SubCaptureMatches","qualname":"::re_bytes::SubCaptureMatches","value":"SubCaptureMatches {  }","parent":null,"children":[{"krate":0,"index":999},{"krate":0,"index":1000}],"decl_id":null,"docs":" An iterator that yields all capturing matches in the order in which they\n appear in the regex.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1008},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":364653,"byte_end":364661,"line_start":1076,"line_end":1076,"column_start":11,"column_end":19},"name":"Replacer","qualname":"::re_bytes::Replacer","value":"Replacer","parent":null,"children":[{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1012}],"decl_id":null,"docs":" Replacer describes types that can be used to replace matches in a byte\n string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":364947,"byte_end":364961,"line_start":1084,"line_end":1084,"column_start":8,"column_end":22},"name":"replace_append","qualname":"::re_bytes::Replacer::replace_append","value":"fn (&mut self, caps: &Captures, dst: &mut Vec<u8>) -> ()","parent":{"krate":0,"index":1008},"children":[],"decl_id":null,"docs":" Appends text to `dst` to replace the current match.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":365372,"byte_end":365384,"line_start":1093,"line_end":1093,"column_start":8,"column_end":20},"name":"no_expansion","qualname":"::re_bytes::Replacer::no_expansion","value":"fn <'r> (&'r mut self) -> Option<Cow<'r, [u8]>>","parent":{"krate":0,"index":1008},"children":[],"decl_id":null,"docs":" Return a fixed unchanging replacement byte string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":366115,"byte_end":366121,"line_start":1118,"line_end":1118,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::re_bytes::Replacer::by_ref","value":"fn <'r> (&'r mut self) -> ReplacerRef<'r, Self>","parent":{"krate":0,"index":1008},"children":[],"decl_id":null,"docs":" Return a `Replacer` that borrows and wraps this `Replacer`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2195},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":366349,"byte_end":366360,"line_start":1127,"line_end":1127,"column_start":12,"column_end":23},"name":"ReplacerRef","qualname":"::re_bytes::ReplacerRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" By-reference adaptor for a `Replacer`","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1028},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":367657,"byte_end":367665,"line_start":1169,"line_end":1169,"column_start":12,"column_end":20},"name":"NoExpand","qualname":"::re_bytes::NoExpand","value":"","parent":null,"children":[],"decl_id":null,"docs":" `NoExpand` indicates literal byte string replacement.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2354},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_trait.rs","byte_start":383514,"byte_end":383523,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"Locations","qualname":"::re_trait::Locations","value":"","parent":null,"children":[],"decl_id":null,"docs":" Locations represents the offsets of each capturing group in a regex for\n a single match.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_trait.rs","byte_start":383852,"byte_end":383855,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"pos","qualname":"<Locations>::pos","value":"fn (&self, i: usize) -> Option<(usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Returns the start and end positions of the Nth capture group. Returns\n `None` if `i` is not a valid capture group or if the capture group did\n not match anything. The positions returned are *always* byte indices\n with respect to the original string matched.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1042},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_trait.rs","byte_start":384299,"byte_end":384303,"line_start":30,"line_end":30,"column_start":12,"column_end":16},"name":"iter","qualname":"<Locations>::iter","value":"fn (&self) -> SubCapturesPosIter","parent":null,"children":[],"decl_id":null,"docs":" Creates an iterator of all the capture group positions in order of\n appearance in the regular expression. Positions are byte indices\n in terms of the original string matched.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_trait.rs","byte_start":384598,"byte_end":384601,"line_start":38,"line_end":38,"column_start":12,"column_end":15},"name":"len","qualname":"<Locations>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of capturing groups.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1045},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_trait.rs","byte_start":385014,"byte_end":385032,"line_start":54,"line_end":54,"column_start":12,"column_end":30},"name":"SubCapturesPosIter","qualname":"::re_trait::SubCapturesPosIter","value":"SubCapturesPosIter {  }","parent":null,"children":[{"krate":0,"index":1047},{"krate":0,"index":1048}],"decl_id":null,"docs":" An iterator over capture group positions for a particular match of a\n regular expression.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1053},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_trait.rs","byte_start":386204,"byte_end":386221,"line_start":87,"line_end":87,"column_start":11,"column_end":28},"name":"RegularExpression","qualname":"::re_trait::RegularExpression","value":"RegularExpression: Sized","parent":null,"children":[{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1061},{"krate":0,"index":1062},{"krate":0,"index":1063}],"decl_id":null,"docs":" `RegularExpression` describes types that can implement regex searching.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1054},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_trait.rs","byte_start":386274,"byte_end":386278,"line_start":89,"line_end":89,"column_start":10,"column_end":14},"name":"Text","qualname":"::re_trait::RegularExpression::Text","value":"type Text: ?Sized;","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" The type of the haystack.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1055},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_trait.rs","byte_start":386453,"byte_end":386462,"line_start":93,"line_end":93,"column_start":8,"column_end":17},"name":"slots_len","qualname":"::re_trait::RegularExpression::slots_len","value":"fn (&self) -> usize","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" The number of capture slots in the compiled regular expression. This is\n always two times the number of capture groups (two slots per group).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1056},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_trait.rs","byte_start":386558,"byte_end":386567,"line_start":96,"line_end":96,"column_start":8,"column_end":17},"name":"locations","qualname":"::re_trait::RegularExpression::locations","value":"fn (&self) -> Locations","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" Allocates fresh space for all capturing groups in this regex.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1057},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_trait.rs","byte_start":386913,"byte_end":386929,"line_start":105,"line_end":105,"column_start":8,"column_end":24},"name":"next_after_empty","qualname":"::re_trait::RegularExpression::next_after_empty","value":"fn (&self, text: &Self::Text, i: usize) -> usize","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" Returns the position of the next character after `i`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1058},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_trait.rs","byte_start":387036,"byte_end":387053,"line_start":108,"line_end":108,"column_start":8,"column_end":25},"name":"shortest_match_at","qualname":"::re_trait::RegularExpression::shortest_match_at","value":"fn (&self, text: &Self::Text, start: usize) -> Option<usize>","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" Returns the location of the shortest match.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1059},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_trait.rs","byte_start":387209,"byte_end":387220,"line_start":115,"line_end":115,"column_start":8,"column_end":19},"name":"is_match_at","qualname":"::re_trait::RegularExpression::is_match_at","value":"fn (&self, text: &Self::Text, start: usize) -> bool","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" Returns whether the regex matches the text given.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1060},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_trait.rs","byte_start":387343,"byte_end":387350,"line_start":118,"line_end":118,"column_start":8,"column_end":15},"name":"find_at","qualname":"::re_trait::RegularExpression::find_at","value":"fn (&self, text: &Self::Text, start: usize) -> Option<(usize, usize)>","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" Returns the leftmost-first match location if one exists.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1061},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_trait.rs","byte_start":387585,"byte_end":387601,"line_start":126,"line_end":126,"column_start":8,"column_end":24},"name":"captures_read_at","qualname":"::re_trait::RegularExpression::captures_read_at","value":"fn (&self, locs: &mut Locations, text: &Self::Text, start: usize) -> Option<(usize, usize)>","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" Returns the leftmost-first match location if one exists, and also\n fills in any matching capture slot locations.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1062},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_trait.rs","byte_start":387834,"byte_end":387843,"line_start":135,"line_end":135,"column_start":8,"column_end":17},"name":"find_iter","qualname":"::re_trait::RegularExpression::find_iter","value":"fn (self, text: &Self::Text) -> Matches<Self>","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" Returns an iterator over all non-overlapping successive leftmost-first\n matches.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1063},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_trait.rs","byte_start":388084,"byte_end":388097,"line_start":141,"line_end":141,"column_start":8,"column_end":21},"name":"captures_iter","qualname":"::re_trait::RegularExpression::captures_iter","value":"fn (self, text: &Self::Text) -> CaptureMatches<Self>","parent":{"krate":0,"index":1053},"children":[],"decl_id":null,"docs":" Returns an iterator over all non-overlapping successive leftmost-first\n matches with captures.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1064},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_trait.rs","byte_start":388290,"byte_end":388297,"line_start":147,"line_end":147,"column_start":12,"column_end":19},"name":"Matches","qualname":"::re_trait::Matches","value":"Matches {  }","parent":null,"children":[{"krate":0,"index":1067},{"krate":0,"index":1068},{"krate":0,"index":1069},{"krate":0,"index":1070}],"decl_id":null,"docs":" An iterator over all non-overlapping successive leftmost-first matches.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1074},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_trait.rs","byte_start":388574,"byte_end":388578,"line_start":164,"line_end":164,"column_start":12,"column_end":16},"name":"text","qualname":"<Matches>::text","value":"fn (&self) -> &'t R::Text","parent":null,"children":[],"decl_id":null,"docs":" Return the text being searched.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1075},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_trait.rs","byte_start":388676,"byte_end":388681,"line_start":169,"line_end":169,"column_start":12,"column_end":17},"name":"regex","qualname":"<Matches>::regex","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Return the underlying regex.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1081},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_trait.rs","byte_start":389882,"byte_end":389896,"line_start":209,"line_end":209,"column_start":12,"column_end":26},"name":"CaptureMatches","qualname":"::re_trait::CaptureMatches","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over all non-overlapping successive leftmost-first matches with\n captures.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1089},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_trait.rs","byte_start":390106,"byte_end":390110,"line_start":220,"line_end":220,"column_start":12,"column_end":16},"name":"text","qualname":"<CaptureMatches>::text","value":"fn (&self) -> &'t R::Text","parent":null,"children":[],"decl_id":null,"docs":" Return the text being searched.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1090},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_trait.rs","byte_start":390212,"byte_end":390217,"line_start":225,"line_end":225,"column_start":12,"column_end":17},"name":"regex","qualname":"<CaptureMatches>::regex","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":" Return the underlying regex.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1117},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":391643,"byte_end":391649,"line_start":21,"line_end":21,"column_start":8,"column_end":14},"name":"escape","qualname":"::re_unicode::escape","value":"fn (text: &str) -> String","parent":null,"children":[],"decl_id":null,"docs":" Escapes all regular expression meta characters in `text`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2361},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":391900,"byte_end":391905,"line_start":29,"line_end":29,"column_start":12,"column_end":17},"name":"Match","qualname":"::re_unicode::Match","value":"Match {  }","parent":null,"children":[{"krate":0,"index":2363},{"krate":0,"index":2364},{"krate":0,"index":2365}],"decl_id":null,"docs":" Match represents a single match of a regex in a haystack.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1120},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":392085,"byte_end":392090,"line_start":38,"line_end":38,"column_start":12,"column_end":17},"name":"start","qualname":"<Match>::start","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the starting byte offset of the match in the haystack.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":392064,"byte_end":392073,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1121},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":392229,"byte_end":392232,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"end","qualname":"<Match>::end","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the ending byte offset of the match in the haystack.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":392208,"byte_end":392217,"line_start":43,"line_end":43,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1122},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":392406,"byte_end":392411,"line_start":51,"line_end":51,"column_start":12,"column_end":17},"name":"range","qualname":"<Match>::range","value":"fn (&self) -> Range<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the range over the starting and ending byte offsets of the\n match in the haystack.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":392385,"byte_end":392394,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1123},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":392532,"byte_end":392538,"line_start":57,"line_end":57,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Match>::as_str","value":"fn (&self) -> &'t str","parent":null,"children":[],"decl_id":null,"docs":" Returns the matched text.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":392511,"byte_end":392520,"line_start":56,"line_end":56,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2385},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":395305,"byte_end":395310,"line_start":136,"line_end":136,"column_start":12,"column_end":17},"name":"Regex","qualname":"::re_unicode::Regex","value":"","parent":null,"children":[],"decl_id":null,"docs":" A compiled regular expression for matching Unicode strings.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1141},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":396252,"byte_end":396255,"line_start":174,"line_end":174,"column_start":12,"column_end":15},"name":"new","qualname":"<Regex>::new","value":"fn (re: &str) -> Result<Regex, Error>","parent":null,"children":[],"decl_id":null,"docs":" Compiles a regular expression. Once compiled, it can be used repeatedly\n to search, split or replace text in a string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1142},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":396985,"byte_end":396993,"line_start":196,"line_end":196,"column_start":12,"column_end":20},"name":"is_match","qualname":"<Regex>::is_match","value":"fn (&self, text: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if the regex matches the string given.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1143},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":397869,"byte_end":397873,"line_start":221,"line_end":221,"column_start":12,"column_end":16},"name":"find","qualname":"<Regex>::find","value":"fn <'t> (&self, text: &'t str) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the start and end byte range of the leftmost-first match in\n `text`. If no match exists, then `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1145},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":398587,"byte_end":398596,"line_start":243,"line_end":243,"column_start":12,"column_end":21},"name":"find_iter","qualname":"<Regex>::find_iter","value":"fn <'r, 't> (&'r self, text: &'t str) -> Matches<'r, 't>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator for each successive non-overlapping match in\n `text`, returning the start and end byte indices with respect to\n `text`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1148},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":401676,"byte_end":401684,"line_start":310,"line_end":310,"column_start":12,"column_end":20},"name":"captures","qualname":"<Regex>::captures","value":"fn <'t> (&self, text: &'t str) -> Option<Captures<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the capture groups corresponding to the leftmost-first\n match in `text`. Capture group `0` always corresponds to the entire\n match. If no match is found, then `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1151},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":403017,"byte_end":403030,"line_start":344,"line_end":344,"column_start":12,"column_end":25},"name":"captures_iter","qualname":"<Regex>::captures_iter","value":"fn <'r, 't> (&'r self, text: &'t str) -> CaptureMatches<'r, 't>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all the non-overlapping capture groups matched\n in `text`. This is operationally the same as `find_iter`, except it\n yields information about capturing group matches.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1154},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":403889,"byte_end":403894,"line_start":369,"line_end":369,"column_start":12,"column_end":17},"name":"split","qualname":"<Regex>::split","value":"fn <'r, 't> (&'r self, text: &'t str) -> Split<'r, 't>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator of substrings of `text` delimited by a match of the\n regular expression. Namely, each element of the iterator corresponds to\n text that *isn't* matched by the regular expression.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1157},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":404849,"byte_end":404855,"line_start":393,"line_end":393,"column_start":12,"column_end":18},"name":"splitn","qualname":"<Regex>::splitn","value":"fn <'r, 't> (&'r self, text: &'t str, limit: usize) -> SplitN<'r, 't>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator of at most `limit` substrings of `text` delimited\n by a match of the regular expression. (A `limit` of `0` will return no\n substrings.) Namely, each element of the iterator corresponds to text\n that *isn't* matched by the regular expression. The remainder of the\n string that is not split will be the last element in the iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1160},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":409365,"byte_end":409372,"line_start":505,"line_end":505,"column_start":12,"column_end":19},"name":"replace","qualname":"<Regex>::replace","value":"fn <'t, R> (&self, text: &'t str, rep: R) -> Cow<'t, str>","parent":null,"children":[],"decl_id":null,"docs":" Replaces the leftmost-first match with the replacement provided.\n The replacement can be a regular string (where `$N` and `$name` are\n expanded to match capture groups) or a function that takes the matches'\n `Captures` and returns the replaced string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1163},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":409829,"byte_end":409840,"line_start":519,"line_end":519,"column_start":12,"column_end":23},"name":"replace_all","qualname":"<Regex>::replace_all","value":"fn <'t, R> (&self, text: &'t str, rep: R) -> Cow<'t, str>","parent":null,"children":[],"decl_id":null,"docs":" Replaces all non-overlapping matches in `text` with the replacement\n provided. This is the same as calling `replacen` with `limit` set to\n `0`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1166},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":410309,"byte_end":410317,"line_start":533,"line_end":533,"column_start":12,"column_end":20},"name":"replacen","qualname":"<Regex>::replacen","value":"fn <'t, R> (&self, text: &'t str, limit: usize, mut rep: R) -> Cow<'t, str>","parent":null,"children":[],"decl_id":null,"docs":" Replaces at most `limit` non-overlapping matches in `text` with the\n replacement provided. If `limit` is 0, then all non-overlapping matches\n are replaced.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1170},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":413275,"byte_end":413289,"line_start":613,"line_end":613,"column_start":12,"column_end":26},"name":"shortest_match","qualname":"<Regex>::shortest_match","value":"fn (&self, text: &str) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the end location of a match in the text given.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1171},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":413676,"byte_end":413693,"line_start":623,"line_end":623,"column_start":12,"column_end":29},"name":"shortest_match_at","qualname":"<Regex>::shortest_match_at","value":"fn (&self, text: &str, start: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same as shortest_match, but starts the search at the given\n offset.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1172},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":414140,"byte_end":414151,"line_start":637,"line_end":637,"column_start":12,"column_end":23},"name":"is_match_at","qualname":"<Regex>::is_match_at","value":"fn (&self, text: &str, start: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns the same as is_match, but starts the search at the given\n offset.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1173},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":414547,"byte_end":414554,"line_start":647,"line_end":647,"column_start":12,"column_end":19},"name":"find_at","qualname":"<Regex>::find_at","value":"fn <'t> (&self, text: &'t str, start: usize) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same as find, but starts the search at the given\n offset.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1176},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":415231,"byte_end":415244,"line_start":668,"line_end":668,"column_start":12,"column_end":25},"name":"captures_read","qualname":"<Regex>::captures_read","value":"fn <'t> (&self, locs: &mut CaptureLocations, text: &'t str) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":" This is like `captures`, but uses\n [`CaptureLocations`](struct.CaptureLocations.html)\n instead of\n [`Captures`](struct.Captures.html) in order to amortize allocations.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1178},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":415743,"byte_end":415759,"line_start":682,"line_end":682,"column_start":12,"column_end":28},"name":"captures_read_at","qualname":"<Regex>::captures_read_at","value":"fn <'t> (&self, locs: &mut CaptureLocations, text: &'t str, start: usize) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same as captures, but starts the search at the given\n offset and populates the capture locations given.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1181},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":416307,"byte_end":416323,"line_start":700,"line_end":700,"column_start":12,"column_end":28},"name":"read_captures_at","qualname":"<Regex>::read_captures_at","value":"fn <'t> (&self, locs: &mut CaptureLocations, text: &'t str, start: usize) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":" An undocumented alias for `captures_read_at`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1184},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":416611,"byte_end":416617,"line_start":713,"line_end":713,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Regex>::as_str","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns the original string of this regex.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1185},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":416740,"byte_end":416753,"line_start":718,"line_end":718,"column_start":12,"column_end":25},"name":"capture_names","qualname":"<Regex>::capture_names","value":"fn (&self) -> CaptureNames","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the capture names.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1186},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":416889,"byte_end":416901,"line_start":723,"line_end":723,"column_start":12,"column_end":24},"name":"captures_len","qualname":"<Regex>::captures_len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of captures.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1187},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":417112,"byte_end":417129,"line_start":729,"line_end":729,"column_start":12,"column_end":29},"name":"capture_locations","qualname":"<Regex>::capture_locations","value":"fn (&self) -> CaptureLocations","parent":null,"children":[],"decl_id":null,"docs":" Returns an empty set of capture locations that can be reused in\n multiple calls to `captures_read` or `captures_read_at`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1188},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":417480,"byte_end":417489,"line_start":738,"line_end":738,"column_start":12,"column_end":21},"name":"locations","qualname":"<Regex>::locations","value":"fn (&self) -> CaptureLocations","parent":null,"children":[],"decl_id":null,"docs":" An alias for `capture_locations` to preserve backward compatibility.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1189},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":417845,"byte_end":417857,"line_start":749,"line_end":749,"column_start":12,"column_end":24},"name":"CaptureNames","qualname":"::re_unicode::CaptureNames","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over the names of all possible captures.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1200},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":418446,"byte_end":418451,"line_start":770,"line_end":770,"column_start":12,"column_end":17},"name":"Split","qualname":"::re_unicode::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":1203},{"krate":0,"index":1204}],"decl_id":null,"docs":" Yields all substrings delimited by a regular expression match.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1210},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":419460,"byte_end":419466,"line_start":805,"line_end":805,"column_start":12,"column_end":18},"name":"SplitN","qualname":"::re_unicode::SplitN","value":"SplitN {  }","parent":null,"children":[{"krate":0,"index":1213},{"krate":0,"index":1214}],"decl_id":null,"docs":" Yields at most `N` substrings delimited by a regular expression match.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2390},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":420875,"byte_end":420891,"line_start":850,"line_end":850,"column_start":12,"column_end":28},"name":"CaptureLocations","qualname":"::re_unicode::CaptureLocations","value":"","parent":null,"children":[],"decl_id":null,"docs":" CaptureLocations is a low level representation of the raw offsets of each\n submatch.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1220},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":421213,"byte_end":421222,"line_start":858,"line_end":858,"column_start":10,"column_end":19},"name":"Locations","qualname":"::re_unicode::Locations","value":"CaptureLocations","parent":null,"children":[],"decl_id":null,"docs":" A type alias for `CaptureLocations` for backwards compatibility.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1222},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":421580,"byte_end":421583,"line_start":866,"line_end":866,"column_start":12,"column_end":15},"name":"get","qualname":"<CaptureLocations>::get","value":"fn (&self, i: usize) -> Option<(usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Returns the start and end positions of the Nth capture group. Returns\n `None` if `i` is not a valid capture group or if the capture group did\n not match anything. The positions returned are *always* byte indices\n with respect to the original string matched.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":421559,"byte_end":421568,"line_start":865,"line_end":865,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1223},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":421878,"byte_end":421881,"line_start":875,"line_end":875,"column_start":12,"column_end":15},"name":"len","qualname":"<CaptureLocations>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of capturing groups.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":421857,"byte_end":421866,"line_start":874,"line_end":874,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1224},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":422241,"byte_end":422244,"line_start":886,"line_end":886,"column_start":12,"column_end":15},"name":"pos","qualname":"<CaptureLocations>::pos","value":"fn (&self, i: usize) -> Option<(usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":" An alias for the `get` method for backwards compatibility.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":422220,"byte_end":422229,"line_start":885,"line_end":885,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1225},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":422868,"byte_end":422876,"line_start":902,"line_end":902,"column_start":12,"column_end":20},"name":"Captures","qualname":"::re_unicode::Captures","value":"Captures {  }","parent":null,"children":[{"krate":0,"index":1227},{"krate":0,"index":1228},{"krate":0,"index":1229}],"decl_id":null,"docs":" Captures represents a group of captured strings for a single match.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1232},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":423774,"byte_end":423777,"line_start":928,"line_end":928,"column_start":12,"column_end":15},"name":"get","qualname":"<Captures>::get","value":"fn (&self, i: usize) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the match associated with the capture group at index `i`. If\n `i` does not correspond to a capture group, or if the capture group\n did not participate in the match, then `None` is returned.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1234},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":424062,"byte_end":424066,"line_start":934,"line_end":934,"column_start":12,"column_end":16},"name":"name","qualname":"<Captures>::name","value":"fn (&self, name: &str) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the match for the capture group named `name`. If `name` isn't a\n valid capture group or didn't match anything, then `None` is returned.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1236},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":424498,"byte_end":424502,"line_start":943,"line_end":943,"column_start":12,"column_end":16},"name":"iter","qualname":"<Captures>::iter","value":"fn <'c> (&'c self) -> SubCaptureMatches<'c, 't>","parent":null,"children":[],"decl_id":null,"docs":" An iterator that yields all capturing matches in the order in which\n they appear in the regex. If a particular capture group didn't\n participate in the match, then `None` is yielded for that capture.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1238},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":425513,"byte_end":425519,"line_start":963,"line_end":963,"column_start":12,"column_end":18},"name":"expand","qualname":"<Captures>::expand","value":"fn (&self, replacement: &str, dst: &mut String) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Expands all instances of `$name` in `replacement` to the corresponding\n capture group `name`, and writes them to the `dst` buffer given.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1239},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":425826,"byte_end":425829,"line_start":972,"line_end":972,"column_start":12,"column_end":15},"name":"len","qualname":"<Captures>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of captured groups.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":425805,"byte_end":425814,"line_start":971,"line_end":971,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1268},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":428533,"byte_end":428550,"line_start":1056,"line_end":1056,"column_start":12,"column_end":29},"name":"SubCaptureMatches","qualname":"::re_unicode::SubCaptureMatches","value":"SubCaptureMatches {  }","parent":null,"children":[{"krate":0,"index":1271},{"krate":0,"index":1272}],"decl_id":null,"docs":" An iterator that yields all capturing matches in the order in which they\n appear in the regex.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1280},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":429190,"byte_end":429204,"line_start":1078,"line_end":1078,"column_start":12,"column_end":26},"name":"CaptureMatches","qualname":"::re_unicode::CaptureMatches","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator that yields all non-overlapping capture groups matching a\n particular regular expression.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1291},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":429896,"byte_end":429903,"line_start":1101,"line_end":1101,"column_start":12,"column_end":19},"name":"Matches","qualname":"::re_unicode::Matches","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over all non-overlapping matches for a particular string.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1302},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":430528,"byte_end":430536,"line_start":1118,"line_end":1118,"column_start":11,"column_end":19},"name":"Replacer","qualname":"::re_unicode::Replacer","value":"Replacer","parent":null,"children":[{"krate":0,"index":1303},{"krate":0,"index":1304},{"krate":0,"index":1306}],"decl_id":null,"docs":" Replacer describes types that can be used to replace matches in a string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1303},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":430843,"byte_end":430857,"line_start":1126,"line_end":1126,"column_start":8,"column_end":22},"name":"replace_append","qualname":"::re_unicode::Replacer::replace_append","value":"fn (&mut self, caps: &Captures, dst: &mut String) -> ()","parent":{"krate":0,"index":1302},"children":[],"decl_id":null,"docs":" Appends text to `dst` to replace the current match.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1304},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":431262,"byte_end":431274,"line_start":1135,"line_end":1135,"column_start":8,"column_end":20},"name":"no_expansion","qualname":"::re_unicode::Replacer::no_expansion","value":"fn <'r> (&'r mut self) -> Option<Cow<'r, str>>","parent":{"krate":0,"index":1302},"children":[],"decl_id":null,"docs":" Return a fixed unchanging replacement string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1306},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":431995,"byte_end":432001,"line_start":1160,"line_end":1160,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::re_unicode::Replacer::by_ref","value":"fn <'r> (&'r mut self) -> ReplacerRef<'r, Self>","parent":{"krate":0,"index":1302},"children":[],"decl_id":null,"docs":" Return a `Replacer` that borrows and wraps this `Replacer`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2397},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":432229,"byte_end":432240,"line_start":1169,"line_end":1169,"column_start":12,"column_end":23},"name":"ReplacerRef","qualname":"::re_unicode::ReplacerRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" By-reference adaptor for a `Replacer`","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1321},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":433510,"byte_end":433518,"line_start":1211,"line_end":1211,"column_start":12,"column_end":20},"name":"NoExpand","qualname":"::re_unicode::NoExpand","value":"","parent":null,"children":[],"decl_id":null,"docs":" `NoExpand` indicates literal string replacement.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2406},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/sparse.rs","byte_start":434399,"byte_end":434408,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"SparseSet","qualname":"::sparse::SparseSet","value":"SparseSet {  }","parent":null,"children":[{"krate":0,"index":2407},{"krate":0,"index":2408}],"decl_id":null,"docs":" A sparse set used for representing ordered NFA states.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1333},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/sparse.rs","byte_start":434787,"byte_end":434790,"line_start":27,"line_end":27,"column_start":12,"column_end":15},"name":"new","qualname":"<SparseSet>::new","value":"fn (size: usize) -> SparseSet","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1334},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/sparse.rs","byte_start":434966,"byte_end":434969,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"len","qualname":"<SparseSet>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1335},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/sparse.rs","byte_start":435031,"byte_end":435039,"line_start":38,"line_end":38,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SparseSet>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1336},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/sparse.rs","byte_start":435105,"byte_end":435113,"line_start":42,"line_end":42,"column_start":12,"column_end":20},"name":"capacity","qualname":"<SparseSet>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1337},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/sparse.rs","byte_start":435180,"byte_end":435186,"line_start":46,"line_end":46,"column_start":12,"column_end":18},"name":"insert","qualname":"<SparseSet>::insert","value":"fn (&mut self, value: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1338},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/sparse.rs","byte_start":435362,"byte_end":435370,"line_start":53,"line_end":53,"column_start":12,"column_end":20},"name":"contains","qualname":"<SparseSet>::contains","value":"fn (&self, value: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1339},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/sparse.rs","byte_start":435498,"byte_end":435503,"line_start":58,"line_end":58,"column_start":12,"column_end":17},"name":"clear","qualname":"<SparseSet>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1361},"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","byte_start":28366,"byte_end":28374,"line_start":779,"line_end":779,"column_start":9,"column_end":17},"name":"internal","qualname":"::internal","value":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1362},{"krate":0,"index":1363},{"krate":0,"index":1366},{"krate":0,"index":1371},{"krate":0,"index":1372}],"decl_id":null,"docs":" The `internal` module exists to support suspicious activity, such as\n testing different matching engines and supporting the `regex-debug` CLI\n utility.\n","sig":null,"attributes":[{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/lib.rs","byte_start":28334,"byte_end":28357,"line_start":778,"line_end":778,"column_start":1,"column_end":24}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/backtrack.rs","byte_start":30861,"byte_end":30866,"line_start":60,"line_end":60,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/backtrack.rs","byte_start":31528,"byte_end":31535,"line_start":79,"line_end":79,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/cache.rs","byte_start":40033,"byte_end":40039,"line_start":23,"line_end":23,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/cache.rs","byte_start":40305,"byte_end":40316,"line_start":33,"line_end":33,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/compile.rs","byte_start":43254,"byte_end":43262,"line_start":38,"line_end":38,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/compile.rs","byte_start":70196,"byte_end":70205,"line_start":743,"line_end":743,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/compile.rs","byte_start":72542,"byte_end":72550,"line_start":821,"line_end":821,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/compile.rs","byte_start":73366,"byte_end":73378,"line_start":846,"line_end":846,"column_start":14,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/compile.rs","byte_start":78130,"byte_end":78141,"line_start":977,"line_end":977,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/compile.rs","byte_start":79350,"byte_end":79362,"line_start":1016,"line_end":1016,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/dfa.rs","byte_start":91879,"byte_end":91885,"line_start":215,"line_end":215,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/dfa.rs","byte_start":94218,"byte_end":94226,"line_start":287,"line_end":287,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/dfa.rs","byte_start":94648,"byte_end":94653,"line_start":304,"line_end":304,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/dfa.rs","byte_start":98857,"byte_end":98862,"line_start":412,"line_end":412,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/dfa.rs","byte_start":99681,"byte_end":99691,"line_start":436,"line_end":436,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/dfa.rs","byte_start":99983,"byte_end":99986,"line_start":445,"line_end":445,"column_start":10,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":255},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/dfa.rs","byte_start":148644,"byte_end":148652,"line_start":1609,"line_end":1609,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/dfa.rs","byte_start":149446,"byte_end":149457,"line_start":1645,"line_end":1645,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/dfa.rs","byte_start":151285,"byte_end":151295,"line_start":1699,"line_end":1699,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/dfa.rs","byte_start":151731,"byte_end":151735,"line_start":1725,"line_end":1725,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/dfa.rs","byte_start":152347,"byte_end":152352,"line_start":1756,"line_end":1756,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/dfa.rs","byte_start":152632,"byte_end":152643,"line_start":1766,"line_end":1766,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/dfa.rs","byte_start":153065,"byte_end":153079,"line_start":1780,"line_end":1780,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":319}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/dfa.rs","byte_start":153585,"byte_end":153595,"line_start":1798,"line_end":1798,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/error.rs","byte_start":158255,"byte_end":158260,"line_start":21,"line_end":21,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/error.rs","byte_start":158630,"byte_end":158635,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/error.rs","byte_start":159292,"byte_end":159297,"line_start":51,"line_end":51,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":338}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/exec.rs","byte_start":164091,"byte_end":164102,"line_start":116,"line_end":116,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":406},{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/exec.rs","byte_start":173805,"byte_end":173818,"line_start":372,"line_end":372,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/exec.rs","byte_start":174892,"byte_end":174902,"line_start":409,"line_end":409,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/exec.rs","byte_start":185486,"byte_end":185496,"line_start":676,"line_end":676,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":431},{"krate":0,"index":437},{"krate":0,"index":439},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":444},{"krate":0,"index":446},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":461},{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/exec.rs","byte_start":202738,"byte_end":202751,"line_start":1242,"line_end":1242,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/exec.rs","byte_start":202875,"byte_end":202879,"line_start":1248,"line_end":1248,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":468},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/exec.rs","byte_start":204710,"byte_end":204714,"line_start":1305,"line_end":1305,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/exec.rs","byte_start":204820,"byte_end":204832,"line_start":1311,"line_end":1311,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":484},{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/exec.rs","byte_start":212148,"byte_end":212165,"line_start":1510,"line_end":1510,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/expand.rs","byte_start":219187,"byte_end":219190,"line_start":112,"line_end":112,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/expand.rs","byte_start":219286,"byte_end":219289,"line_start":118,"line_end":118,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":513}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":227875,"byte_end":227882,"line_start":22,"line_end":22,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":231030,"byte_end":231039,"line_start":144,"line_end":144,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":231213,"byte_end":231222,"line_start":151,"line_end":151,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":231328,"byte_end":231337,"line_start":159,"line_end":159,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":574},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":579},{"krate":0,"index":581},{"krate":0,"index":583},{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":233539,"byte_end":233548,"line_start":233,"line_end":233,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":233777,"byte_end":233786,"line_start":240,"line_end":240,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":590},{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":233895,"byte_end":233904,"line_start":248,"line_end":248,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":597},{"krate":0,"index":599},{"krate":0,"index":601},{"krate":0,"index":603},{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":237306,"byte_end":237310,"line_start":350,"line_end":350,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":606}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":237520,"byte_end":237524,"line_start":359,"line_end":359,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":611},{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":238765,"byte_end":238769,"line_start":396,"line_end":396,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":238863,"byte_end":238867,"line_start":402,"line_end":402,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":238990,"byte_end":238994,"line_start":408,"line_end":408,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":619}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":239247,"byte_end":239251,"line_start":422,"line_end":422,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":623}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/literal/imp.rs","byte_start":242131,"byte_end":242146,"line_start":44,"line_end":44,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":665}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/literal/imp.rs","byte_start":246986,"byte_end":246993,"line_start":180,"line_end":180,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/literal/imp.rs","byte_start":249185,"byte_end":249196,"line_start":243,"line_end":243,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":689},{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/literal/imp.rs","byte_start":250619,"byte_end":250632,"line_start":297,"line_end":297,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/literal/imp.rs","byte_start":254549,"byte_end":254560,"line_start":406,"line_end":406,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":699},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/literal/imp.rs","byte_start":259879,"byte_end":259895,"line_start":569,"line_end":569,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/pikevm.rs","byte_start":282077,"byte_end":282082,"line_start":75,"line_end":75,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":740}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/pikevm.rs","byte_start":282331,"byte_end":282334,"line_start":83,"line_end":83,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":744},{"krate":0,"index":745},{"krate":0,"index":747},{"krate":0,"index":749},{"krate":0,"index":750}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/pikevm.rs","byte_start":291509,"byte_end":291516,"line_start":342,"line_end":342,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":295287,"byte_end":295294,"line_start":77,"line_end":77,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":768},{"krate":0,"index":769},{"krate":0,"index":770},{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":773},{"krate":0,"index":774}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":298275,"byte_end":298282,"line_start":161,"line_end":161,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":776},{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":298458,"byte_end":298465,"line_start":170,"line_end":170,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":303553,"byte_end":303557,"line_start":298,"line_end":298,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":791}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":305948,"byte_end":305958,"line_start":380,"line_end":380,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":793},{"krate":0,"index":795}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":307412,"byte_end":307421,"line_start":429,"line_end":429,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":798}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_builder.rs","byte_start":308072,"byte_end":308084,"line_start":18,"line_end":18,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":801}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":327057,"byte_end":327062,"line_start":26,"line_end":26,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":327933,"byte_end":327938,"line_start":59,"line_end":59,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":833}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":328732,"byte_end":328737,"line_start":79,"line_end":79,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":328914,"byte_end":328919,"line_start":86,"line_end":86,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":837}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":329224,"byte_end":329229,"line_start":97,"line_end":97,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":839}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":329313,"byte_end":329318,"line_start":103,"line_end":103,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":841},{"krate":0,"index":842}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":329529,"byte_end":329534,"line_start":113,"line_end":113,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":848},{"krate":0,"index":851},{"krate":0,"index":854},{"krate":0,"index":857},{"krate":0,"index":860},{"krate":0,"index":863},{"krate":0,"index":866},{"krate":0,"index":869}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":345986,"byte_end":345991,"line_start":532,"line_end":532,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":879},{"krate":0,"index":881},{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":350055,"byte_end":350060,"line_start":652,"line_end":652,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":891}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":351572,"byte_end":351579,"line_start":694,"line_end":694,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":900},{"krate":0,"index":901}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":352173,"byte_end":352187,"line_start":714,"line_end":714,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":911},{"krate":0,"index":912}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":352762,"byte_end":352767,"line_start":735,"line_end":735,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":922},{"krate":0,"index":923}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":353779,"byte_end":353785,"line_start":770,"line_end":770,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":932},{"krate":0,"index":933}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":354677,"byte_end":354689,"line_start":802,"line_end":802,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":356143,"byte_end":356159,"line_start":843,"line_end":843,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":357897,"byte_end":357905,"line_start":891,"line_end":891,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":957},{"krate":0,"index":959},{"krate":0,"index":961},{"krate":0,"index":963},{"krate":0,"index":964}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":360850,"byte_end":360858,"line_start":960,"line_end":960,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":967}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":361085,"byte_end":361098,"line_start":968,"line_end":968,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":976}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":362589,"byte_end":362597,"line_start":1013,"line_end":1013,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":984},{"krate":0,"index":985}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":363246,"byte_end":363254,"line_start":1035,"line_end":1035,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":991},{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":364051,"byte_end":364068,"line_start":1059,"line_end":1059,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1004},{"krate":0,"index":1005}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":366443,"byte_end":366454,"line_start":1129,"line_end":1129,"column_start":50,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1017},{"krate":0,"index":1018}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":367043,"byte_end":367044,"line_start":1151,"line_end":1151,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1027}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":367708,"byte_end":367716,"line_start":1171,"line_end":1171,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1034},{"krate":0,"index":1035}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_trait.rs","byte_start":383542,"byte_end":383551,"line_start":14,"line_end":14,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1044}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_trait.rs","byte_start":385105,"byte_end":385123,"line_start":59,"line_end":59,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1051},{"krate":0,"index":1052}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_trait.rs","byte_start":388457,"byte_end":388464,"line_start":158,"line_end":158,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1074},{"krate":0,"index":1075}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_trait.rs","byte_start":388748,"byte_end":388755,"line_start":174,"line_end":174,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1079},{"krate":0,"index":1080}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_trait.rs","byte_start":389982,"byte_end":389996,"line_start":214,"line_end":214,"column_start":13,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1089},{"krate":0,"index":1090}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_trait.rs","byte_start":390290,"byte_end":390304,"line_start":230,"line_end":230,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1094},{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":391977,"byte_end":391982,"line_start":35,"line_end":35,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1120},{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1124}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":392955,"byte_end":392960,"line_start":74,"line_end":74,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1130}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":395341,"byte_end":395346,"line_start":138,"line_end":138,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1132}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":395523,"byte_end":395528,"line_start":145,"line_end":145,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1134}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":395716,"byte_end":395721,"line_start":153,"line_end":153,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1136}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":395805,"byte_end":395810,"line_start":159,"line_end":159,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1138},{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":396021,"byte_end":396026,"line_start":169,"line_end":169,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1141},{"krate":0,"index":1142},{"krate":0,"index":1143},{"krate":0,"index":1145},{"krate":0,"index":1148},{"krate":0,"index":1151},{"krate":0,"index":1154},{"krate":0,"index":1157},{"krate":0,"index":1160},{"krate":0,"index":1163},{"krate":0,"index":1166}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":412482,"byte_end":412487,"line_start":591,"line_end":591,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1172},{"krate":0,"index":1173},{"krate":0,"index":1176},{"krate":0,"index":1178},{"krate":0,"index":1181}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":416541,"byte_end":416546,"line_start":711,"line_end":711,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1186},{"krate":0,"index":1187},{"krate":0,"index":1188}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":417926,"byte_end":417938,"line_start":751,"line_end":751,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1195},{"krate":0,"index":1196},{"krate":0,"index":1199}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":418537,"byte_end":418542,"line_start":775,"line_end":775,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1208},{"krate":0,"index":1209}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":419547,"byte_end":419553,"line_start":810,"line_end":810,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1218},{"krate":0,"index":1219}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":421249,"byte_end":421265,"line_start":860,"line_end":860,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1222},{"krate":0,"index":1223},{"krate":0,"index":1224}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":422992,"byte_end":423000,"line_start":908,"line_end":908,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1232},{"krate":0,"index":1234},{"krate":0,"index":1236},{"krate":0,"index":1238},{"krate":0,"index":1239}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":425905,"byte_end":425913,"line_start":977,"line_end":977,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1242}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":426140,"byte_end":426153,"line_start":985,"line_end":985,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1251}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":427200,"byte_end":427208,"line_start":1015,"line_end":1015,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1256},{"krate":0,"index":1257}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":427853,"byte_end":427861,"line_start":1037,"line_end":1037,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1263},{"krate":0,"index":1264}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":428654,"byte_end":428671,"line_start":1061,"line_end":1061,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1276},{"krate":0,"index":1277}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":429297,"byte_end":429311,"line_start":1082,"line_end":1082,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1288},{"krate":0,"index":1289}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":429982,"byte_end":429989,"line_start":1103,"line_end":1103,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1299},{"krate":0,"index":1300}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":432323,"byte_end":432334,"line_start":1171,"line_end":1171,"column_start":50,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1311},{"krate":0,"index":1312}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":432917,"byte_end":432918,"line_start":1193,"line_end":1193,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1320}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":433560,"byte_end":433568,"line_start":1213,"line_end":1213,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1327},{"krate":0,"index":1328}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Inherent","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/sparse.rs","byte_start":434764,"byte_end":434773,"line_start":26,"line_end":26,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1333},{"krate":0,"index":1334},{"krate":0,"index":1335},{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1338},{"krate":0,"index":1339}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/sparse.rs","byte_start":435569,"byte_end":435578,"line_start":63,"line_end":63,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1341},{"krate":0,"index":1342}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/backtrack.rs","byte_start":30861,"byte_end":30866,"line_start":60,"line_end":60,"column_start":6,"column_end":11},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1395},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/backtrack.rs","byte_start":31528,"byte_end":31535,"line_start":79,"line_end":79,"column_start":32,"column_end":39},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1377},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/cache.rs","byte_start":40033,"byte_end":40039,"line_start":23,"line_end":23,"column_start":19,"column_end":25},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1414},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/cache.rs","byte_start":40305,"byte_end":40316,"line_start":33,"line_end":33,"column_start":23,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1421},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/compile.rs","byte_start":43254,"byte_end":43262,"line_start":38,"line_end":38,"column_start":6,"column_end":14},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":103},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/compile.rs","byte_start":70196,"byte_end":70205,"line_start":743,"line_end":743,"column_start":6,"column_end":15},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/compile.rs","byte_start":72542,"byte_end":72550,"line_start":821,"line_end":821,"column_start":6,"column_end":14},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1465},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/compile.rs","byte_start":73366,"byte_end":73378,"line_start":846,"line_end":846,"column_start":14,"column_end":26},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":164},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/compile.rs","byte_start":78130,"byte_end":78141,"line_start":977,"line_end":977,"column_start":6,"column_end":17},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":177},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/compile.rs","byte_start":79350,"byte_end":79362,"line_start":1016,"line_end":1016,"column_start":6,"column_end":18},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/dfa.rs","byte_start":91879,"byte_end":91885,"line_start":215,"line_end":215,"column_start":9,"column_end":15},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1555},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/dfa.rs","byte_start":94218,"byte_end":94226,"line_start":287,"line_end":287,"column_start":23,"column_end":31},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":219},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/dfa.rs","byte_start":94648,"byte_end":94653,"line_start":304,"line_end":304,"column_start":6,"column_end":11},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1571},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/dfa.rs","byte_start":98857,"byte_end":98862,"line_start":412,"line_end":412,"column_start":6,"column_end":11},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1522},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/dfa.rs","byte_start":99681,"byte_end":99691,"line_start":436,"line_end":436,"column_start":6,"column_end":16},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1528},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/dfa.rs","byte_start":99983,"byte_end":99986,"line_start":445,"line_end":445,"column_start":10,"column_end":13},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1543},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/dfa.rs","byte_start":148644,"byte_end":148652,"line_start":1609,"line_end":1609,"column_start":6,"column_end":14},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1635},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/dfa.rs","byte_start":149446,"byte_end":149457,"line_start":1645,"line_end":1645,"column_start":6,"column_end":17},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1538},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/dfa.rs","byte_start":151285,"byte_end":151295,"line_start":1699,"line_end":1699,"column_start":6,"column_end":16},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1617},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/dfa.rs","byte_start":151731,"byte_end":151735,"line_start":1725,"line_end":1725,"column_start":6,"column_end":10},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1585},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/dfa.rs","byte_start":152347,"byte_end":152352,"line_start":1756,"line_end":1756,"column_start":21,"column_end":26},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1571},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/dfa.rs","byte_start":152632,"byte_end":152643,"line_start":1766,"line_end":1766,"column_start":21,"column_end":32},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1538},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/dfa.rs","byte_start":153065,"byte_end":153079,"line_start":1780,"line_end":1780,"column_start":25,"column_end":39},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":313},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/dfa.rs","byte_start":153585,"byte_end":153595,"line_start":1798,"line_end":1798,"column_start":21,"column_end":31},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1617},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/error.rs","byte_start":158255,"byte_end":158260,"line_start":21,"line_end":21,"column_start":30,"column_end":35},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1641},"to":{"krate":1,"index":1616}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/error.rs","byte_start":158630,"byte_end":158635,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1641},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/error.rs","byte_start":159292,"byte_end":159297,"line_start":51,"line_end":51,"column_start":21,"column_end":26},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1641},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/exec.rs","byte_start":164091,"byte_end":164102,"line_start":116,"line_end":116,"column_start":6,"column_end":17},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":379},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/exec.rs","byte_start":173805,"byte_end":173818,"line_start":372,"line_end":372,"column_start":32,"column_end":45},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":375},"to":{"krate":0,"index":1053}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/exec.rs","byte_start":174892,"byte_end":174902,"line_start":409,"line_end":409,"column_start":32,"column_end":42},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1656},"to":{"krate":0,"index":1053}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/exec.rs","byte_start":185486,"byte_end":185496,"line_start":676,"line_end":676,"column_start":10,"column_end":20},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1656},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/exec.rs","byte_start":202738,"byte_end":202751,"line_start":1242,"line_end":1242,"column_start":10,"column_end":23},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/exec.rs","byte_start":202875,"byte_end":202879,"line_start":1248,"line_end":1248,"column_start":6,"column_end":10},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":372},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/exec.rs","byte_start":204710,"byte_end":204714,"line_start":1305,"line_end":1305,"column_start":16,"column_end":20},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":372},"to":{"krate":2,"index":2181}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/exec.rs","byte_start":204820,"byte_end":204832,"line_start":1311,"line_end":1311,"column_start":6,"column_end":18},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1663},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/exec.rs","byte_start":212148,"byte_end":212165,"line_start":1510,"line_end":1510,"column_start":6,"column_end":23},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1727},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/expand.rs","byte_start":219187,"byte_end":219190,"line_start":112,"line_end":112,"column_start":28,"column_end":31},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1757},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/expand.rs","byte_start":219286,"byte_end":219289,"line_start":118,"line_end":118,"column_start":22,"column_end":25},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1757},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":227875,"byte_end":227882,"line_start":22,"line_end":22,"column_start":6,"column_end":13},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1784},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":229119,"byte_end":229124,"line_start":69,"line_end":69,"column_start":23,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":7636},"to":{"krate":0,"index":546}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":231030,"byte_end":231039,"line_start":144,"line_end":144,"column_start":10,"column_end":19},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1794},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":231213,"byte_end":231222,"line_start":151,"line_end":151,"column_start":25,"column_end":34},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1794},"to":{"krate":2,"index":1704}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":231328,"byte_end":231337,"line_start":159,"line_end":159,"column_start":20,"column_end":29},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1794},"to":{"krate":0,"index":546}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":233539,"byte_end":233548,"line_start":233,"line_end":233,"column_start":10,"column_end":19},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1806},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":233777,"byte_end":233786,"line_start":240,"line_end":240,"column_start":25,"column_end":34},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1806},"to":{"krate":2,"index":1704}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":233895,"byte_end":233904,"line_start":248,"line_end":248,"column_start":20,"column_end":29},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1806},"to":{"krate":0,"index":546}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":237306,"byte_end":237310,"line_start":350,"line_end":350,"column_start":21,"column_end":25},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1818},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":237520,"byte_end":237524,"line_start":359,"line_end":359,"column_start":6,"column_end":10},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1818},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":238765,"byte_end":238769,"line_start":396,"line_end":396,"column_start":21,"column_end":25},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1818},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":238863,"byte_end":238867,"line_start":402,"line_end":402,"column_start":29,"column_end":33},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1818},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":238990,"byte_end":238994,"line_start":408,"line_end":408,"column_start":26,"column_end":30},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1818},"to":{"krate":2,"index":2040}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/input.rs","byte_start":239247,"byte_end":239251,"line_start":422,"line_end":422,"column_start":27,"column_end":31},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1818},"to":{"krate":2,"index":2077}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/literal/imp.rs","byte_start":242131,"byte_end":242146,"line_start":44,"line_end":44,"column_start":6,"column_end":21},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1842},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/literal/imp.rs","byte_start":246986,"byte_end":246993,"line_start":180,"line_end":180,"column_start":6,"column_end":13},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/literal/imp.rs","byte_start":249185,"byte_end":249196,"line_start":243,"line_end":243,"column_start":23,"column_end":34},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":671},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/literal/imp.rs","byte_start":250619,"byte_end":250632,"line_start":297,"line_end":297,"column_start":6,"column_end":19},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1873},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/literal/imp.rs","byte_start":254549,"byte_end":254560,"line_start":406,"line_end":406,"column_start":6,"column_end":17},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1882},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/literal/imp.rs","byte_start":259879,"byte_end":259895,"line_start":569,"line_end":569,"column_start":6,"column_end":22},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1893},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/pikevm.rs","byte_start":282077,"byte_end":282082,"line_start":75,"line_end":75,"column_start":6,"column_end":11},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1913},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/pikevm.rs","byte_start":282331,"byte_end":282334,"line_start":83,"line_end":83,"column_start":20,"column_end":23},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1903},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/pikevm.rs","byte_start":291509,"byte_end":291516,"line_start":342,"line_end":342,"column_start":6,"column_end":13},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1921},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":295287,"byte_end":295294,"line_start":77,"line_end":77,"column_start":6,"column_end":13},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1940},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":298275,"byte_end":298282,"line_start":161,"line_end":161,"column_start":16,"column_end":23},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1940},"to":{"krate":2,"index":1704}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":298458,"byte_end":298465,"line_start":170,"line_end":170,"column_start":21,"column_end":28},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1940},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":303553,"byte_end":303557,"line_start":298,"line_end":298,"column_start":6,"column_end":10},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1958},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":305948,"byte_end":305958,"line_start":380,"line_end":380,"column_start":6,"column_end":16},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":2040},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/prog.rs","byte_start":307412,"byte_end":307421,"line_start":429,"line_end":429,"column_start":6,"column_end":15},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":2047},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_builder.rs","byte_start":308072,"byte_end":308084,"line_start":18,"line_end":18,"column_start":18,"column_end":30},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":2055},"to":{"krate":2,"index":2206}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":327057,"byte_end":327062,"line_start":26,"line_end":26,"column_start":10,"column_end":15},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":2159},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":327933,"byte_end":327938,"line_start":59,"line_end":59,"column_start":30,"column_end":35},"kind":{"Impl":{"id":70}},"from":{"krate":2,"index":26859},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":328732,"byte_end":328737,"line_start":79,"line_end":79,"column_start":23,"column_end":28},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2183},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":328914,"byte_end":328919,"line_start":86,"line_end":86,"column_start":21,"column_end":26},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2183},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":329224,"byte_end":329229,"line_start":97,"line_end":97,"column_start":21,"column_end":26},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":2183},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":329313,"byte_end":329318,"line_start":103,"line_end":103,"column_start":18,"column_end":23},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":2183},"to":{"krate":2,"index":6808}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":329529,"byte_end":329534,"line_start":113,"line_end":113,"column_start":6,"column_end":11},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":2183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":345986,"byte_end":345991,"line_start":532,"line_end":532,"column_start":6,"column_end":11},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":2183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":350055,"byte_end":350060,"line_start":652,"line_end":652,"column_start":6,"column_end":11},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":351572,"byte_end":351579,"line_start":694,"line_end":694,"column_start":27,"column_end":34},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":892},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":352173,"byte_end":352187,"line_start":714,"line_end":714,"column_start":27,"column_end":41},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":903},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":352762,"byte_end":352767,"line_start":735,"line_end":735,"column_start":27,"column_end":32},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":914},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":353779,"byte_end":353785,"line_start":770,"line_end":770,"column_start":27,"column_end":33},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":924},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":354677,"byte_end":354689,"line_start":802,"line_end":802,"column_start":23,"column_end":35},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":934},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":356143,"byte_end":356159,"line_start":843,"line_end":843,"column_start":6,"column_end":22},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":2188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":357897,"byte_end":357905,"line_start":891,"line_end":891,"column_start":10,"column_end":18},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":950},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":360850,"byte_end":360858,"line_start":960,"line_end":960,"column_start":25,"column_end":33},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":950},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":361085,"byte_end":361098,"line_start":968,"line_end":968,"column_start":29,"column_end":42},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":968},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":362589,"byte_end":362597,"line_start":1013,"line_end":1013,"column_start":27,"column_end":35},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":950},"to":{"krate":2,"index":1780}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":363246,"byte_end":363254,"line_start":1035,"line_end":1035,"column_start":33,"column_end":41},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":950},"to":{"krate":2,"index":1780}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":364051,"byte_end":364068,"line_start":1059,"line_end":1059,"column_start":27,"column_end":44},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":996},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":366443,"byte_end":366454,"line_start":1129,"line_end":1129,"column_start":50,"column_end":61},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2195},"to":{"krate":0,"index":1008}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":367043,"byte_end":367044,"line_start":1151,"line_end":1151,"column_start":25,"column_end":26},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1025},"to":{"krate":0,"index":1008}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_bytes.rs","byte_start":367708,"byte_end":367716,"line_start":1171,"line_end":1171,"column_start":23,"column_end":31},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1028},"to":{"krate":0,"index":1008}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_trait.rs","byte_start":383542,"byte_end":383551,"line_start":14,"line_end":14,"column_start":6,"column_end":15},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2354},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_trait.rs","byte_start":385105,"byte_end":385123,"line_start":59,"line_end":59,"column_start":23,"column_end":41},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1045},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_trait.rs","byte_start":386223,"byte_end":386228,"line_start":87,"line_end":87,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":1538},"to":{"krate":0,"index":1053}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_trait.rs","byte_start":388457,"byte_end":388464,"line_start":158,"line_end":158,"column_start":13,"column_end":20},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1064},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_trait.rs","byte_start":388748,"byte_end":388755,"line_start":174,"line_end":174,"column_start":26,"column_end":33},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1064},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_trait.rs","byte_start":389982,"byte_end":389996,"line_start":214,"line_end":214,"column_start":13,"column_end":27},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1081},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_trait.rs","byte_start":390290,"byte_end":390304,"line_start":230,"line_end":230,"column_start":26,"column_end":40},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1081},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":391977,"byte_end":391982,"line_start":35,"line_end":35,"column_start":10,"column_end":15},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2361},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":392955,"byte_end":392960,"line_start":74,"line_end":74,"column_start":30,"column_end":35},"kind":{"Impl":{"id":100}},"from":{"krate":2,"index":26859},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":395341,"byte_end":395346,"line_start":138,"line_end":138,"column_start":23,"column_end":28},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2385},"to":{"krate":2,"index":7641}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":395523,"byte_end":395528,"line_start":145,"line_end":145,"column_start":21,"column_end":26},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2385},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":395716,"byte_end":395721,"line_start":153,"line_end":153,"column_start":21,"column_end":26},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2385},"to":{"krate":2,"index":2258}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":395805,"byte_end":395810,"line_start":159,"line_end":159,"column_start":18,"column_end":23},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2385},"to":{"krate":2,"index":6808}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":396021,"byte_end":396026,"line_start":169,"line_end":169,"column_start":6,"column_end":11},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":412482,"byte_end":412487,"line_start":591,"line_end":591,"column_start":6,"column_end":11},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":416541,"byte_end":416546,"line_start":711,"line_end":711,"column_start":6,"column_end":11},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":417926,"byte_end":417938,"line_start":751,"line_end":751,"column_start":23,"column_end":35},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1189},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":418537,"byte_end":418542,"line_start":775,"line_end":775,"column_start":27,"column_end":32},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1200},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":419547,"byte_end":419553,"line_start":810,"line_end":810,"column_start":27,"column_end":33},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1210},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":421249,"byte_end":421265,"line_start":860,"line_end":860,"column_start":6,"column_end":22},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2390},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":422992,"byte_end":423000,"line_start":908,"line_end":908,"column_start":10,"column_end":18},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1225},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":425905,"byte_end":425913,"line_start":977,"line_end":977,"column_start":25,"column_end":33},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1225},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":426140,"byte_end":426153,"line_start":985,"line_end":985,"column_start":29,"column_end":42},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1243},"to":{"krate":2,"index":7636}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":427200,"byte_end":427208,"line_start":1015,"line_end":1015,"column_start":27,"column_end":35},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1225},"to":{"krate":2,"index":1780}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":427853,"byte_end":427861,"line_start":1037,"line_end":1037,"column_start":33,"column_end":41},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1225},"to":{"krate":2,"index":1780}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":428654,"byte_end":428671,"line_start":1061,"line_end":1061,"column_start":27,"column_end":44},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1268},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":429297,"byte_end":429311,"line_start":1082,"line_end":1082,"column_start":27,"column_end":41},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1280},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":429982,"byte_end":429989,"line_start":1103,"line_end":1103,"column_start":27,"column_end":34},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1291},"to":{"krate":2,"index":3653}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":432323,"byte_end":432334,"line_start":1171,"line_end":1171,"column_start":50,"column_end":61},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2397},"to":{"krate":0,"index":1302}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":432917,"byte_end":432918,"line_start":1193,"line_end":1193,"column_start":25,"column_end":26},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1318},"to":{"krate":0,"index":1302}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/re_unicode.rs","byte_start":433560,"byte_end":433568,"line_start":1213,"line_end":1213,"column_start":23,"column_end":31},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1321},"to":{"krate":0,"index":1302}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/sparse.rs","byte_start":434764,"byte_end":434773,"line_start":26,"line_end":26,"column_start":6,"column_end":15},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2406},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rosehsu/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-1.3.4/src/sparse.rs","byte_start":435569,"byte_end":435578,"line_start":63,"line_end":63,"column_start":16,"column_end":25},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2406},"to":{"krate":2,"index":1704}}]}